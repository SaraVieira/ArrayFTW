import { useRef, useEffect } from 'react';
import { BufferGeometry } from 'three';
import { EdgeSplitModifier } from 'three-stdlib';

function useEdgeSplit(cutOffAngle, tryKeepNormals = true) {
  const ref = useRef();
  const original = useRef();
  const modifier = useRef();
  useEffect(() => {
    if (!original.current && ref.current) {
      original.current = ref.current.geometry.clone();
      modifier.current = new EdgeSplitModifier();
    }
  }, []);
  useEffect(() => {
    if (original.current && ref.current && modifier.current) {
      let geometry = new BufferGeometry();
      geometry = original.current.clone();
      const modifiedGeometry = modifier.current.modify(geometry, cutOffAngle, tryKeepNormals);
      modifiedGeometry.computeVertexNormals();
      ref.current.geometry = modifiedGeometry;
    }
  }, [cutOffAngle, tryKeepNormals]);
  return ref;
}

export { useEdgeSplit };
