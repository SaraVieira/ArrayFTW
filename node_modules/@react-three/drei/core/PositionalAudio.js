import _extends from '@babel/runtime/helpers/esm/extends';
import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';
import { forwardRef, useRef, useState, useEffect, createElement } from 'react';
import { AudioListener, AudioLoader } from 'three';
import { useThree, useLoader } from '@react-three/fiber';
import mergeRefs from 'react-merge-refs';

const PositionalAudio = /*#__PURE__*/forwardRef((_ref, ref) => {
  let {
    url,
    distance = 1,
    loop = true
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["url", "distance", "loop"]);

  const sound = useRef();
  const camera = useThree(({
    camera
  }) => camera);
  const [listener] = useState(() => new AudioListener());
  const buffer = useLoader(AudioLoader, url);
  useEffect(() => {
    const _sound = sound.current;

    if (_sound) {
      _sound.setBuffer(buffer);

      _sound.setRefDistance(distance);

      _sound.setLoop(loop);

      _sound.play();
    }

    camera.add(listener);
    return () => {
      camera.remove(listener);

      if (_sound) {
        _sound.stop();

        _sound.disconnect();
      }
    };
  }, [buffer, camera, distance, listener, loop]);
  return /*#__PURE__*/createElement("positionalAudio", _extends({
    ref: mergeRefs([sound, ref]),
    args: [listener]
  }, props));
});

export { PositionalAudio };
