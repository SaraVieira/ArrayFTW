import _extends from '@babel/runtime/helpers/esm/extends';
import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';
import { forwardRef, useState, useMemo, Children, useLayoutEffect, createElement } from 'react';
import { useThree } from '@react-three/fiber';
import { Text as Text$1 } from 'troika-three-text';

// eslint-disable-next-line prettier/prettier
const Text = /*#__PURE__*/forwardRef((_ref, ref) => {
  let {
    anchorX = 'center',
    anchorY = 'middle',
    children,
    onSync
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["anchorX", "anchorY", "children", "onSync"]);

  const invalidate = useThree(({
    invalidate
  }) => invalidate);
  const [troikaMesh] = useState(() => new Text$1());
  const [nodes, text] = useMemo(() => {
    let n = [];
    let t = '';
    Children.forEach(children, child => {
      if (typeof child === 'string' || typeof child === 'number') {
        t += child;
      } else {
        n.push(child);
      }
    });
    return [n, t];
  }, [children]);
  useLayoutEffect(() => void troikaMesh.sync(() => {
    invalidate();
    if (onSync) onSync(troikaMesh);
  }));
  return /*#__PURE__*/createElement("primitive", _extends({
    dispose: undefined,
    object: troikaMesh,
    ref: ref,
    text: text,
    anchorX: anchorX,
    anchorY: anchorY
  }, props), nodes);
});

export { Text };
