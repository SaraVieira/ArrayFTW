"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("react"),t=require("@react-three/fiber"),r=require("@babel/runtime/helpers/extends"),i=require("@babel/runtime/helpers/objectWithoutPropertiesLoose"),o=require("three"),n=require("@babel/runtime/helpers/createClass"),s=require("@babel/runtime/helpers/assertThisInitialized"),u=require("@babel/runtime/helpers/inheritsLoose"),v=require("@babel/runtime/helpers/defineProperty");function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var c=a(r),x=a(i),d=a(n),l=a(s),f=a(u),p=a(v),y=function(e){function t(t){var r;return void 0===t&&(t={}),r=e.call(this,t)||this,p.default(l.default(r),"_time",void 0),p.default(l.default(r),"_distort",void 0),p.default(l.default(r),"_radius",void 0),r.setValues(t),r._time={value:0},r._distort={value:.4},r._radius={value:1},r}return f.default(t,e),t.prototype.onBeforeCompile=function(e){e.uniforms.time=this._time,e.uniforms.radius=this._radius,e.uniforms.distort=this._distort,e.vertexShader="\n      uniform float time;\n      uniform float radius;\n      uniform float distort;\n      #define GLSLIFY 1\nvec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}float snoise(vec3 v){const vec2 C=vec2(1.0/6.0,1.0/3.0);const vec4 D=vec4(0.0,0.5,1.0,2.0);vec3 i=floor(v+dot(v,C.yyy));vec3 x0=v-i+dot(i,C.xxx);vec3 g=step(x0.yzx,x0.xyz);vec3 l=1.0-g;vec3 i1=min(g.xyz,l.zxy);vec3 i2=max(g.xyz,l.zxy);vec3 x1=x0-i1+C.xxx;vec3 x2=x0-i2+C.yyy;vec3 x3=x0-D.yyy;i=mod289(i);vec4 p=permute(permute(permute(i.z+vec4(0.0,i1.z,i2.z,1.0))+i.y+vec4(0.0,i1.y,i2.y,1.0))+i.x+vec4(0.0,i1.x,i2.x,1.0));float n_=0.142857142857;vec3 ns=n_*D.wyz-D.xzx;vec4 j=p-49.0*floor(p*ns.z*ns.z);vec4 x_=floor(j*ns.z);vec4 y_=floor(j-7.0*x_);vec4 x=x_*ns.x+ns.yyyy;vec4 y=y_*ns.x+ns.yyyy;vec4 h=1.0-abs(x)-abs(y);vec4 b0=vec4(x.xy,y.xy);vec4 b1=vec4(x.zw,y.zw);vec4 s0=floor(b0)*2.0+1.0;vec4 s1=floor(b1)*2.0+1.0;vec4 sh=-step(h,vec4(0.0));vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;vec3 p0=vec3(a0.xy,h.x);vec3 p1=vec3(a0.zw,h.y);vec3 p2=vec3(a1.xy,h.z);vec3 p3=vec3(a1.zw,h.w);vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));p0*=norm.x;p1*=norm.y;p2*=norm.z;p3*=norm.w;vec4 m=max(0.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.0);m=m*m;return 42.0*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));}\n      "+e.vertexShader+"\n    ",e.vertexShader=e.vertexShader.replace("#include <begin_vertex>","\n        float updateTime = time / 50.0;\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\n        ")},d.default(t,[{key:"time",get:function(){return this._time.value},set:function(e){this._time.value=e}},{key:"distort",get:function(){return this._distort.value},set:function(e){this._distort.value=e}},{key:"radius",get:function(){return this._radius.value},set:function(e){this._radius.value=e}}]),t}(o.MeshPhysicalMaterial),m=e.forwardRef((function(r,i){var o=r.speed,n=void 0===o?1:o,s=x.default(r,["speed"]),u=e.useState((function(){return new y}))[0];return t.useFrame((function(e){return u&&(u.time=e.clock.getElapsedTime()*n)})),e.createElement("primitive",c.default({dispose:void 0,object:u,ref:i,attach:"material"},s))}));exports.MeshDistortMaterial=m;
