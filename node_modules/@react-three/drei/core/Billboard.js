import _extends from '@babel/runtime/helpers/esm/extends';
import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';
import { forwardRef, useRef, createElement } from 'react';
import { useFrame } from '@react-three/fiber';
import { Plane } from './shapes.js';
import mergeRefs from 'react-merge-refs';

const Billboard = /*#__PURE__*/forwardRef(function Billboard(_ref, ref) {
  let {
    follow = true,
    lockX = false,
    lockY = false,
    lockZ = false
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["follow", "lockX", "lockY", "lockZ"]);

  const localRef = useRef();
  useFrame(({
    camera
  }) => {
    if (!follow) return;

    if (localRef.current) {
      const prev = {
        x: localRef.current.rotation.x,
        y: localRef.current.rotation.y,
        z: localRef.current.rotation.z
      };
      localRef.current.lookAt(camera.position); // readjust any axis that is locked

      if (lockX) localRef.current.rotation.x = prev.x;
      if (lockY) localRef.current.rotation.y = prev.y;
      if (lockZ) localRef.current.rotation.z = prev.z;
    }
  });
  return /*#__PURE__*/createElement(Plane, _extends({
    ref: mergeRefs([localRef, ref])
  }, props));
});

export { Billboard };
