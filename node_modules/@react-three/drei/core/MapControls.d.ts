import * as React from 'react';
import { ReactThreeFiber } from '@react-three/fiber';
import { MapControls as MapControlsImpl } from 'three-stdlib';
export declare type MapControls = ReactThreeFiber.Overwrite<ReactThreeFiber.Object3DNode<MapControlsImpl, typeof MapControlsImpl>, {
    target?: ReactThreeFiber.Vector3;
    camera?: THREE.Camera;
}>;
declare global {
    namespace JSX {
        interface IntrinsicElements {
            mapControlsImpl: MapControls;
        }
    }
}
export declare const MapControls: React.ForwardRefExoticComponent<Pick<MapControls, "object" | "attach" | "attachArray" | "attachObject" | "args" | "children" | "key" | "onUpdate" | "position" | "up" | "scale" | "rotation" | "matrix" | "quaternion" | "layers" | "dispose" | "addEventListener" | "hasEventListener" | "removeEventListener" | "dispatchEvent" | keyof import("@react-three/fiber/dist/declarations/src/core/events").EventHandlers | "camera" | "reset" | "enabled" | "update" | "keys" | "connect" | "target" | "domElement" | "minDistance" | "maxDistance" | "minZoom" | "maxZoom" | "minPolarAngle" | "maxPolarAngle" | "minAzimuthAngle" | "maxAzimuthAngle" | "enableDamping" | "dampingFactor" | "enableZoom" | "zoomSpeed" | "enableRotate" | "rotateSpeed" | "enablePan" | "panSpeed" | "screenSpacePanning" | "keyPanSpeed" | "autoRotate" | "autoRotateSpeed" | "mouseButtons" | "touches" | "target0" | "position0" | "zoom0" | "_domElementKeyEvents" | "getPolarAngle" | "getAzimuthalAngle" | "listenToKeyEvents" | "saveState"> & React.RefAttributes<MapControlsImpl>>;
