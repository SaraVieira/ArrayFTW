{"ast":null,"code":"/**\n * ACES Filmic Tone Mapping Shader by Stephen Hill\n * source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\n *\n * this implementation of ACES is modified to accommodate a brighter viewing environment.\n * the scale factor of 1/0.6 is subjective. see discussion in #19621.\n */\nvar ACESFilmicToneMappingShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    exposure: {\n      value: 1.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['#define saturate(a) clamp( a, 0.0, 1.0 )', 'uniform sampler2D tDiffuse;', 'uniform float exposure;', 'varying vec2 vUv;', 'vec3 RRTAndODTFit( vec3 v ) {', '\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;', '\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;', '\treturn a / b;', '}', 'vec3 ACESFilmicToneMapping( vec3 color ) {', // sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n  '\tconst mat3 ACESInputMat = mat3(', '\t\tvec3( 0.59719, 0.07600, 0.02840 ),', // transposed from source\n  '\t\tvec3( 0.35458, 0.90834, 0.13383 ),', '\t\tvec3( 0.04823, 0.01566, 0.83777 )', '\t);', // ODT_SAT => XYZ => D60_2_D65 => sRGB\n  '\tconst mat3 ACESOutputMat = mat3(', '\t\tvec3(  1.60475, -0.10208, -0.00327 ),', // transposed from source\n  '\t\tvec3( -0.53108,  1.10813, -0.07276 ),', '\t\tvec3( -0.07367, -0.00605,  1.07602 )', '\t);', '\tcolor = ACESInputMat * color;', // Apply RRT and ODT\n  '\tcolor = RRTAndODTFit( color );', '\tcolor = ACESOutputMat * color;', // Clamp to [0, 1]\n  '\treturn saturate( color );', '}', 'void main() {', '\tvec4 tex = texture2D( tDiffuse, vUv );', '\ttex.rgb *= exposure / 0.6;', // pre-exposed, outside of the tone mapping function\n  '\tgl_FragColor = vec4( ACESFilmicToneMapping( tex.rgb ), tex.a );', '}'].join('\\n')\n};\nexport { ACESFilmicToneMappingShader };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/shaders/ACESFilmicToneMappingShader.js"],"names":["ACESFilmicToneMappingShader","uniforms","tDiffuse","value","exposure","vertexShader","join","fragmentShader"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,2BAA2B,GAAG;AAChCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE;AADC,KADF;AAIRC,IAAAA,QAAQ,EAAE;AACRD,MAAAA,KAAK,EAAE;AADC;AAJF,GADsB;AAShCE,EAAAA,YAAY,EAAE,CAAC,mBAAD,EAAsB,eAAtB,EAAuC,YAAvC,EAAqD,4EAArD,EAAmI,GAAnI,EAAwIC,IAAxI,CAA6I,IAA7I,CATkB;AAUhCC,EAAAA,cAAc,EAAE,CAAC,0CAAD,EAA6C,6BAA7C,EAA4E,yBAA5E,EAAuG,mBAAvG,EAA4H,+BAA5H,EAA6J,gDAA7J,EAA+M,wDAA/M,EAAyQ,gBAAzQ,EAA2R,GAA3R,EAAgS,4CAAhS,EAA8U;AAC9V,oCADgB,EACoB,sCADpB,EAC4D;AAC5E,wCAFgB,EAEwB,qCAFxB,EAE+D,KAF/D,EAEsE;AACtF,qCAHgB,EAGqB,yCAHrB,EAGgE;AAChF,2CAJgB,EAI2B,wCAJ3B,EAIqE,KAJrE,EAI4E,gCAJ5E,EAI8G;AAC9H,mCALgB,EAKmB,iCALnB,EAKsD;AACtE,8BANgB,EAMc,GANd,EAMmB,eANnB,EAMoC,yCANpC,EAM+E,6BAN/E,EAM8G;AAC9H,oEAPgB,EAOoD,GAPpD,EAOyDD,IAPzD,CAO8D,IAP9D;AAVgB,CAAlC;AAoBA,SAASN,2BAAT","sourcesContent":["/**\n * ACES Filmic Tone Mapping Shader by Stephen Hill\n * source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\n *\n * this implementation of ACES is modified to accommodate a brighter viewing environment.\n * the scale factor of 1/0.6 is subjective. see discussion in #19621.\n */\nvar ACESFilmicToneMappingShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    exposure: {\n      value: 1.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['#define saturate(a) clamp( a, 0.0, 1.0 )', 'uniform sampler2D tDiffuse;', 'uniform float exposure;', 'varying vec2 vUv;', 'vec3 RRTAndODTFit( vec3 v ) {', '\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;', '\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;', '\treturn a / b;', '}', 'vec3 ACESFilmicToneMapping( vec3 color ) {', // sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n  '\tconst mat3 ACESInputMat = mat3(', '\t\tvec3( 0.59719, 0.07600, 0.02840 ),', // transposed from source\n  '\t\tvec3( 0.35458, 0.90834, 0.13383 ),', '\t\tvec3( 0.04823, 0.01566, 0.83777 )', '\t);', // ODT_SAT => XYZ => D60_2_D65 => sRGB\n  '\tconst mat3 ACESOutputMat = mat3(', '\t\tvec3(  1.60475, -0.10208, -0.00327 ),', // transposed from source\n  '\t\tvec3( -0.53108,  1.10813, -0.07276 ),', '\t\tvec3( -0.07367, -0.00605,  1.07602 )', '\t);', '\tcolor = ACESInputMat * color;', // Apply RRT and ODT\n  '\tcolor = RRTAndODTFit( color );', '\tcolor = ACESOutputMat * color;', // Clamp to [0, 1]\n  '\treturn saturate( color );', '}', 'void main() {', '\tvec4 tex = texture2D( tDiffuse, vUv );', '\ttex.rgb *= exposure / 0.6;', // pre-exposed, outside of the tone mapping function\n  '\tgl_FragColor = vec4( ACESFilmicToneMapping( tex.rgb ), tex.a );', '}'].join('\\n')\n};\n\nexport { ACESFilmicToneMappingShader };\n"]},"metadata":{},"sourceType":"module"}