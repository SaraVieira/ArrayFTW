{"ast":null,"code":"import _regeneratorRuntime from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar ARButton = /*#__PURE__*/function () {\n  function ARButton() {\n    _classCallCheck(this, ARButton);\n  }\n\n  _createClass(ARButton, null, [{\n    key: \"createButton\",\n    value: function createButton(renderer) {\n      var sessionInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var button = document.createElement('button');\n\n      function showStartAR()\n      /*device*/\n      {\n        if (sessionInit.domOverlay === undefined) {\n          var overlay = document.createElement('div');\n          overlay.style.display = 'none';\n          document.body.appendChild(overlay);\n          var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n          svg.setAttribute('width', 38);\n          svg.setAttribute('height', 38);\n          svg.style.position = 'absolute';\n          svg.style.right = '20px';\n          svg.style.top = '20px';\n          svg.addEventListener('click', function () {\n            currentSession.end();\n          });\n          overlay.appendChild(svg);\n          var path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n          path.setAttribute('d', 'M 12,12 L 28,28 M 28,12 12,28');\n          path.setAttribute('stroke', '#fff');\n          path.setAttribute('stroke-width', 2);\n          svg.appendChild(path);\n\n          if (sessionInit.optionalFeatures === undefined) {\n            sessionInit.optionalFeatures = [];\n          }\n\n          sessionInit.optionalFeatures.push('dom-overlay');\n          sessionInit.domOverlay = {\n            root: overlay\n          };\n        } //\n\n\n        var currentSession = null;\n\n        function onSessionStarted(_x) {\n          return _onSessionStarted.apply(this, arguments);\n        }\n\n        function _onSessionStarted() {\n          _onSessionStarted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(session) {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    session.addEventListener('end', onSessionEnded);\n                    renderer.xr.setReferenceSpaceType('local');\n                    _context.next = 4;\n                    return renderer.xr.setSession(session);\n\n                  case 4:\n                    button.textContent = 'STOP AR';\n                    sessionInit.domOverlay.root.style.display = '';\n                    currentSession = session;\n\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n          return _onSessionStarted.apply(this, arguments);\n        }\n\n        function onSessionEnded()\n        /*event*/\n        {\n          currentSession.removeEventListener('end', onSessionEnded);\n          button.textContent = 'START AR';\n          sessionInit.domOverlay.root.style.display = 'none';\n          currentSession = null;\n        } //\n\n\n        button.style.display = '';\n        button.style.cursor = 'pointer';\n        button.style.left = 'calc(50% - 50px)';\n        button.style.width = '100px';\n        button.textContent = 'START AR';\n\n        button.onmouseenter = function () {\n          button.style.opacity = '1.0';\n        };\n\n        button.onmouseleave = function () {\n          button.style.opacity = '0.5';\n        };\n\n        button.onclick = function () {\n          if (currentSession === null) {\n            navigator.xr.requestSession('immersive-ar', sessionInit).then(onSessionStarted);\n          } else {\n            currentSession.end();\n          }\n        };\n      }\n\n      function disableButton() {\n        button.style.display = '';\n        button.style.cursor = 'auto';\n        button.style.left = 'calc(50% - 75px)';\n        button.style.width = '150px';\n        button.onmouseenter = null;\n        button.onmouseleave = null;\n        button.onclick = null;\n      }\n\n      function showARNotSupported() {\n        disableButton();\n        button.textContent = 'AR NOT SUPPORTED';\n      }\n\n      function stylizeElement(element) {\n        element.style.position = 'absolute';\n        element.style.bottom = '20px';\n        element.style.padding = '12px 6px';\n        element.style.border = '1px solid #fff';\n        element.style.borderRadius = '4px';\n        element.style.background = 'rgba(0,0,0,0.1)';\n        element.style.color = '#fff';\n        element.style.font = 'normal 13px sans-serif';\n        element.style.textAlign = 'center';\n        element.style.opacity = '0.5';\n        element.style.outline = 'none';\n        element.style.zIndex = '999';\n      }\n\n      if ('xr' in navigator) {\n        button.id = 'ARButton';\n        button.style.display = 'none';\n        stylizeElement(button);\n        navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\n          supported ? showStartAR() : showARNotSupported();\n        }).catch(showARNotSupported);\n        return button;\n      } else {\n        var message = document.createElement('a');\n\n        if (window.isSecureContext === false) {\n          message.href = document.location.href.replace(/^http:/, 'https:');\n          message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n        } else {\n          message.href = 'https://immersiveweb.dev/';\n          message.innerHTML = 'WEBXR NOT AVAILABLE';\n        }\n\n        message.style.left = 'calc(50% - 90px)';\n        message.style.width = '180px';\n        message.style.textDecoration = 'none';\n        stylizeElement(message);\n        return message;\n      }\n    }\n  }]);\n\n  return ARButton;\n}();\n\nexport { ARButton };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/webxr/ARButton.js"],"names":["ARButton","renderer","sessionInit","button","document","createElement","showStartAR","domOverlay","undefined","overlay","style","display","body","appendChild","svg","createElementNS","setAttribute","position","right","top","addEventListener","currentSession","end","path","optionalFeatures","push","root","onSessionStarted","session","onSessionEnded","xr","setReferenceSpaceType","setSession","textContent","removeEventListener","cursor","left","width","onmouseenter","opacity","onmouseleave","onclick","navigator","requestSession","then","disableButton","showARNotSupported","stylizeElement","element","bottom","padding","border","borderRadius","background","color","font","textAlign","outline","zIndex","id","isSessionSupported","supported","catch","message","window","isSecureContext","href","location","replace","innerHTML","textDecoration"],"mappings":"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","sourcesContent":["class ARButton {\n  static createButton(renderer, sessionInit = {}) {\n    const button = document.createElement('button');\n\n    function showStartAR()\n    /*device*/\n    {\n      if (sessionInit.domOverlay === undefined) {\n        var overlay = document.createElement('div');\n        overlay.style.display = 'none';\n        document.body.appendChild(overlay);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', 38);\n        svg.setAttribute('height', 38);\n        svg.style.position = 'absolute';\n        svg.style.right = '20px';\n        svg.style.top = '20px';\n        svg.addEventListener('click', function () {\n          currentSession.end();\n        });\n        overlay.appendChild(svg);\n        var path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('d', 'M 12,12 L 28,28 M 28,12 12,28');\n        path.setAttribute('stroke', '#fff');\n        path.setAttribute('stroke-width', 2);\n        svg.appendChild(path);\n\n        if (sessionInit.optionalFeatures === undefined) {\n          sessionInit.optionalFeatures = [];\n        }\n\n        sessionInit.optionalFeatures.push('dom-overlay');\n        sessionInit.domOverlay = {\n          root: overlay\n        };\n      } //\n\n\n      let currentSession = null;\n\n      async function onSessionStarted(session) {\n        session.addEventListener('end', onSessionEnded);\n        renderer.xr.setReferenceSpaceType('local');\n        await renderer.xr.setSession(session);\n        button.textContent = 'STOP AR';\n        sessionInit.domOverlay.root.style.display = '';\n        currentSession = session;\n      }\n\n      function onSessionEnded()\n      /*event*/\n      {\n        currentSession.removeEventListener('end', onSessionEnded);\n        button.textContent = 'START AR';\n        sessionInit.domOverlay.root.style.display = 'none';\n        currentSession = null;\n      } //\n\n\n      button.style.display = '';\n      button.style.cursor = 'pointer';\n      button.style.left = 'calc(50% - 50px)';\n      button.style.width = '100px';\n      button.textContent = 'START AR';\n\n      button.onmouseenter = function () {\n        button.style.opacity = '1.0';\n      };\n\n      button.onmouseleave = function () {\n        button.style.opacity = '0.5';\n      };\n\n      button.onclick = function () {\n        if (currentSession === null) {\n          navigator.xr.requestSession('immersive-ar', sessionInit).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n\n    function disableButton() {\n      button.style.display = '';\n      button.style.cursor = 'auto';\n      button.style.left = 'calc(50% - 75px)';\n      button.style.width = '150px';\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n\n    function showARNotSupported() {\n      disableButton();\n      button.textContent = 'AR NOT SUPPORTED';\n    }\n\n    function stylizeElement(element) {\n      element.style.position = 'absolute';\n      element.style.bottom = '20px';\n      element.style.padding = '12px 6px';\n      element.style.border = '1px solid #fff';\n      element.style.borderRadius = '4px';\n      element.style.background = 'rgba(0,0,0,0.1)';\n      element.style.color = '#fff';\n      element.style.font = 'normal 13px sans-serif';\n      element.style.textAlign = 'center';\n      element.style.opacity = '0.5';\n      element.style.outline = 'none';\n      element.style.zIndex = '999';\n    }\n\n    if ('xr' in navigator) {\n      button.id = 'ARButton';\n      button.style.display = 'none';\n      stylizeElement(button);\n      navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\n        supported ? showStartAR() : showARNotSupported();\n      }).catch(showARNotSupported);\n      return button;\n    } else {\n      const message = document.createElement('a');\n\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, 'https:');\n        message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n      } else {\n        message.href = 'https://immersiveweb.dev/';\n        message.innerHTML = 'WEBXR NOT AVAILABLE';\n      }\n\n      message.style.left = 'calc(50% - 90px)';\n      message.style.width = '180px';\n      message.style.textDecoration = 'none';\n      stylizeElement(message);\n      return message;\n    }\n  }\n\n}\n\nexport { ARButton };\n"]},"metadata":{},"sourceType":"module"}