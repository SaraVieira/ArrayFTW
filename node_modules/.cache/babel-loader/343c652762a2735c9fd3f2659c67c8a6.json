{"ast":null,"code":"import { Vector3 } from 'three';\nimport { InputNode } from '../core/InputNode.js';\nimport { NodeUtils } from '../core/NodeUtils.js';\n\nfunction Vector3Node(x, y, z) {\n  InputNode.call(this, 'v3');\n  this.value = x instanceof Vector3 ? x : new Vector3(x, y, z);\n}\n\nVector3Node.prototype = Object.create(InputNode.prototype);\nVector3Node.prototype.constructor = Vector3Node;\nVector3Node.prototype.nodeType = 'Vector3';\nNodeUtils.addShortcuts(Vector3Node.prototype, 'value', ['x', 'y', 'z']);\n\nVector3Node.prototype.generateReadonly = function (builder, output, uuid, type\n/*, ns, needsUpdate*/\n) {\n  return builder.format('vec3( ' + this.x + ', ' + this.y + ', ' + this.z + ' )', type, output);\n};\n\nVector3Node.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.value.copy(source);\n  return this;\n};\n\nVector3Node.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.x = this.x;\n    data.y = this.y;\n    data.z = this.z;\n    if (this.readonly === true) data.readonly = true;\n  }\n\n  return data;\n};\n\nexport { Vector3Node };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/nodes/inputs/Vector3Node.js"],"names":["Vector3","InputNode","NodeUtils","Vector3Node","x","y","z","call","value","prototype","Object","create","constructor","nodeType","addShortcuts","generateReadonly","builder","output","uuid","type","format","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","readonly"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,SAASC,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;AAC5BL,EAAAA,SAAS,CAACM,IAAV,CAAe,IAAf,EAAqB,IAArB;AACA,OAAKC,KAAL,GAAaJ,CAAC,YAAYJ,OAAb,GAAuBI,CAAvB,GAA2B,IAAIJ,OAAJ,CAAYI,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,CAAxC;AACD;;AAEDH,WAAW,CAACM,SAAZ,GAAwBC,MAAM,CAACC,MAAP,CAAcV,SAAS,CAACQ,SAAxB,CAAxB;AACAN,WAAW,CAACM,SAAZ,CAAsBG,WAAtB,GAAoCT,WAApC;AACAA,WAAW,CAACM,SAAZ,CAAsBI,QAAtB,GAAiC,SAAjC;AACAX,SAAS,CAACY,YAAV,CAAuBX,WAAW,CAACM,SAAnC,EAA8C,OAA9C,EAAuD,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAvD;;AAEAN,WAAW,CAACM,SAAZ,CAAsBM,gBAAtB,GAAyC,UAAUC,OAAV,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC;AAC1E;AADyC,EAEvC;AACA,SAAOH,OAAO,CAACI,MAAR,CAAe,WAAW,KAAKhB,CAAhB,GAAoB,IAApB,GAA2B,KAAKC,CAAhC,GAAoC,IAApC,GAA2C,KAAKC,CAAhD,GAAoD,IAAnE,EAAyEa,IAAzE,EAA+EF,MAA/E,CAAP;AACD,CAJD;;AAMAd,WAAW,CAACM,SAAZ,CAAsBY,IAAtB,GAA6B,UAAUC,MAAV,EAAkB;AAC7CrB,EAAAA,SAAS,CAACQ,SAAV,CAAoBY,IAApB,CAAyBd,IAAzB,CAA8B,IAA9B,EAAoCe,MAApC;AACA,OAAKd,KAAL,CAAWa,IAAX,CAAgBC,MAAhB;AACA,SAAO,IAAP;AACD,CAJD;;AAMAnB,WAAW,CAACM,SAAZ,CAAsBc,MAAtB,GAA+B,UAAUC,IAAV,EAAgB;AAC7C,MAAIC,IAAI,GAAG,KAAKC,WAAL,CAAiBF,IAAjB,CAAX;;AAEA,MAAI,CAACC,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG,KAAKE,cAAL,CAAoBH,IAApB,CAAP;AACAC,IAAAA,IAAI,CAACrB,CAAL,GAAS,KAAKA,CAAd;AACAqB,IAAAA,IAAI,CAACpB,CAAL,GAAS,KAAKA,CAAd;AACAoB,IAAAA,IAAI,CAACnB,CAAL,GAAS,KAAKA,CAAd;AACA,QAAI,KAAKsB,QAAL,KAAkB,IAAtB,EAA4BH,IAAI,CAACG,QAAL,GAAgB,IAAhB;AAC7B;;AAED,SAAOH,IAAP;AACD,CAZD;;AAcA,SAAStB,WAAT","sourcesContent":["import { Vector3 } from 'three';\nimport { InputNode } from '../core/InputNode.js';\nimport { NodeUtils } from '../core/NodeUtils.js';\n\nfunction Vector3Node(x, y, z) {\n  InputNode.call(this, 'v3');\n  this.value = x instanceof Vector3 ? x : new Vector3(x, y, z);\n}\n\nVector3Node.prototype = Object.create(InputNode.prototype);\nVector3Node.prototype.constructor = Vector3Node;\nVector3Node.prototype.nodeType = 'Vector3';\nNodeUtils.addShortcuts(Vector3Node.prototype, 'value', ['x', 'y', 'z']);\n\nVector3Node.prototype.generateReadonly = function (builder, output, uuid, type\n/*, ns, needsUpdate*/\n) {\n  return builder.format('vec3( ' + this.x + ', ' + this.y + ', ' + this.z + ' )', type, output);\n};\n\nVector3Node.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.value.copy(source);\n  return this;\n};\n\nVector3Node.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.x = this.x;\n    data.y = this.y;\n    data.z = this.z;\n    if (this.readonly === true) data.readonly = true;\n  }\n\n  return data;\n};\n\nexport { Vector3Node };\n"]},"metadata":{},"sourceType":"module"}