{"ast":null,"code":"import { Color } from 'three';\nimport { Pass } from './Pass.js';\n\nvar ClearPass = function ClearPass(clearColor, clearAlpha) {\n  this.needsSwap = false;\n  this.clearColor = clearColor !== undefined ? clearColor : 0x000000;\n  this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n  this._oldClearColor = new Color();\n};\n\nClearPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: ClearPass,\n  render: function render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    var oldClearAlpha;\n\n    if (this.clearColor) {\n      renderer.getClearColor(this._oldClearColor);\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n    renderer.clear();\n\n    if (this.clearColor) {\n      renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n    }\n  }\n});\nexport { ClearPass };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/postprocessing/ClearPass.js"],"names":["Color","Pass","ClearPass","clearColor","clearAlpha","needsSwap","undefined","_oldClearColor","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","oldClearAlpha","getClearColor","getClearAlpha","setClearColor","setRenderTarget","renderToScreen","clear"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,SAASC,IAAT,QAAqB,WAArB;;AAEA,IAAIC,SAAS,GAAG,SAAZA,SAAY,CAAUC,UAAV,EAAsBC,UAAtB,EAAkC;AAChD,OAAKC,SAAL,GAAiB,KAAjB;AACA,OAAKF,UAAL,GAAkBA,UAAU,KAAKG,SAAf,GAA2BH,UAA3B,GAAwC,QAA1D;AACA,OAAKC,UAAL,GAAkBA,UAAU,KAAKE,SAAf,GAA2BF,UAA3B,GAAwC,CAA1D;AACA,OAAKG,cAAL,GAAsB,IAAIP,KAAJ,EAAtB;AACD,CALD;;AAOAE,SAAS,CAACM,SAAV,GAAsBC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACE,MAAP,CAAcV,IAAI,CAACO,SAAnB,CAAd,EAA6C;AACjEI,EAAAA,WAAW,EAAEV,SADoD;AAEjEW,EAAAA,MAAM,EAAE,gBAAUC,QAAV,EAAoBC,WAApB,EAAiCC;AACzC;AADQ,IAEN;AACA,QAAIC,aAAJ;;AAEA,QAAI,KAAKd,UAAT,EAAqB;AACnBW,MAAAA,QAAQ,CAACI,aAAT,CAAuB,KAAKX,cAA5B;AACAU,MAAAA,aAAa,GAAGH,QAAQ,CAACK,aAAT,EAAhB;AACAL,MAAAA,QAAQ,CAACM,aAAT,CAAuB,KAAKjB,UAA5B,EAAwC,KAAKC,UAA7C;AACD;;AAEDU,IAAAA,QAAQ,CAACO,eAAT,CAAyB,KAAKC,cAAL,GAAsB,IAAtB,GAA6BN,UAAtD;AACAF,IAAAA,QAAQ,CAACS,KAAT;;AAEA,QAAI,KAAKpB,UAAT,EAAqB;AACnBW,MAAAA,QAAQ,CAACM,aAAT,CAAuB,KAAKb,cAA5B,EAA4CU,aAA5C;AACD;AACF;AAnBgE,CAA7C,CAAtB;AAsBA,SAASf,SAAT","sourcesContent":["import { Color } from 'three';\nimport { Pass } from './Pass.js';\n\nvar ClearPass = function (clearColor, clearAlpha) {\n  this.needsSwap = false;\n  this.clearColor = clearColor !== undefined ? clearColor : 0x000000;\n  this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n  this._oldClearColor = new Color();\n};\n\nClearPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: ClearPass,\n  render: function (renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    var oldClearAlpha;\n\n    if (this.clearColor) {\n      renderer.getClearColor(this._oldClearColor);\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n    renderer.clear();\n\n    if (this.clearColor) {\n      renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n    }\n  }\n});\n\nexport { ClearPass };\n"]},"metadata":{},"sourceType":"module"}