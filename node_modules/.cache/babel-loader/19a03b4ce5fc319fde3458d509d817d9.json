{"ast":null,"code":"import { Loader, FileLoader, BufferGeometry, Float32BufferAttribute } from 'three';\n\nvar PDBLoader = function PDBLoader(manager) {\n  Loader.call(this, manager);\n};\n\nPDBLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: PDBLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  },\n  // Based on CanvasMol PDB parser\n  parse: function parse(text) {\n    function trim(text) {\n      return text.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function capitalize(text) {\n      return text.charAt(0).toUpperCase() + text.substr(1).toLowerCase();\n    }\n\n    function hash(s, e) {\n      return 's' + Math.min(s, e) + 'e' + Math.max(s, e);\n    }\n\n    function parseBond(start, length) {\n      var eatom = parseInt(lines[i].substr(start, length));\n\n      if (eatom) {\n        var h = hash(satom, eatom);\n\n        if (_bhash[h] === undefined) {\n          _bonds.push([satom - 1, eatom - 1, 1]);\n\n          _bhash[h] = _bonds.length - 1;\n        }\n      }\n    }\n\n    function buildGeometry() {\n      var build = {\n        geometryAtoms: new BufferGeometry(),\n        geometryBonds: new BufferGeometry(),\n        json: {\n          atoms: atoms\n        }\n      };\n      var geometryAtoms = build.geometryAtoms;\n      var geometryBonds = build.geometryBonds;\n      var i, l;\n      var x, y, z;\n      var verticesAtoms = [];\n      var colorsAtoms = [];\n      var verticesBonds = []; // atoms\n\n      for (i = 0, l = atoms.length; i < l; i++) {\n        var atom = atoms[i];\n        x = atom[0];\n        y = atom[1];\n        z = atom[2];\n        verticesAtoms.push(x, y, z);\n        var r = atom[3][0] / 255;\n        var g = atom[3][1] / 255;\n        var b = atom[3][2] / 255;\n        colorsAtoms.push(r, g, b);\n      } // bonds\n\n\n      for (i = 0, l = _bonds.length; i < l; i++) {\n        var bond = _bonds[i];\n        var start = bond[0];\n        var end = bond[1];\n        var startAtom = _atomMap[start];\n        var endAtom = _atomMap[end];\n        x = startAtom[0];\n        y = startAtom[1];\n        z = startAtom[2];\n        verticesBonds.push(x, y, z);\n        x = endAtom[0];\n        y = endAtom[1];\n        z = endAtom[2];\n        verticesBonds.push(x, y, z);\n      } // build geometry\n\n\n      geometryAtoms.setAttribute('position', new Float32BufferAttribute(verticesAtoms, 3));\n      geometryAtoms.setAttribute('color', new Float32BufferAttribute(colorsAtoms, 3));\n      geometryBonds.setAttribute('position', new Float32BufferAttribute(verticesBonds, 3));\n      return build;\n    }\n\n    var CPK = {\n      h: [255, 255, 255],\n      he: [217, 255, 255],\n      li: [204, 128, 255],\n      be: [194, 255, 0],\n      b: [255, 181, 181],\n      c: [144, 144, 144],\n      n: [48, 80, 248],\n      o: [255, 13, 13],\n      f: [144, 224, 80],\n      ne: [179, 227, 245],\n      na: [171, 92, 242],\n      mg: [138, 255, 0],\n      al: [191, 166, 166],\n      si: [240, 200, 160],\n      p: [255, 128, 0],\n      s: [255, 255, 48],\n      cl: [31, 240, 31],\n      ar: [128, 209, 227],\n      k: [143, 64, 212],\n      ca: [61, 255, 0],\n      sc: [230, 230, 230],\n      ti: [191, 194, 199],\n      v: [166, 166, 171],\n      cr: [138, 153, 199],\n      mn: [156, 122, 199],\n      fe: [224, 102, 51],\n      co: [240, 144, 160],\n      ni: [80, 208, 80],\n      cu: [200, 128, 51],\n      zn: [125, 128, 176],\n      ga: [194, 143, 143],\n      ge: [102, 143, 143],\n      as: [189, 128, 227],\n      se: [255, 161, 0],\n      br: [166, 41, 41],\n      kr: [92, 184, 209],\n      rb: [112, 46, 176],\n      sr: [0, 255, 0],\n      y: [148, 255, 255],\n      zr: [148, 224, 224],\n      nb: [115, 194, 201],\n      mo: [84, 181, 181],\n      tc: [59, 158, 158],\n      ru: [36, 143, 143],\n      rh: [10, 125, 140],\n      pd: [0, 105, 133],\n      ag: [192, 192, 192],\n      cd: [255, 217, 143],\n      in: [166, 117, 115],\n      sn: [102, 128, 128],\n      sb: [158, 99, 181],\n      te: [212, 122, 0],\n      i: [148, 0, 148],\n      xe: [66, 158, 176],\n      cs: [87, 23, 143],\n      ba: [0, 201, 0],\n      la: [112, 212, 255],\n      ce: [255, 255, 199],\n      pr: [217, 255, 199],\n      nd: [199, 255, 199],\n      pm: [163, 255, 199],\n      sm: [143, 255, 199],\n      eu: [97, 255, 199],\n      gd: [69, 255, 199],\n      tb: [48, 255, 199],\n      dy: [31, 255, 199],\n      ho: [0, 255, 156],\n      er: [0, 230, 117],\n      tm: [0, 212, 82],\n      yb: [0, 191, 56],\n      lu: [0, 171, 36],\n      hf: [77, 194, 255],\n      ta: [77, 166, 255],\n      w: [33, 148, 214],\n      re: [38, 125, 171],\n      os: [38, 102, 150],\n      ir: [23, 84, 135],\n      pt: [208, 208, 224],\n      au: [255, 209, 35],\n      hg: [184, 184, 208],\n      tl: [166, 84, 77],\n      pb: [87, 89, 97],\n      bi: [158, 79, 181],\n      po: [171, 92, 0],\n      at: [117, 79, 69],\n      rn: [66, 130, 150],\n      fr: [66, 0, 102],\n      ra: [0, 125, 0],\n      ac: [112, 171, 250],\n      th: [0, 186, 255],\n      pa: [0, 161, 255],\n      u: [0, 143, 255],\n      np: [0, 128, 255],\n      pu: [0, 107, 255],\n      am: [84, 92, 242],\n      cm: [120, 92, 227],\n      bk: [138, 79, 227],\n      cf: [161, 54, 212],\n      es: [179, 31, 212],\n      fm: [179, 31, 186],\n      md: [179, 13, 166],\n      no: [189, 13, 135],\n      lr: [199, 0, 102],\n      rf: [204, 0, 89],\n      db: [209, 0, 79],\n      sg: [217, 0, 69],\n      bh: [224, 0, 56],\n      hs: [230, 0, 46],\n      mt: [235, 0, 38],\n      ds: [235, 0, 38],\n      rg: [235, 0, 38],\n      cn: [235, 0, 38],\n      uut: [235, 0, 38],\n      uuq: [235, 0, 38],\n      uup: [235, 0, 38],\n      uuh: [235, 0, 38],\n      uus: [235, 0, 38],\n      uuo: [235, 0, 38]\n    };\n    var atoms = [];\n    var _bonds = [];\n    var _bhash = {};\n    var _atomMap = {};\n    var x, y, z, index, e; // parse\n\n    var lines = text.split('\\n');\n\n    for (var _i = 0, l = lines.length; _i < l; _i++) {\n      if (lines[_i].substr(0, 4) === 'ATOM' || lines[_i].substr(0, 6) === 'HETATM') {\n        x = parseFloat(lines[_i].substr(30, 7));\n        y = parseFloat(lines[_i].substr(38, 7));\n        z = parseFloat(lines[_i].substr(46, 7));\n        index = parseInt(lines[_i].substr(6, 5)) - 1;\n        e = trim(lines[_i].substr(76, 2)).toLowerCase();\n\n        if (e === '') {\n          e = trim(lines[_i].substr(12, 2)).toLowerCase();\n        }\n\n        var atomData = [x, y, z, CPK[e], capitalize(e)];\n        atoms.push(atomData);\n        _atomMap[index] = atomData;\n      } else if (lines[_i].substr(0, 6) === 'CONECT') {\n        var satom = parseInt(lines[_i].substr(6, 5));\n        parseBond(11, 5);\n        parseBond(16, 5);\n        parseBond(21, 5);\n        parseBond(26, 5);\n      }\n    } // build and return geometry\n\n\n    return buildGeometry();\n  }\n});\nexport { PDBLoader };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/loaders/PDBLoader.js"],"names":["Loader","FileLoader","BufferGeometry","Float32BufferAttribute","PDBLoader","manager","call","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","trim","replace","capitalize","charAt","toUpperCase","substr","toLowerCase","hash","s","Math","min","max","parseBond","start","length","eatom","parseInt","lines","i","h","satom","_bhash","undefined","_bonds","push","buildGeometry","build","geometryAtoms","geometryBonds","json","atoms","l","x","y","z","verticesAtoms","colorsAtoms","verticesBonds","atom","r","g","b","bond","end","startAtom","_atomMap","endAtom","setAttribute","CPK","he","li","be","c","n","o","f","ne","na","mg","al","si","p","cl","ar","k","ca","sc","ti","v","cr","mn","fe","co","ni","cu","zn","ga","ge","as","se","br","kr","rb","sr","zr","nb","mo","tc","ru","rh","pd","ag","cd","in","sn","sb","te","xe","cs","ba","la","ce","pr","nd","pm","sm","eu","gd","tb","dy","ho","er","tm","yb","lu","hf","ta","w","re","os","ir","pt","au","hg","tl","pb","bi","po","at","rn","fr","ra","ac","th","pa","u","np","pu","am","cm","bk","cf","es","fm","md","no","lr","rf","db","sg","bh","hs","mt","ds","rg","cn","uut","uuq","uup","uuh","uus","uuo","index","split","parseFloat","atomData"],"mappings":"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","sourcesContent":["import { Loader, FileLoader, BufferGeometry, Float32BufferAttribute } from 'three';\n\nvar PDBLoader = function (manager) {\n  Loader.call(this, manager);\n};\n\nPDBLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: PDBLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  },\n  // Based on CanvasMol PDB parser\n  parse: function (text) {\n    function trim(text) {\n      return text.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function capitalize(text) {\n      return text.charAt(0).toUpperCase() + text.substr(1).toLowerCase();\n    }\n\n    function hash(s, e) {\n      return 's' + Math.min(s, e) + 'e' + Math.max(s, e);\n    }\n\n    function parseBond(start, length) {\n      var eatom = parseInt(lines[i].substr(start, length));\n\n      if (eatom) {\n        var h = hash(satom, eatom);\n\n        if (_bhash[h] === undefined) {\n          _bonds.push([satom - 1, eatom - 1, 1]);\n\n          _bhash[h] = _bonds.length - 1;\n        }\n      }\n    }\n\n    function buildGeometry() {\n      var build = {\n        geometryAtoms: new BufferGeometry(),\n        geometryBonds: new BufferGeometry(),\n        json: {\n          atoms: atoms\n        }\n      };\n      var geometryAtoms = build.geometryAtoms;\n      var geometryBonds = build.geometryBonds;\n      var i, l;\n      var x, y, z;\n      var verticesAtoms = [];\n      var colorsAtoms = [];\n      var verticesBonds = []; // atoms\n\n      for (i = 0, l = atoms.length; i < l; i++) {\n        var atom = atoms[i];\n        x = atom[0];\n        y = atom[1];\n        z = atom[2];\n        verticesAtoms.push(x, y, z);\n        var r = atom[3][0] / 255;\n        var g = atom[3][1] / 255;\n        var b = atom[3][2] / 255;\n        colorsAtoms.push(r, g, b);\n      } // bonds\n\n\n      for (i = 0, l = _bonds.length; i < l; i++) {\n        var bond = _bonds[i];\n        var start = bond[0];\n        var end = bond[1];\n        var startAtom = _atomMap[start];\n        var endAtom = _atomMap[end];\n        x = startAtom[0];\n        y = startAtom[1];\n        z = startAtom[2];\n        verticesBonds.push(x, y, z);\n        x = endAtom[0];\n        y = endAtom[1];\n        z = endAtom[2];\n        verticesBonds.push(x, y, z);\n      } // build geometry\n\n\n      geometryAtoms.setAttribute('position', new Float32BufferAttribute(verticesAtoms, 3));\n      geometryAtoms.setAttribute('color', new Float32BufferAttribute(colorsAtoms, 3));\n      geometryBonds.setAttribute('position', new Float32BufferAttribute(verticesBonds, 3));\n      return build;\n    }\n\n    var CPK = {\n      h: [255, 255, 255],\n      he: [217, 255, 255],\n      li: [204, 128, 255],\n      be: [194, 255, 0],\n      b: [255, 181, 181],\n      c: [144, 144, 144],\n      n: [48, 80, 248],\n      o: [255, 13, 13],\n      f: [144, 224, 80],\n      ne: [179, 227, 245],\n      na: [171, 92, 242],\n      mg: [138, 255, 0],\n      al: [191, 166, 166],\n      si: [240, 200, 160],\n      p: [255, 128, 0],\n      s: [255, 255, 48],\n      cl: [31, 240, 31],\n      ar: [128, 209, 227],\n      k: [143, 64, 212],\n      ca: [61, 255, 0],\n      sc: [230, 230, 230],\n      ti: [191, 194, 199],\n      v: [166, 166, 171],\n      cr: [138, 153, 199],\n      mn: [156, 122, 199],\n      fe: [224, 102, 51],\n      co: [240, 144, 160],\n      ni: [80, 208, 80],\n      cu: [200, 128, 51],\n      zn: [125, 128, 176],\n      ga: [194, 143, 143],\n      ge: [102, 143, 143],\n      as: [189, 128, 227],\n      se: [255, 161, 0],\n      br: [166, 41, 41],\n      kr: [92, 184, 209],\n      rb: [112, 46, 176],\n      sr: [0, 255, 0],\n      y: [148, 255, 255],\n      zr: [148, 224, 224],\n      nb: [115, 194, 201],\n      mo: [84, 181, 181],\n      tc: [59, 158, 158],\n      ru: [36, 143, 143],\n      rh: [10, 125, 140],\n      pd: [0, 105, 133],\n      ag: [192, 192, 192],\n      cd: [255, 217, 143],\n      in: [166, 117, 115],\n      sn: [102, 128, 128],\n      sb: [158, 99, 181],\n      te: [212, 122, 0],\n      i: [148, 0, 148],\n      xe: [66, 158, 176],\n      cs: [87, 23, 143],\n      ba: [0, 201, 0],\n      la: [112, 212, 255],\n      ce: [255, 255, 199],\n      pr: [217, 255, 199],\n      nd: [199, 255, 199],\n      pm: [163, 255, 199],\n      sm: [143, 255, 199],\n      eu: [97, 255, 199],\n      gd: [69, 255, 199],\n      tb: [48, 255, 199],\n      dy: [31, 255, 199],\n      ho: [0, 255, 156],\n      er: [0, 230, 117],\n      tm: [0, 212, 82],\n      yb: [0, 191, 56],\n      lu: [0, 171, 36],\n      hf: [77, 194, 255],\n      ta: [77, 166, 255],\n      w: [33, 148, 214],\n      re: [38, 125, 171],\n      os: [38, 102, 150],\n      ir: [23, 84, 135],\n      pt: [208, 208, 224],\n      au: [255, 209, 35],\n      hg: [184, 184, 208],\n      tl: [166, 84, 77],\n      pb: [87, 89, 97],\n      bi: [158, 79, 181],\n      po: [171, 92, 0],\n      at: [117, 79, 69],\n      rn: [66, 130, 150],\n      fr: [66, 0, 102],\n      ra: [0, 125, 0],\n      ac: [112, 171, 250],\n      th: [0, 186, 255],\n      pa: [0, 161, 255],\n      u: [0, 143, 255],\n      np: [0, 128, 255],\n      pu: [0, 107, 255],\n      am: [84, 92, 242],\n      cm: [120, 92, 227],\n      bk: [138, 79, 227],\n      cf: [161, 54, 212],\n      es: [179, 31, 212],\n      fm: [179, 31, 186],\n      md: [179, 13, 166],\n      no: [189, 13, 135],\n      lr: [199, 0, 102],\n      rf: [204, 0, 89],\n      db: [209, 0, 79],\n      sg: [217, 0, 69],\n      bh: [224, 0, 56],\n      hs: [230, 0, 46],\n      mt: [235, 0, 38],\n      ds: [235, 0, 38],\n      rg: [235, 0, 38],\n      cn: [235, 0, 38],\n      uut: [235, 0, 38],\n      uuq: [235, 0, 38],\n      uup: [235, 0, 38],\n      uuh: [235, 0, 38],\n      uus: [235, 0, 38],\n      uuo: [235, 0, 38]\n    };\n    var atoms = [];\n    var _bonds = [];\n    var _bhash = {};\n    var _atomMap = {};\n    var x, y, z, index, e; // parse\n\n    var lines = text.split('\\n');\n\n    for (let i = 0, l = lines.length; i < l; i++) {\n      if (lines[i].substr(0, 4) === 'ATOM' || lines[i].substr(0, 6) === 'HETATM') {\n        x = parseFloat(lines[i].substr(30, 7));\n        y = parseFloat(lines[i].substr(38, 7));\n        z = parseFloat(lines[i].substr(46, 7));\n        index = parseInt(lines[i].substr(6, 5)) - 1;\n        e = trim(lines[i].substr(76, 2)).toLowerCase();\n\n        if (e === '') {\n          e = trim(lines[i].substr(12, 2)).toLowerCase();\n        }\n\n        var atomData = [x, y, z, CPK[e], capitalize(e)];\n        atoms.push(atomData);\n        _atomMap[index] = atomData;\n      } else if (lines[i].substr(0, 6) === 'CONECT') {\n        var satom = parseInt(lines[i].substr(6, 5));\n        parseBond(11, 5);\n        parseBond(16, 5);\n        parseBond(21, 5);\n        parseBond(26, 5);\n      }\n    } // build and return geometry\n\n\n    return buildGeometry();\n  }\n});\n\nexport { PDBLoader };\n"]},"metadata":{},"sourceType":"module"}