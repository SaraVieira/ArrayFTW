{"ast":null,"code":"import { useMemo, useEffect } from 'react';\nimport { RepeatWrapping, Vector2 } from 'three';\nimport { useTexture } from './useTexture.js';\nimport { normalsList } from '../helpers/normal-assets.js';\nvar NORMAL_ROOT = 'https://rawcdn.githack.com/emmelleppi/normal-maps/f24c810fc1d86b5b1e5dfea914b668f70b5f2923';\nvar DEFAULT_NORMAL = normalsList[0];\n\nfunction useNormalTexture() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _settings$repeat = settings.repeat,\n      repeat = _settings$repeat === void 0 ? [1, 1] : _settings$repeat,\n      _settings$anisotropy = settings.anisotropy,\n      anisotropy = _settings$anisotropy === void 0 ? 1 : _settings$anisotropy,\n      _settings$offset = settings.offset,\n      offset = _settings$offset === void 0 ? [0, 0] : _settings$offset;\n  var numTot = useMemo(function () {\n    return Object.keys(normalsList).length;\n  }, []);\n  var imageName = normalsList[id] || DEFAULT_NORMAL;\n  var url = NORMAL_ROOT + \"/normals/\" + imageName;\n  var normalTexture = useTexture(url);\n  useEffect(function () {\n    if (!normalTexture) return;\n    normalTexture.wrapS = normalTexture.wrapT = RepeatWrapping;\n    normalTexture.repeat = new Vector2(repeat[0], repeat[1]);\n    normalTexture.offset = new Vector2(offset[0], offset[1]);\n    normalTexture.anisotropy = anisotropy;\n  }, [normalTexture, anisotropy, repeat, offset]);\n  return [normalTexture, url, numTot];\n}\n\nexport { useNormalTexture };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/@react-three/drei/core/useNormalTexture.js"],"names":["useMemo","useEffect","RepeatWrapping","Vector2","useTexture","normalsList","NORMAL_ROOT","DEFAULT_NORMAL","useNormalTexture","id","settings","repeat","anisotropy","offset","numTot","Object","keys","length","imageName","url","normalTexture","wrapS","wrapT"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,OAAxC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,IAAMC,WAAW,GAAG,4FAApB;AACA,IAAMC,cAAc,GAAGF,WAAW,CAAC,CAAD,CAAlC;;AACA,SAASG,gBAAT,GAAiD;AAAA,MAAvBC,EAAuB,uEAAlB,CAAkB;AAAA,MAAfC,QAAe,uEAAJ,EAAI;AAC/C,yBAIIA,QAJJ,CACEC,MADF;AAAA,MACEA,MADF,iCACW,CAAC,CAAD,EAAI,CAAJ,CADX;AAAA,6BAIID,QAJJ,CAEEE,UAFF;AAAA,MAEEA,UAFF,qCAEe,CAFf;AAAA,yBAIIF,QAJJ,CAGEG,MAHF;AAAA,MAGEA,MAHF,iCAGW,CAAC,CAAD,EAAI,CAAJ,CAHX;AAKA,MAAMC,MAAM,GAAGd,OAAO,CAAC;AAAA,WAAMe,MAAM,CAACC,IAAP,CAAYX,WAAZ,EAAyBY,MAA/B;AAAA,GAAD,EAAwC,EAAxC,CAAtB;AACA,MAAMC,SAAS,GAAGb,WAAW,CAACI,EAAD,CAAX,IAAmBF,cAArC;AACA,MAAMY,GAAG,GAAGb,WAAW,GAAG,WAAd,GAA4BY,SAAxC;AACA,MAAME,aAAa,GAAGhB,UAAU,CAACe,GAAD,CAAhC;AACAlB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACmB,aAAL,EAAoB;AACpBA,IAAAA,aAAa,CAACC,KAAd,GAAsBD,aAAa,CAACE,KAAd,GAAsBpB,cAA5C;AACAkB,IAAAA,aAAa,CAACT,MAAd,GAAuB,IAAIR,OAAJ,CAAYQ,MAAM,CAAC,CAAD,CAAlB,EAAuBA,MAAM,CAAC,CAAD,CAA7B,CAAvB;AACAS,IAAAA,aAAa,CAACP,MAAd,GAAuB,IAAIV,OAAJ,CAAYU,MAAM,CAAC,CAAD,CAAlB,EAAuBA,MAAM,CAAC,CAAD,CAA7B,CAAvB;AACAO,IAAAA,aAAa,CAACR,UAAd,GAA2BA,UAA3B;AACD,GANQ,EAMN,CAACQ,aAAD,EAAgBR,UAAhB,EAA4BD,MAA5B,EAAoCE,MAApC,CANM,CAAT;AAOA,SAAO,CAACO,aAAD,EAAgBD,GAAhB,EAAqBL,MAArB,CAAP;AACD;;AAED,SAASN,gBAAT","sourcesContent":["import { useMemo, useEffect } from 'react';\nimport { RepeatWrapping, Vector2 } from 'three';\nimport { useTexture } from './useTexture.js';\nimport { normalsList } from '../helpers/normal-assets.js';\n\nconst NORMAL_ROOT = 'https://rawcdn.githack.com/emmelleppi/normal-maps/f24c810fc1d86b5b1e5dfea914b668f70b5f2923';\nconst DEFAULT_NORMAL = normalsList[0];\nfunction useNormalTexture(id = 0, settings = {}) {\n  const {\n    repeat = [1, 1],\n    anisotropy = 1,\n    offset = [0, 0]\n  } = settings;\n  const numTot = useMemo(() => Object.keys(normalsList).length, []);\n  const imageName = normalsList[id] || DEFAULT_NORMAL;\n  const url = NORMAL_ROOT + \"/normals/\" + imageName;\n  const normalTexture = useTexture(url);\n  useEffect(() => {\n    if (!normalTexture) return;\n    normalTexture.wrapS = normalTexture.wrapT = RepeatWrapping;\n    normalTexture.repeat = new Vector2(repeat[0], repeat[1]);\n    normalTexture.offset = new Vector2(offset[0], offset[1]);\n    normalTexture.anisotropy = anisotropy;\n  }, [normalTexture, anisotropy, repeat, offset]);\n  return [normalTexture, url, numTot];\n}\n\nexport { useNormalTexture };\n"]},"metadata":{},"sourceType":"module"}