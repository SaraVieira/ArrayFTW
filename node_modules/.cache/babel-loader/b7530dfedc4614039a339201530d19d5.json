{"ast":null,"code":"import { Vector2 } from 'three';\nimport { TempNode } from '../core/TempNode.js';\nimport { FunctionNode } from '../core/FunctionNode.js';\nimport { FloatNode } from '../inputs/FloatNode.js';\nimport { Vector2Node } from '../inputs/Vector2Node.js';\nimport { UVNode } from '../accessors/UVNode.js';\n\nfunction BlurNode(value, uv, radius, size) {\n  TempNode.call(this, 'v4');\n  this.value = value;\n  this.uv = uv || new UVNode();\n  this.radius = radius || new Vector2Node(1, 1);\n  this.size = size;\n  this.blurX = true;\n  this.blurY = true;\n  this.horizontal = new FloatNode(1 / 64);\n  this.vertical = new FloatNode(1 / 64);\n}\n\nBlurNode.Nodes = function () {\n  var blurX = new FunctionNode(['vec4 blurX( sampler2D tex, vec2 uv, float s ) {', '\tvec4 sum = vec4( 0.0 );', '\tsum += texture2D( tex, vec2( uv.x - 4.0 * s, uv.y ) ) * 0.051;', '\tsum += texture2D( tex, vec2( uv.x - 3.0 * s, uv.y ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x - 2.0 * s, uv.y ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x - 1.0 * s, uv.y ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;', '\tsum += texture2D( tex, vec2( uv.x + 1.0 * s, uv.y ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x + 2.0 * s, uv.y ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x + 3.0 * s, uv.y ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x + 4.0 * s, uv.y ) ) * 0.051;', '\treturn sum * .667;', '}'].join('\\n'));\n  var blurY = new FunctionNode(['vec4 blurY( sampler2D tex, vec2 uv, float s ) {', '\tvec4 sum = vec4( 0.0 );', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 4.0 * s ) ) * 0.051;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 3.0 * s ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 2.0 * s ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 1.0 * s ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 1.0 * s ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 2.0 * s ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 3.0 * s ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 4.0 * s ) ) * 0.051;', '\treturn sum * .667;', '}'].join('\\n'));\n  return {\n    blurX: blurX,\n    blurY: blurY\n  };\n}();\n\nBlurNode.prototype = Object.create(TempNode.prototype);\nBlurNode.prototype.constructor = BlurNode;\nBlurNode.prototype.nodeType = 'Blur';\nBlurNode.prototype.hashProperties = ['blurX', 'blurY'];\n\nBlurNode.prototype.updateFrame = function ()\n/* frame */\n{\n  if (this.size) {\n    this.horizontal.value = this.radius.x / this.size.x;\n    this.vertical.value = this.radius.y / this.size.y;\n  } else if (this.value.value && this.value.value.image) {\n    var image = this.value.value.image;\n    this.horizontal.value = this.radius.x / image.width;\n    this.vertical.value = this.radius.y / image.height;\n  }\n};\n\nBlurNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    var blurCode = [],\n        code;\n    var blurX = builder.include(BlurNode.Nodes.blurX),\n        blurY = builder.include(BlurNode.Nodes.blurY);\n\n    if (this.blurX) {\n      blurCode.push(blurX + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.uv.build(builder, 'v2') + ', ' + this.horizontal.build(builder, 'f') + ' )');\n    }\n\n    if (this.blurY) {\n      blurCode.push(blurY + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.uv.build(builder, 'v2') + ', ' + this.vertical.build(builder, 'f') + ' )');\n    }\n\n    if (blurCode.length == 2) code = '( ' + blurCode.join(' + ') + ' / 2.0 )';else if (blurCode.length) code = '( ' + blurCode[0] + ' )';else code = 'vec4( 0.0 )';\n    return builder.format(code, this.getType(builder), output);\n  } else {\n    console.warn('THREE.BlurNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('vec4( 0.0 )', this.getType(builder), output);\n  }\n};\n\nBlurNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.value = source.value;\n  this.uv = source.uv;\n  this.radius = source.radius;\n  if (source.size !== undefined) this.size = new Vector2(source.size.x, source.size.y);\n  this.blurX = source.blurX;\n  this.blurY = source.blurY;\n  return this;\n};\n\nBlurNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n    data.uv = this.uv.toJSON(meta).uuid;\n    data.radius = this.radius.toJSON(meta).uuid;\n    if (this.size) data.size = {\n      x: this.size.x,\n      y: this.size.y\n    };\n    data.blurX = this.blurX;\n    data.blurY = this.blurY;\n  }\n\n  return data;\n};\n\nexport { BlurNode };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/nodes/effects/BlurNode.js"],"names":["Vector2","TempNode","FunctionNode","FloatNode","Vector2Node","UVNode","BlurNode","value","uv","radius","size","call","blurX","blurY","horizontal","vertical","Nodes","join","prototype","Object","create","constructor","nodeType","hashProperties","updateFrame","x","y","image","width","height","generate","builder","output","isShader","blurCode","code","include","push","build","length","format","getType","console","warn","shader","copy","source","undefined","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"mappings":"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","sourcesContent":["import { Vector2 } from 'three';\nimport { TempNode } from '../core/TempNode.js';\nimport { FunctionNode } from '../core/FunctionNode.js';\nimport { FloatNode } from '../inputs/FloatNode.js';\nimport { Vector2Node } from '../inputs/Vector2Node.js';\nimport { UVNode } from '../accessors/UVNode.js';\n\nfunction BlurNode(value, uv, radius, size) {\n  TempNode.call(this, 'v4');\n  this.value = value;\n  this.uv = uv || new UVNode();\n  this.radius = radius || new Vector2Node(1, 1);\n  this.size = size;\n  this.blurX = true;\n  this.blurY = true;\n  this.horizontal = new FloatNode(1 / 64);\n  this.vertical = new FloatNode(1 / 64);\n}\n\nBlurNode.Nodes = function () {\n  var blurX = new FunctionNode(['vec4 blurX( sampler2D tex, vec2 uv, float s ) {', '\tvec4 sum = vec4( 0.0 );', '\tsum += texture2D( tex, vec2( uv.x - 4.0 * s, uv.y ) ) * 0.051;', '\tsum += texture2D( tex, vec2( uv.x - 3.0 * s, uv.y ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x - 2.0 * s, uv.y ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x - 1.0 * s, uv.y ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;', '\tsum += texture2D( tex, vec2( uv.x + 1.0 * s, uv.y ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x + 2.0 * s, uv.y ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x + 3.0 * s, uv.y ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x + 4.0 * s, uv.y ) ) * 0.051;', '\treturn sum * .667;', '}'].join('\\n'));\n  var blurY = new FunctionNode(['vec4 blurY( sampler2D tex, vec2 uv, float s ) {', '\tvec4 sum = vec4( 0.0 );', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 4.0 * s ) ) * 0.051;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 3.0 * s ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 2.0 * s ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 1.0 * s ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 1.0 * s ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 2.0 * s ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 3.0 * s ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 4.0 * s ) ) * 0.051;', '\treturn sum * .667;', '}'].join('\\n'));\n  return {\n    blurX: blurX,\n    blurY: blurY\n  };\n}();\n\nBlurNode.prototype = Object.create(TempNode.prototype);\nBlurNode.prototype.constructor = BlurNode;\nBlurNode.prototype.nodeType = 'Blur';\nBlurNode.prototype.hashProperties = ['blurX', 'blurY'];\n\nBlurNode.prototype.updateFrame = function ()\n/* frame */\n{\n  if (this.size) {\n    this.horizontal.value = this.radius.x / this.size.x;\n    this.vertical.value = this.radius.y / this.size.y;\n  } else if (this.value.value && this.value.value.image) {\n    var image = this.value.value.image;\n    this.horizontal.value = this.radius.x / image.width;\n    this.vertical.value = this.radius.y / image.height;\n  }\n};\n\nBlurNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    var blurCode = [],\n        code;\n    var blurX = builder.include(BlurNode.Nodes.blurX),\n        blurY = builder.include(BlurNode.Nodes.blurY);\n\n    if (this.blurX) {\n      blurCode.push(blurX + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.uv.build(builder, 'v2') + ', ' + this.horizontal.build(builder, 'f') + ' )');\n    }\n\n    if (this.blurY) {\n      blurCode.push(blurY + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.uv.build(builder, 'v2') + ', ' + this.vertical.build(builder, 'f') + ' )');\n    }\n\n    if (blurCode.length == 2) code = '( ' + blurCode.join(' + ') + ' / 2.0 )';else if (blurCode.length) code = '( ' + blurCode[0] + ' )';else code = 'vec4( 0.0 )';\n    return builder.format(code, this.getType(builder), output);\n  } else {\n    console.warn('THREE.BlurNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('vec4( 0.0 )', this.getType(builder), output);\n  }\n};\n\nBlurNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.value = source.value;\n  this.uv = source.uv;\n  this.radius = source.radius;\n  if (source.size !== undefined) this.size = new Vector2(source.size.x, source.size.y);\n  this.blurX = source.blurX;\n  this.blurY = source.blurY;\n  return this;\n};\n\nBlurNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n    data.uv = this.uv.toJSON(meta).uuid;\n    data.radius = this.radius.toJSON(meta).uuid;\n    if (this.size) data.size = {\n      x: this.size.x,\n      y: this.size.y\n    };\n    data.blurX = this.blurX;\n    data.blurY = this.blurY;\n  }\n\n  return data;\n};\n\nexport { BlurNode };\n"]},"metadata":{},"sourceType":"module"}