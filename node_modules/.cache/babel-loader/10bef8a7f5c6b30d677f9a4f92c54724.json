{"ast":null,"code":"import { useLayoutEffect } from 'react';\nimport { PMREMGenerator, CubeTextureLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { RGBELoader } from 'three-stdlib';\nimport { useAsset } from 'use-asset';\nimport { presetsObj } from '../helpers/environment-assets.js';\n\nfunction getTexture(texture, gen, isCubeMap) {\n  if (isCubeMap) {\n    gen.compileEquirectangularShader();\n    return gen.fromCubemap(texture).texture;\n  }\n\n  return gen.fromEquirectangular(texture).texture;\n}\n\nvar CUBEMAP_ROOT = 'https://rawcdn.githack.com/mattrossman/drei-assets/b597559ff62f85ec691df28cbea5ecb1263a2085';\n\nfunction Environment(_ref) {\n  var _ref$background = _ref.background,\n      background = _ref$background === void 0 ? false : _ref$background,\n      _ref$files = _ref.files,\n      files = _ref$files === void 0 ? ['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'] : _ref$files,\n      _ref$path = _ref.path,\n      path = _ref$path === void 0 ? '/' : _ref$path,\n      _ref$preset = _ref.preset,\n      preset = _ref$preset === void 0 ? undefined : _ref$preset,\n      scene = _ref.scene;\n\n  if (preset) {\n    if (!(preset in presetsObj)) {\n      throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    }\n\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT + '/hdri/';\n  }\n\n  var defaultScene = useThree(function (_ref2) {\n    var scene = _ref2.scene;\n    return scene;\n  });\n  var gl = useThree(function (_ref3) {\n    var gl = _ref3.gl;\n    return gl;\n  });\n  var isCubeMap = Array.isArray(files);\n  var loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  var loaderResult = useLoader(loader, isCubeMap ? [files] : files, function (loader) {\n    return loader.setPath(path);\n  });\n  var map = isCubeMap ? loaderResult[0] : loaderResult; // PMREMGenerator takes its sweet time to generate the env-map,\n  // Let's make this part of suspense, or else it just yields a frame-skip\n\n  var texture = useAsset(function () {\n    return new Promise(function (res) {\n      var gen = new PMREMGenerator(gl);\n      var texture = getTexture(map, gen, isCubeMap);\n      gen.dispose();\n      map.dispose();\n      res(texture);\n    });\n  }, map);\n  useLayoutEffect(function () {\n    var oldbg = scene ? scene.background : defaultScene.background;\n    var oldenv = scene ? scene.environment : defaultScene.environment;\n\n    if (scene) {\n      scene.environment = texture;\n\n      if (background) {\n        scene.background = texture;\n      }\n    } else {\n      defaultScene.environment = texture;\n\n      if (background) {\n        defaultScene.background = texture;\n      }\n    }\n\n    return function () {\n      if (scene) {\n        scene.environment = oldenv;\n        scene.background = oldbg;\n      } else {\n        defaultScene.environment = oldenv;\n        defaultScene.background = oldbg;\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [texture, background, scene]);\n  return null;\n}\n\nexport { Environment };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/@react-three/drei/core/Environment.js"],"names":["useLayoutEffect","PMREMGenerator","CubeTextureLoader","useThree","useLoader","RGBELoader","useAsset","presetsObj","getTexture","texture","gen","isCubeMap","compileEquirectangularShader","fromCubemap","fromEquirectangular","CUBEMAP_ROOT","Environment","background","files","path","preset","undefined","scene","Error","Object","keys","join","defaultScene","gl","Array","isArray","loader","loaderResult","setPath","map","Promise","res","dispose","oldbg","oldenv","environment"],"mappings":"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","sourcesContent":["import { useLayoutEffect } from 'react';\nimport { PMREMGenerator, CubeTextureLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { RGBELoader } from 'three-stdlib';\nimport { useAsset } from 'use-asset';\nimport { presetsObj } from '../helpers/environment-assets.js';\n\nfunction getTexture(texture, gen, isCubeMap) {\n  if (isCubeMap) {\n    gen.compileEquirectangularShader();\n    return gen.fromCubemap(texture).texture;\n  }\n\n  return gen.fromEquirectangular(texture).texture;\n}\n\nconst CUBEMAP_ROOT = 'https://rawcdn.githack.com/mattrossman/drei-assets/b597559ff62f85ec691df28cbea5ecb1263a2085';\nfunction Environment({\n  background = false,\n  files = ['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'],\n  path = '/',\n  preset = undefined,\n  scene\n}) {\n  if (preset) {\n    if (!(preset in presetsObj)) {\n      throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    }\n\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT + '/hdri/';\n  }\n\n  const defaultScene = useThree(({\n    scene\n  }) => scene);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  const loaderResult = useLoader(loader, isCubeMap ? [files] : files, loader => loader.setPath(path));\n  const map = isCubeMap ? loaderResult[0] : loaderResult; // PMREMGenerator takes its sweet time to generate the env-map,\n  // Let's make this part of suspense, or else it just yields a frame-skip\n\n  const texture = useAsset(() => new Promise(res => {\n    const gen = new PMREMGenerator(gl);\n    const texture = getTexture(map, gen, isCubeMap);\n    gen.dispose();\n    map.dispose();\n    res(texture);\n  }), map);\n  useLayoutEffect(() => {\n    const oldbg = scene ? scene.background : defaultScene.background;\n    const oldenv = scene ? scene.environment : defaultScene.environment;\n\n    if (scene) {\n      scene.environment = texture;\n\n      if (background) {\n        scene.background = texture;\n      }\n    } else {\n      defaultScene.environment = texture;\n\n      if (background) {\n        defaultScene.background = texture;\n      }\n    }\n\n    return () => {\n      if (scene) {\n        scene.environment = oldenv;\n        scene.background = oldbg;\n      } else {\n        defaultScene.environment = oldenv;\n        defaultScene.background = oldbg;\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [texture, background, scene]);\n  return null;\n}\n\nexport { Environment };\n"]},"metadata":{},"sourceType":"module"}