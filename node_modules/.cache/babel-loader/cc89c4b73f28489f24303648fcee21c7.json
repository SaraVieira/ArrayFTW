{"ast":null,"code":"/**\n * Ascii generation is based on http://www.nihilogic.dk/labs/jsascii/\n * Maybe more about this later with a blog post at http://lab4games.net/zz85/blog\n *\n * 16 April 2012 - @blurspline\n */\nvar AsciiEffect = function AsciiEffect(renderer, charSet, options) {\n  // its fun to create one your own!\n  charSet = charSet === undefined ? ' .:-=+*#%@' : charSet; // ' .,:;=|iI+hHOE#`$';\n  // darker bolder character set from https://github.com/saw/Canvas-ASCII-Art/\n  // ' .\\'`^\",:;Il!i~+_-?][}{1)(|/tfjrxnuvczXYUJCLQ0OZmwqpdbkhao*#MW&8%B@$'.split('');\n\n  if (!options) options = {}; // Some ASCII settings\n\n  var bResolution = !options['resolution'] ? 0.15 : options['resolution']; // Higher for more details\n\n  var iScale = !options['scale'] ? 1 : options['scale'];\n  var bColor = !options['color'] ? false : options['color']; // nice but slows down rendering!\n\n  var bAlpha = !options['alpha'] ? false : options['alpha']; // Transparency\n\n  var bBlock = !options['block'] ? false : options['block']; // blocked characters. like good O dos\n\n  var bInvert = !options['invert'] ? false : options['invert']; // black is white, white is black\n\n  var strResolution = 'low';\n  var width, height;\n  var domElement = document.createElement('div');\n  domElement.style.cursor = 'default';\n  var oAscii = document.createElement('table');\n  domElement.appendChild(oAscii);\n  var iWidth, iHeight;\n  var oImg;\n\n  this.setSize = function (w, h) {\n    width = w;\n    height = h;\n    renderer.setSize(w, h);\n    initAsciiSize();\n  };\n\n  this.render = function (scene, camera) {\n    renderer.render(scene, camera);\n    asciifyImage(renderer, oAscii);\n  };\n\n  this.domElement = domElement; // Throw in ascii library from http://www.nihilogic.dk/labs/jsascii/jsascii.js\n\n  /*\n   * jsAscii 0.1\n   * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n   * MIT License [http://www.nihilogic.dk/licenses/mit-license.txt]\n   */\n\n  function initAsciiSize() {\n    iWidth = Math.round(width * fResolution);\n    iHeight = Math.round(height * fResolution);\n    oCanvas.width = iWidth;\n    oCanvas.height = iHeight; // oCanvas.style.display = \"none\";\n    // oCanvas.style.width = iWidth;\n    // oCanvas.style.height = iHeight;\n\n    oImg = renderer.domElement;\n\n    if (oImg.style.backgroundColor) {\n      oAscii.rows[0].cells[0].style.backgroundColor = oImg.style.backgroundColor;\n      oAscii.rows[0].cells[0].style.color = oImg.style.color;\n    }\n\n    oAscii.cellSpacing = 0;\n    oAscii.cellPadding = 0;\n    var oStyle = oAscii.style;\n    oStyle.display = 'inline';\n    oStyle.width = \"\".concat(Math.round(iWidth / fResolution * iScale), \"px\");\n    oStyle.height = \"\".concat(Math.round(iHeight / fResolution * iScale), \"px\");\n    oStyle.whiteSpace = 'pre';\n    oStyle.margin = '0px';\n    oStyle.padding = '0px';\n    oStyle.letterSpacing = \"\".concat(fLetterSpacing, \"px\");\n    oStyle.fontFamily = strFont;\n    oStyle.fontSize = \"\".concat(fFontSize, \"px\");\n    oStyle.lineHeight = \"\".concat(fLineHeight, \"px\");\n    oStyle.textAlign = 'left';\n    oStyle.textDecoration = 'none';\n  }\n\n  var aDefaultCharList = ' .,:;i1tfLCG08@'.split('');\n  var aDefaultColorCharList = ' CGO08@'.split('');\n  var strFont = 'courier new, monospace';\n  var oCanvasImg = renderer.domElement;\n  var oCanvas = document.createElement('canvas');\n\n  if (!oCanvas.getContext) {\n    return;\n  }\n\n  var oCtx = oCanvas.getContext('2d');\n\n  if (!oCtx.getImageData) {\n    return;\n  }\n\n  var aCharList = bColor ? aDefaultColorCharList : aDefaultCharList;\n  if (charSet) aCharList = charSet;\n  var fResolution = 0.5;\n\n  switch (strResolution) {\n    case 'low':\n      fResolution = 0.25;\n      break;\n\n    case 'medium':\n      fResolution = 0.5;\n      break;\n\n    case 'high':\n      fResolution = 1;\n      break;\n  }\n\n  if (bResolution) fResolution = bResolution; // Setup dom\n\n  var fFontSize = 2 / fResolution * iScale;\n  var fLineHeight = 2 / fResolution * iScale; // adjust letter-spacing for all combinations of scale and resolution to get it to fit the image width.\n\n  var fLetterSpacing = 0;\n  {\n    switch (iScale) {\n      case 1:\n        fLetterSpacing = -1;\n        break;\n\n      case 2:\n      case 3:\n        fLetterSpacing = -2.1;\n        break;\n\n      case 4:\n        fLetterSpacing = -3.1;\n        break;\n\n      case 5:\n        fLetterSpacing = -4.15;\n        break;\n    }\n  } // convert img element to ascii\n\n  function asciifyImage(canvasRenderer, oAscii) {\n    oCtx.clearRect(0, 0, iWidth, iHeight);\n    oCtx.drawImage(oCanvasImg, 0, 0, iWidth, iHeight);\n    var oImgData = oCtx.getImageData(0, 0, iWidth, iHeight).data; // Coloring loop starts now\n\n    var strChars = ''; // console.time('rendering');\n\n    for (var y = 0; y < iHeight; y += 2) {\n      for (var x = 0; x < iWidth; x++) {\n        var iOffset = (y * iWidth + x) * 4;\n        var iRed = oImgData[iOffset];\n        var iGreen = oImgData[iOffset + 1];\n        var iBlue = oImgData[iOffset + 2];\n        var iAlpha = oImgData[iOffset + 3];\n        var iCharIdx = void 0;\n        var fBrightness = void 0;\n        fBrightness = (0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue) / 255; // fBrightness = (0.3*iRed + 0.5*iGreen + 0.3*iBlue) / 255;\n\n        if (iAlpha == 0) {\n          // should calculate alpha instead, but quick hack :)\n          //fBrightness *= (iAlpha / 255);\n          fBrightness = 1;\n        }\n\n        iCharIdx = Math.floor((1 - fBrightness) * (aCharList.length - 1));\n\n        if (bInvert) {\n          iCharIdx = aCharList.length - iCharIdx - 1;\n        } // good for debugging\n        //fBrightness = Math.floor(fBrightness * 10);\n        //strThisChar = fBrightness;\n\n\n        var strThisChar = aCharList[iCharIdx];\n        if (strThisChar === undefined || strThisChar == ' ') strThisChar = '&nbsp;';\n\n        if (bColor) {\n          strChars += \"<span style='color:rgb(\".concat(iRed, \",\").concat(iGreen, \",\").concat(iBlue, \");\").concat(bBlock ? \"background-color:rgb(\".concat(iRed, \",\").concat(iGreen, \",\").concat(iBlue, \");\") : '').concat(bAlpha ? \"opacity:\".concat(iAlpha / 255, \";\") : '', \"'>\").concat(strThisChar, \"</span>\");\n        } else {\n          strChars += strThisChar;\n        }\n      }\n\n      strChars += '<br/>';\n    }\n\n    oAscii.innerHTML = \"<tr><td>\".concat(strChars, \"</td></tr>\"); // console.timeEnd('rendering');\n    // return oAscii;\n  } // end modified asciifyImage block\n\n};\n\nexport { AsciiEffect };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/effects/AsciiEffect.js"],"names":["AsciiEffect","renderer","charSet","options","undefined","bResolution","iScale","bColor","bAlpha","bBlock","bInvert","strResolution","width","height","domElement","document","createElement","style","cursor","oAscii","appendChild","iWidth","iHeight","oImg","setSize","w","h","initAsciiSize","render","scene","camera","asciifyImage","Math","round","fResolution","oCanvas","backgroundColor","rows","cells","color","cellSpacing","cellPadding","oStyle","display","whiteSpace","margin","padding","letterSpacing","fLetterSpacing","fontFamily","strFont","fontSize","fFontSize","lineHeight","fLineHeight","textAlign","textDecoration","aDefaultCharList","split","aDefaultColorCharList","oCanvasImg","getContext","oCtx","getImageData","aCharList","canvasRenderer","clearRect","drawImage","oImgData","data","strChars","y","x","iOffset","iRed","iGreen","iBlue","iAlpha","iCharIdx","fBrightness","floor","length","strThisChar","innerHTML"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAUC,QAAV,EAAoBC,OAApB,EAA6BC,OAA7B,EAAsC;AACxD;AACAD,EAAAA,OAAO,GAAGA,OAAO,KAAKE,SAAZ,GAAwB,YAAxB,GAAuCF,OAAjD,CAFwD,CAEE;AAC1D;AACA;;AAEA,MAAI,CAACC,OAAL,EAAcA,OAAO,GAAG,EAAV,CAN0C,CAM5B;;AAE5B,MAAME,WAAW,GAAG,CAACF,OAAO,CAAC,YAAD,CAAR,GAAyB,IAAzB,GAAgCA,OAAO,CAAC,YAAD,CAA3D,CARwD,CAQmB;;AAE3E,MAAMG,MAAM,GAAG,CAACH,OAAO,CAAC,OAAD,CAAR,GAAoB,CAApB,GAAwBA,OAAO,CAAC,OAAD,CAA9C;AACA,MAAMI,MAAM,GAAG,CAACJ,OAAO,CAAC,OAAD,CAAR,GAAoB,KAApB,GAA4BA,OAAO,CAAC,OAAD,CAAlD,CAXwD,CAWK;;AAE7D,MAAMK,MAAM,GAAG,CAACL,OAAO,CAAC,OAAD,CAAR,GAAoB,KAApB,GAA4BA,OAAO,CAAC,OAAD,CAAlD,CAbwD,CAaK;;AAE7D,MAAMM,MAAM,GAAG,CAACN,OAAO,CAAC,OAAD,CAAR,GAAoB,KAApB,GAA4BA,OAAO,CAAC,OAAD,CAAlD,CAfwD,CAeK;;AAE7D,MAAMO,OAAO,GAAG,CAACP,OAAO,CAAC,QAAD,CAAR,GAAqB,KAArB,GAA6BA,OAAO,CAAC,QAAD,CAApD,CAjBwD,CAiBQ;;AAEhE,MAAMQ,aAAa,GAAG,KAAtB;AACA,MAAIC,KAAJ,EAAWC,MAAX;AACA,MAAMC,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAnB;AACAF,EAAAA,UAAU,CAACG,KAAX,CAAiBC,MAAjB,GAA0B,SAA1B;AACA,MAAMC,MAAM,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAf;AACAF,EAAAA,UAAU,CAACM,WAAX,CAAuBD,MAAvB;AACA,MAAIE,MAAJ,EAAYC,OAAZ;AACA,MAAIC,IAAJ;;AAEA,OAAKC,OAAL,GAAe,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACvBd,IAAAA,KAAK,GAAGa,CAAR;AACAZ,IAAAA,MAAM,GAAGa,CAAT;AACAzB,IAAAA,QAAQ,CAACuB,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB;AACAC,IAAAA,aAAa;AACd,GALD;;AAOA,OAAKC,MAAL,GAAc,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/B7B,IAAAA,QAAQ,CAAC2B,MAAT,CAAgBC,KAAhB,EAAuBC,MAAvB;AACAC,IAAAA,YAAY,CAAC9B,QAAD,EAAWkB,MAAX,CAAZ;AACD,GAHD;;AAKA,OAAKL,UAAL,GAAkBA,UAAlB,CAxCwD,CAwC1B;;AAE9B;AACF;AACA;AACA;AACA;;AAEE,WAASa,aAAT,GAAyB;AACvBN,IAAAA,MAAM,GAAGW,IAAI,CAACC,KAAL,CAAWrB,KAAK,GAAGsB,WAAnB,CAAT;AACAZ,IAAAA,OAAO,GAAGU,IAAI,CAACC,KAAL,CAAWpB,MAAM,GAAGqB,WAApB,CAAV;AACAC,IAAAA,OAAO,CAACvB,KAAR,GAAgBS,MAAhB;AACAc,IAAAA,OAAO,CAACtB,MAAR,GAAiBS,OAAjB,CAJuB,CAIG;AAC1B;AACA;;AAEAC,IAAAA,IAAI,GAAGtB,QAAQ,CAACa,UAAhB;;AAEA,QAAIS,IAAI,CAACN,KAAL,CAAWmB,eAAf,EAAgC;AAC9BjB,MAAAA,MAAM,CAACkB,IAAP,CAAY,CAAZ,EAAeC,KAAf,CAAqB,CAArB,EAAwBrB,KAAxB,CAA8BmB,eAA9B,GAAgDb,IAAI,CAACN,KAAL,CAAWmB,eAA3D;AACAjB,MAAAA,MAAM,CAACkB,IAAP,CAAY,CAAZ,EAAeC,KAAf,CAAqB,CAArB,EAAwBrB,KAAxB,CAA8BsB,KAA9B,GAAsChB,IAAI,CAACN,KAAL,CAAWsB,KAAjD;AACD;;AAEDpB,IAAAA,MAAM,CAACqB,WAAP,GAAqB,CAArB;AACArB,IAAAA,MAAM,CAACsB,WAAP,GAAqB,CAArB;AACA,QAAMC,MAAM,GAAGvB,MAAM,CAACF,KAAtB;AACAyB,IAAAA,MAAM,CAACC,OAAP,GAAiB,QAAjB;AACAD,IAAAA,MAAM,CAAC9B,KAAP,aAAkBoB,IAAI,CAACC,KAAL,CAAWZ,MAAM,GAAGa,WAAT,GAAuB5B,MAAlC,CAAlB;AACAoC,IAAAA,MAAM,CAAC7B,MAAP,aAAmBmB,IAAI,CAACC,KAAL,CAAWX,OAAO,GAAGY,WAAV,GAAwB5B,MAAnC,CAAnB;AACAoC,IAAAA,MAAM,CAACE,UAAP,GAAoB,KAApB;AACAF,IAAAA,MAAM,CAACG,MAAP,GAAgB,KAAhB;AACAH,IAAAA,MAAM,CAACI,OAAP,GAAiB,KAAjB;AACAJ,IAAAA,MAAM,CAACK,aAAP,aAA0BC,cAA1B;AACAN,IAAAA,MAAM,CAACO,UAAP,GAAoBC,OAApB;AACAR,IAAAA,MAAM,CAACS,QAAP,aAAqBC,SAArB;AACAV,IAAAA,MAAM,CAACW,UAAP,aAAuBC,WAAvB;AACAZ,IAAAA,MAAM,CAACa,SAAP,GAAmB,MAAnB;AACAb,IAAAA,MAAM,CAACc,cAAP,GAAwB,MAAxB;AACD;;AAED,MAAMC,gBAAgB,GAAG,kBAAkBC,KAAlB,CAAwB,EAAxB,CAAzB;AACA,MAAMC,qBAAqB,GAAG,UAAUD,KAAV,CAAgB,EAAhB,CAA9B;AACA,MAAIR,OAAO,GAAG,wBAAd;AACA,MAAMU,UAAU,GAAG3D,QAAQ,CAACa,UAA5B;AACA,MAAIqB,OAAO,GAAGpB,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;;AAEA,MAAI,CAACmB,OAAO,CAAC0B,UAAb,EAAyB;AACvB;AACD;;AAED,MAAMC,IAAI,GAAG3B,OAAO,CAAC0B,UAAR,CAAmB,IAAnB,CAAb;;AAEA,MAAI,CAACC,IAAI,CAACC,YAAV,EAAwB;AACtB;AACD;;AAED,MAAIC,SAAS,GAAGzD,MAAM,GAAGoD,qBAAH,GAA2BF,gBAAjD;AACA,MAAIvD,OAAJ,EAAa8D,SAAS,GAAG9D,OAAZ;AACb,MAAIgC,WAAW,GAAG,GAAlB;;AAEA,UAAQvB,aAAR;AACE,SAAK,KAAL;AACEuB,MAAAA,WAAW,GAAG,IAAd;AACA;;AAEF,SAAK,QAAL;AACEA,MAAAA,WAAW,GAAG,GAAd;AACA;;AAEF,SAAK,MAAL;AACEA,MAAAA,WAAW,GAAG,CAAd;AACA;AAXJ;;AAcA,MAAI7B,WAAJ,EAAiB6B,WAAW,GAAG7B,WAAd,CAlHuC,CAkHZ;;AAE5C,MAAI+C,SAAS,GAAG,IAAIlB,WAAJ,GAAkB5B,MAAlC;AACA,MAAIgD,WAAW,GAAG,IAAIpB,WAAJ,GAAkB5B,MAApC,CArHwD,CAqHZ;;AAE5C,MAAI0C,cAAc,GAAG,CAArB;AAEA;AACE,YAAQ1C,MAAR;AACE,WAAK,CAAL;AACE0C,QAAAA,cAAc,GAAG,CAAC,CAAlB;AACA;;AAEF,WAAK,CAAL;AACA,WAAK,CAAL;AACEA,QAAAA,cAAc,GAAG,CAAC,GAAlB;AACA;;AAEF,WAAK,CAAL;AACEA,QAAAA,cAAc,GAAG,CAAC,GAAlB;AACA;;AAEF,WAAK,CAAL;AACEA,QAAAA,cAAc,GAAG,CAAC,IAAlB;AACA;AAhBJ;AAkBD,GA5IuD,CA6IxD;;AAGA,WAASjB,YAAT,CAAsBkC,cAAtB,EAAsC9C,MAAtC,EAA8C;AAC5C2C,IAAAA,IAAI,CAACI,SAAL,CAAe,CAAf,EAAkB,CAAlB,EAAqB7C,MAArB,EAA6BC,OAA7B;AACAwC,IAAAA,IAAI,CAACK,SAAL,CAAeP,UAAf,EAA2B,CAA3B,EAA8B,CAA9B,EAAiCvC,MAAjC,EAAyCC,OAAzC;AACA,QAAM8C,QAAQ,GAAGN,IAAI,CAACC,YAAL,CAAkB,CAAlB,EAAqB,CAArB,EAAwB1C,MAAxB,EAAgCC,OAAhC,EAAyC+C,IAA1D,CAH4C,CAGoB;;AAEhE,QAAIC,QAAQ,GAAG,EAAf,CAL4C,CAKzB;;AAEnB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjD,OAApB,EAA6BiD,CAAC,IAAI,CAAlC,EAAqC;AACnC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnD,MAApB,EAA4BmD,CAAC,EAA7B,EAAiC;AAC/B,YAAMC,OAAO,GAAG,CAACF,CAAC,GAAGlD,MAAJ,GAAamD,CAAd,IAAmB,CAAnC;AACA,YAAME,IAAI,GAAGN,QAAQ,CAACK,OAAD,CAArB;AACA,YAAME,MAAM,GAAGP,QAAQ,CAACK,OAAO,GAAG,CAAX,CAAvB;AACA,YAAMG,KAAK,GAAGR,QAAQ,CAACK,OAAO,GAAG,CAAX,CAAtB;AACA,YAAMI,MAAM,GAAGT,QAAQ,CAACK,OAAO,GAAG,CAAX,CAAvB;AACA,YAAIK,QAAQ,SAAZ;AACA,YAAIC,WAAW,SAAf;AACAA,QAAAA,WAAW,GAAG,CAAC,MAAML,IAAN,GAAa,OAAOC,MAApB,GAA6B,OAAOC,KAArC,IAA8C,GAA5D,CAR+B,CAQkC;;AAEjE,YAAIC,MAAM,IAAI,CAAd,EAAiB;AACf;AACA;AACAE,UAAAA,WAAW,GAAG,CAAd;AACD;;AAEDD,QAAAA,QAAQ,GAAG9C,IAAI,CAACgD,KAAL,CAAW,CAAC,IAAID,WAAL,KAAqBf,SAAS,CAACiB,MAAV,GAAmB,CAAxC,CAAX,CAAX;;AAEA,YAAIvE,OAAJ,EAAa;AACXoE,UAAAA,QAAQ,GAAGd,SAAS,CAACiB,MAAV,GAAmBH,QAAnB,GAA8B,CAAzC;AACD,SApB8B,CAoB7B;AACF;AACA;;;AAGA,YAAII,WAAW,GAAGlB,SAAS,CAACc,QAAD,CAA3B;AACA,YAAII,WAAW,KAAK9E,SAAhB,IAA6B8E,WAAW,IAAI,GAAhD,EAAqDA,WAAW,GAAG,QAAd;;AAErD,YAAI3E,MAAJ,EAAY;AACV+D,UAAAA,QAAQ,qCAA8BI,IAA9B,cAAsCC,MAAtC,cAAgDC,KAAhD,eAA0DnE,MAAM,kCAA2BiE,IAA3B,cAAmCC,MAAnC,cAA6CC,KAA7C,UAAyD,EAAzH,SAA8HpE,MAAM,qBAAcqE,MAAM,GAAG,GAAvB,SAAgC,EAApK,eAA2KK,WAA3K,YAAR;AACD,SAFD,MAEO;AACLZ,UAAAA,QAAQ,IAAIY,WAAZ;AACD;AACF;;AAEDZ,MAAAA,QAAQ,IAAI,OAAZ;AACD;;AAEDnD,IAAAA,MAAM,CAACgE,SAAP,qBAA8Bb,QAA9B,gBA9C4C,CA8CQ;AACpD;AACD,GAhMuD,CAgMtD;;AAEH,CAlMD;;AAoMA,SAAStE,WAAT","sourcesContent":["/**\n * Ascii generation is based on http://www.nihilogic.dk/labs/jsascii/\n * Maybe more about this later with a blog post at http://lab4games.net/zz85/blog\n *\n * 16 April 2012 - @blurspline\n */\nconst AsciiEffect = function (renderer, charSet, options) {\n  // its fun to create one your own!\n  charSet = charSet === undefined ? ' .:-=+*#%@' : charSet; // ' .,:;=|iI+hHOE#`$';\n  // darker bolder character set from https://github.com/saw/Canvas-ASCII-Art/\n  // ' .\\'`^\",:;Il!i~+_-?][}{1)(|/tfjrxnuvczXYUJCLQ0OZmwqpdbkhao*#MW&8%B@$'.split('');\n\n  if (!options) options = {}; // Some ASCII settings\n\n  const bResolution = !options['resolution'] ? 0.15 : options['resolution']; // Higher for more details\n\n  const iScale = !options['scale'] ? 1 : options['scale'];\n  const bColor = !options['color'] ? false : options['color']; // nice but slows down rendering!\n\n  const bAlpha = !options['alpha'] ? false : options['alpha']; // Transparency\n\n  const bBlock = !options['block'] ? false : options['block']; // blocked characters. like good O dos\n\n  const bInvert = !options['invert'] ? false : options['invert']; // black is white, white is black\n\n  const strResolution = 'low';\n  let width, height;\n  const domElement = document.createElement('div');\n  domElement.style.cursor = 'default';\n  const oAscii = document.createElement('table');\n  domElement.appendChild(oAscii);\n  let iWidth, iHeight;\n  let oImg;\n\n  this.setSize = (w, h) => {\n    width = w;\n    height = h;\n    renderer.setSize(w, h);\n    initAsciiSize();\n  };\n\n  this.render = (scene, camera) => {\n    renderer.render(scene, camera);\n    asciifyImage(renderer, oAscii);\n  };\n\n  this.domElement = domElement; // Throw in ascii library from http://www.nihilogic.dk/labs/jsascii/jsascii.js\n\n  /*\n   * jsAscii 0.1\n   * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n   * MIT License [http://www.nihilogic.dk/licenses/mit-license.txt]\n   */\n\n  function initAsciiSize() {\n    iWidth = Math.round(width * fResolution);\n    iHeight = Math.round(height * fResolution);\n    oCanvas.width = iWidth;\n    oCanvas.height = iHeight; // oCanvas.style.display = \"none\";\n    // oCanvas.style.width = iWidth;\n    // oCanvas.style.height = iHeight;\n\n    oImg = renderer.domElement;\n\n    if (oImg.style.backgroundColor) {\n      oAscii.rows[0].cells[0].style.backgroundColor = oImg.style.backgroundColor;\n      oAscii.rows[0].cells[0].style.color = oImg.style.color;\n    }\n\n    oAscii.cellSpacing = 0;\n    oAscii.cellPadding = 0;\n    const oStyle = oAscii.style;\n    oStyle.display = 'inline';\n    oStyle.width = `${Math.round(iWidth / fResolution * iScale)}px`;\n    oStyle.height = `${Math.round(iHeight / fResolution * iScale)}px`;\n    oStyle.whiteSpace = 'pre';\n    oStyle.margin = '0px';\n    oStyle.padding = '0px';\n    oStyle.letterSpacing = `${fLetterSpacing}px`;\n    oStyle.fontFamily = strFont;\n    oStyle.fontSize = `${fFontSize}px`;\n    oStyle.lineHeight = `${fLineHeight}px`;\n    oStyle.textAlign = 'left';\n    oStyle.textDecoration = 'none';\n  }\n\n  const aDefaultCharList = ' .,:;i1tfLCG08@'.split('');\n  const aDefaultColorCharList = ' CGO08@'.split('');\n  var strFont = 'courier new, monospace';\n  const oCanvasImg = renderer.domElement;\n  var oCanvas = document.createElement('canvas');\n\n  if (!oCanvas.getContext) {\n    return;\n  }\n\n  const oCtx = oCanvas.getContext('2d');\n\n  if (!oCtx.getImageData) {\n    return;\n  }\n\n  let aCharList = bColor ? aDefaultColorCharList : aDefaultCharList;\n  if (charSet) aCharList = charSet;\n  var fResolution = 0.5;\n\n  switch (strResolution) {\n    case 'low':\n      fResolution = 0.25;\n      break;\n\n    case 'medium':\n      fResolution = 0.5;\n      break;\n\n    case 'high':\n      fResolution = 1;\n      break;\n  }\n\n  if (bResolution) fResolution = bResolution; // Setup dom\n\n  var fFontSize = 2 / fResolution * iScale;\n  var fLineHeight = 2 / fResolution * iScale; // adjust letter-spacing for all combinations of scale and resolution to get it to fit the image width.\n\n  var fLetterSpacing = 0;\n\n  {\n    switch (iScale) {\n      case 1:\n        fLetterSpacing = -1;\n        break;\n\n      case 2:\n      case 3:\n        fLetterSpacing = -2.1;\n        break;\n\n      case 4:\n        fLetterSpacing = -3.1;\n        break;\n\n      case 5:\n        fLetterSpacing = -4.15;\n        break;\n    }\n  }\n  // convert img element to ascii\n\n\n  function asciifyImage(canvasRenderer, oAscii) {\n    oCtx.clearRect(0, 0, iWidth, iHeight);\n    oCtx.drawImage(oCanvasImg, 0, 0, iWidth, iHeight);\n    const oImgData = oCtx.getImageData(0, 0, iWidth, iHeight).data; // Coloring loop starts now\n\n    let strChars = ''; // console.time('rendering');\n\n    for (let y = 0; y < iHeight; y += 2) {\n      for (let x = 0; x < iWidth; x++) {\n        const iOffset = (y * iWidth + x) * 4;\n        const iRed = oImgData[iOffset];\n        const iGreen = oImgData[iOffset + 1];\n        const iBlue = oImgData[iOffset + 2];\n        const iAlpha = oImgData[iOffset + 3];\n        let iCharIdx;\n        let fBrightness;\n        fBrightness = (0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue) / 255; // fBrightness = (0.3*iRed + 0.5*iGreen + 0.3*iBlue) / 255;\n\n        if (iAlpha == 0) {\n          // should calculate alpha instead, but quick hack :)\n          //fBrightness *= (iAlpha / 255);\n          fBrightness = 1;\n        }\n\n        iCharIdx = Math.floor((1 - fBrightness) * (aCharList.length - 1));\n\n        if (bInvert) {\n          iCharIdx = aCharList.length - iCharIdx - 1;\n        } // good for debugging\n        //fBrightness = Math.floor(fBrightness * 10);\n        //strThisChar = fBrightness;\n\n\n        let strThisChar = aCharList[iCharIdx];\n        if (strThisChar === undefined || strThisChar == ' ') strThisChar = '&nbsp;';\n\n        if (bColor) {\n          strChars += `<span style='color:rgb(${iRed},${iGreen},${iBlue});${bBlock ? `background-color:rgb(${iRed},${iGreen},${iBlue});` : ''}${bAlpha ? `opacity:${iAlpha / 255};` : ''}'>${strThisChar}</span>`;\n        } else {\n          strChars += strThisChar;\n        }\n      }\n\n      strChars += '<br/>';\n    }\n\n    oAscii.innerHTML = `<tr><td>${strChars}</td></tr>`; // console.timeEnd('rendering');\n    // return oAscii;\n  } // end modified asciifyImage block\n\n};\n\nexport { AsciiEffect };\n"]},"metadata":{},"sourceType":"module"}