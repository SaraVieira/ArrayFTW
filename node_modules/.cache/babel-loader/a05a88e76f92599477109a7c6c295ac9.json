{"ast":null,"code":"var WEBGL = {\n  isWebGLAvailable: function isWebGLAvailable() {\n    try {\n      var canvas = document.createElement('canvas');\n      return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\n    } catch (e) {\n      return false;\n    }\n  },\n  isWebGL2Available: function isWebGL2Available() {\n    try {\n      var canvas = document.createElement('canvas');\n      return !!(window.WebGL2RenderingContext && canvas.getContext('webgl2'));\n    } catch (e) {\n      return false;\n    }\n  },\n  getWebGLErrorMessage: function getWebGLErrorMessage() {\n    return this.getErrorMessage(1);\n  },\n  getWebGL2ErrorMessage: function getWebGL2ErrorMessage() {\n    return this.getErrorMessage(2);\n  },\n  getErrorMessage: function getErrorMessage(version) {\n    var names = {\n      1: 'WebGL',\n      2: 'WebGL 2'\n    };\n    var contexts = {\n      1: window.WebGLRenderingContext,\n      2: window.WebGL2RenderingContext\n    };\n    var element = document.createElement('div');\n    element.id = 'webglmessage';\n    element.style.fontFamily = 'monospace';\n    element.style.fontSize = '13px';\n    element.style.fontWeight = 'normal';\n    element.style.textAlign = 'center';\n    element.style.background = '#fff';\n    element.style.color = '#000';\n    element.style.padding = '1.5em';\n    element.style.width = '400px';\n    element.style.margin = '5em auto 0';\n    var message = 'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>';\n\n    if (contexts[version]) {\n      message = message.replace('$0', 'graphics card');\n    } else {\n      message = message.replace('$0', 'browser');\n    }\n\n    message = message.replace('$1', names[version]);\n    element.innerHTML = message;\n    return element;\n  }\n};\nexport { WEBGL };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/misc/WebGL.js"],"names":["WEBGL","isWebGLAvailable","canvas","document","createElement","window","WebGLRenderingContext","getContext","e","isWebGL2Available","WebGL2RenderingContext","getWebGLErrorMessage","getErrorMessage","getWebGL2ErrorMessage","version","names","contexts","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","color","padding","width","margin","message","replace","innerHTML"],"mappings":"AAAA,IAAMA,KAAK,GAAG;AACZC,EAAAA,gBAAgB,EAAE,4BAAY;AAC5B,QAAI;AACF,UAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,aAAO,CAAC,EAAEC,MAAM,CAACC,qBAAP,KAAiCJ,MAAM,CAACK,UAAP,CAAkB,OAAlB,KAA8BL,MAAM,CAACK,UAAP,CAAkB,oBAAlB,CAA/D,CAAF,CAAR;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF,GARW;AASZC,EAAAA,iBAAiB,EAAE,6BAAY;AAC7B,QAAI;AACF,UAAMP,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,aAAO,CAAC,EAAEC,MAAM,CAACK,sBAAP,IAAiCR,MAAM,CAACK,UAAP,CAAkB,QAAlB,CAAnC,CAAR;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF,GAhBW;AAiBZG,EAAAA,oBAAoB,EAAE,gCAAY;AAChC,WAAO,KAAKC,eAAL,CAAqB,CAArB,CAAP;AACD,GAnBW;AAoBZC,EAAAA,qBAAqB,EAAE,iCAAY;AACjC,WAAO,KAAKD,eAAL,CAAqB,CAArB,CAAP;AACD,GAtBW;AAuBZA,EAAAA,eAAe,EAAE,yBAAUE,OAAV,EAAmB;AAClC,QAAMC,KAAK,GAAG;AACZ,SAAG,OADS;AAEZ,SAAG;AAFS,KAAd;AAIA,QAAMC,QAAQ,GAAG;AACf,SAAGX,MAAM,CAACC,qBADK;AAEf,SAAGD,MAAM,CAACK;AAFK,KAAjB;AAIA,QAAMO,OAAO,GAAGd,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;AACAa,IAAAA,OAAO,CAACC,EAAR,GAAa,cAAb;AACAD,IAAAA,OAAO,CAACE,KAAR,CAAcC,UAAd,GAA2B,WAA3B;AACAH,IAAAA,OAAO,CAACE,KAAR,CAAcE,QAAd,GAAyB,MAAzB;AACAJ,IAAAA,OAAO,CAACE,KAAR,CAAcG,UAAd,GAA2B,QAA3B;AACAL,IAAAA,OAAO,CAACE,KAAR,CAAcI,SAAd,GAA0B,QAA1B;AACAN,IAAAA,OAAO,CAACE,KAAR,CAAcK,UAAd,GAA2B,MAA3B;AACAP,IAAAA,OAAO,CAACE,KAAR,CAAcM,KAAd,GAAsB,MAAtB;AACAR,IAAAA,OAAO,CAACE,KAAR,CAAcO,OAAd,GAAwB,OAAxB;AACAT,IAAAA,OAAO,CAACE,KAAR,CAAcQ,KAAd,GAAsB,OAAtB;AACAV,IAAAA,OAAO,CAACE,KAAR,CAAcS,MAAd,GAAuB,YAAvB;AACA,QAAIC,OAAO,GAAG,mIAAd;;AAEA,QAAIb,QAAQ,CAACF,OAAD,CAAZ,EAAuB;AACrBe,MAAAA,OAAO,GAAGA,OAAO,CAACC,OAAR,CAAgB,IAAhB,EAAsB,eAAtB,CAAV;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,GAAGA,OAAO,CAACC,OAAR,CAAgB,IAAhB,EAAsB,SAAtB,CAAV;AACD;;AAEDD,IAAAA,OAAO,GAAGA,OAAO,CAACC,OAAR,CAAgB,IAAhB,EAAsBf,KAAK,CAACD,OAAD,CAA3B,CAAV;AACAG,IAAAA,OAAO,CAACc,SAAR,GAAoBF,OAApB;AACA,WAAOZ,OAAP;AACD;AAtDW,CAAd;AAyDA,SAASjB,KAAT","sourcesContent":["const WEBGL = {\n  isWebGLAvailable: function () {\n    try {\n      const canvas = document.createElement('canvas');\n      return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\n    } catch (e) {\n      return false;\n    }\n  },\n  isWebGL2Available: function () {\n    try {\n      const canvas = document.createElement('canvas');\n      return !!(window.WebGL2RenderingContext && canvas.getContext('webgl2'));\n    } catch (e) {\n      return false;\n    }\n  },\n  getWebGLErrorMessage: function () {\n    return this.getErrorMessage(1);\n  },\n  getWebGL2ErrorMessage: function () {\n    return this.getErrorMessage(2);\n  },\n  getErrorMessage: function (version) {\n    const names = {\n      1: 'WebGL',\n      2: 'WebGL 2'\n    };\n    const contexts = {\n      1: window.WebGLRenderingContext,\n      2: window.WebGL2RenderingContext\n    };\n    const element = document.createElement('div');\n    element.id = 'webglmessage';\n    element.style.fontFamily = 'monospace';\n    element.style.fontSize = '13px';\n    element.style.fontWeight = 'normal';\n    element.style.textAlign = 'center';\n    element.style.background = '#fff';\n    element.style.color = '#000';\n    element.style.padding = '1.5em';\n    element.style.width = '400px';\n    element.style.margin = '5em auto 0';\n    let message = 'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>';\n\n    if (contexts[version]) {\n      message = message.replace('$0', 'graphics card');\n    } else {\n      message = message.replace('$0', 'browser');\n    }\n\n    message = message.replace('$1', names[version]);\n    element.innerHTML = message;\n    return element;\n  }\n};\n\nexport { WEBGL };\n"]},"metadata":{},"sourceType":"module"}