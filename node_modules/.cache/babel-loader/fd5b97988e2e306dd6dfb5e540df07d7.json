{"ast":null,"code":"import _toConsumableArray from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useRef, useMemo, createElement } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Billboard } from './Billboard.js';\nimport { useTexture } from './useTexture.js';\nimport CloudImage from '../assets/cloud.base64.js';\n\nfunction Cloud(_ref) {\n  var _ref$opacity = _ref.opacity,\n      opacity = _ref$opacity === void 0 ? 0.5 : _ref$opacity,\n      _ref$speed = _ref.speed,\n      speed = _ref$speed === void 0 ? 0.4 : _ref$speed,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? 10 : _ref$width,\n      _ref$length = _ref.length,\n      length = _ref$length === void 0 ? 1.5 : _ref$length,\n      _ref$segments = _ref.segments,\n      segments = _ref$segments === void 0 ? 20 : _ref$segments,\n      _ref$dir = _ref.dir,\n      dir = _ref$dir === void 0 ? 1 : _ref$dir,\n      props = _objectWithoutPropertiesLoose(_ref, [\"opacity\", \"speed\", \"width\", \"length\", \"segments\", \"dir\"]);\n\n  var group = useRef();\n  var texture = useTexture(CloudImage);\n  var clouds = useMemo(function () {\n    return _toConsumableArray(new Array(segments)).map(function (_, index) {\n      return {\n        x: width / 2 - Math.random() * width,\n        y: width / 2 - Math.random() * width,\n        scale: 0.4 + Math.sin((index + 1) / segments * Math.PI) * ((0.2 + Math.random()) * 10),\n        density: Math.max(0.2, Math.random()),\n        rotation: Math.max(0.002, 0.005 * Math.random()) * speed\n      };\n    });\n  }, [width, segments, speed]);\n  useFrame(function (state) {\n    var _group$current;\n\n    return (_group$current = group.current) == null ? void 0 : _group$current.children.forEach(function (cloud, index) {\n      cloud.rotation.z += clouds[index].rotation * dir;\n      cloud.scale.setScalar(clouds[index].scale + (1 + Math.sin(state.clock.getElapsedTime() / 10)) / 2 * index / 10);\n    });\n  });\n  return /*#__PURE__*/createElement(\"group\", props, /*#__PURE__*/createElement(\"group\", {\n    position: [0, 0, segments / 2 * length],\n    ref: group\n  }, clouds.map(function (_ref2, index) {\n    var x = _ref2.x,\n        y = _ref2.y,\n        scale = _ref2.scale,\n        density = _ref2.density;\n    return /*#__PURE__*/createElement(Billboard, {\n      key: index,\n      scale: [scale, scale, scale],\n      position: [x, y, -index * length],\n      lockZ: true\n    }, /*#__PURE__*/createElement(\"meshStandardMaterial\", {\n      map: texture,\n      transparent: true,\n      opacity: scale / 6 * density * opacity,\n      depthTest: false\n    }));\n  })));\n}\n\nexport { Cloud };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/@react-three/drei/core/Cloud.js"],"names":["_objectWithoutPropertiesLoose","useRef","useMemo","createElement","useFrame","Billboard","useTexture","CloudImage","Cloud","_ref","opacity","speed","width","length","segments","dir","props","group","texture","clouds","Array","map","_","index","x","Math","random","y","scale","sin","PI","density","max","rotation","state","_group$current","current","children","forEach","cloud","z","setScalar","clock","getElapsedTime","position","ref","key","lockZ","transparent","depthTest"],"mappings":";AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,SAASC,KAAT,CAAeC,IAAf,EAAqB;AACnB,qBAOIA,IAPJ,CACEC,OADF;AAAA,MACEA,OADF,6BACY,GADZ;AAAA,mBAOID,IAPJ,CAEEE,KAFF;AAAA,MAEEA,KAFF,2BAEU,GAFV;AAAA,mBAOIF,IAPJ,CAGEG,KAHF;AAAA,MAGEA,KAHF,2BAGU,EAHV;AAAA,oBAOIH,IAPJ,CAIEI,MAJF;AAAA,MAIEA,MAJF,4BAIW,GAJX;AAAA,sBAOIJ,IAPJ,CAKEK,QALF;AAAA,MAKEA,QALF,8BAKa,EALb;AAAA,iBAOIL,IAPJ,CAMEM,GANF;AAAA,MAMEA,GANF,yBAMQ,CANR;AAAA,MAQIC,KARJ,GAQYhB,6BAA6B,CAACS,IAAD,EAAO,CAAC,SAAD,EAAY,OAAZ,EAAqB,OAArB,EAA8B,QAA9B,EAAwC,UAAxC,EAAoD,KAApD,CAAP,CARzC;;AAUA,MAAMQ,KAAK,GAAGhB,MAAM,EAApB;AACA,MAAMiB,OAAO,GAAGZ,UAAU,CAACC,UAAD,CAA1B;AACA,MAAMY,MAAM,GAAGjB,OAAO,CAAC;AAAA,WAAM,mBAAI,IAAIkB,KAAJ,CAAUN,QAAV,CAAJ,EAAyBO,GAAzB,CAA6B,UAACC,CAAD,EAAIC,KAAJ;AAAA,aAAe;AACvEC,QAAAA,CAAC,EAAEZ,KAAK,GAAG,CAAR,GAAYa,IAAI,CAACC,MAAL,KAAgBd,KADwC;AAEvEe,QAAAA,CAAC,EAAEf,KAAK,GAAG,CAAR,GAAYa,IAAI,CAACC,MAAL,KAAgBd,KAFwC;AAGvEgB,QAAAA,KAAK,EAAE,MAAMH,IAAI,CAACI,GAAL,CAAS,CAACN,KAAK,GAAG,CAAT,IAAcT,QAAd,GAAyBW,IAAI,CAACK,EAAvC,KAA8C,CAAC,MAAML,IAAI,CAACC,MAAL,EAAP,IAAwB,EAAtE,CAH0D;AAIvEK,QAAAA,OAAO,EAAEN,IAAI,CAACO,GAAL,CAAS,GAAT,EAAcP,IAAI,CAACC,MAAL,EAAd,CAJ8D;AAKvEO,QAAAA,QAAQ,EAAER,IAAI,CAACO,GAAL,CAAS,KAAT,EAAgB,QAAQP,IAAI,CAACC,MAAL,EAAxB,IAAyCf;AALoB,OAAf;AAAA,KAA7B,CAAN;AAAA,GAAD,EAMjB,CAACC,KAAD,EAAQE,QAAR,EAAkBH,KAAlB,CANiB,CAAtB;AAOAP,EAAAA,QAAQ,CAAC,UAAA8B,KAAK,EAAI;AAChB,QAAIC,cAAJ;;AAEA,WAAO,CAACA,cAAc,GAAGlB,KAAK,CAACmB,OAAxB,KAAoC,IAApC,GAA2C,KAAK,CAAhD,GAAoDD,cAAc,CAACE,QAAf,CAAwBC,OAAxB,CAAgC,UAACC,KAAD,EAAQhB,KAAR,EAAkB;AAC3GgB,MAAAA,KAAK,CAACN,QAAN,CAAeO,CAAf,IAAoBrB,MAAM,CAACI,KAAD,CAAN,CAAcU,QAAd,GAAyBlB,GAA7C;AACAwB,MAAAA,KAAK,CAACX,KAAN,CAAYa,SAAZ,CAAsBtB,MAAM,CAACI,KAAD,CAAN,CAAcK,KAAd,GAAsB,CAAC,IAAIH,IAAI,CAACI,GAAL,CAASK,KAAK,CAACQ,KAAN,CAAYC,cAAZ,KAA+B,EAAxC,CAAL,IAAoD,CAApD,GAAwDpB,KAAxD,GAAgE,EAA5G;AACD,KAH0D,CAA3D;AAID,GAPO,CAAR;AAQA,SAAO,aAAapB,aAAa,CAAC,OAAD,EAAUa,KAAV,EAAiB,aAAab,aAAa,CAAC,OAAD,EAAU;AACpFyC,IAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO9B,QAAQ,GAAG,CAAX,GAAeD,MAAtB,CAD0E;AAEpFgC,IAAAA,GAAG,EAAE5B;AAF+E,GAAV,EAGzEE,MAAM,CAACE,GAAP,CAAW,iBAKXE,KALW;AAAA,QACZC,CADY,SACZA,CADY;AAAA,QAEZG,CAFY,SAEZA,CAFY;AAAA,QAGZC,KAHY,SAGZA,KAHY;AAAA,QAIZG,OAJY,SAIZA,OAJY;AAAA,WAKD,aAAa5B,aAAa,CAACE,SAAD,EAAY;AACjDyC,MAAAA,GAAG,EAAEvB,KAD4C;AAEjDK,MAAAA,KAAK,EAAE,CAACA,KAAD,EAAQA,KAAR,EAAeA,KAAf,CAF0C;AAGjDgB,MAAAA,QAAQ,EAAE,CAACpB,CAAD,EAAIG,CAAJ,EAAO,CAACJ,KAAD,GAASV,MAAhB,CAHuC;AAIjDkC,MAAAA,KAAK,EAAE;AAJ0C,KAAZ,EAKpC,aAAa5C,aAAa,CAAC,sBAAD,EAAyB;AACpDkB,MAAAA,GAAG,EAAEH,OAD+C;AAEpD8B,MAAAA,WAAW,EAAE,IAFuC;AAGpDtC,MAAAA,OAAO,EAAEkB,KAAK,GAAG,CAAR,GAAYG,OAAZ,GAAsBrB,OAHqB;AAIpDuC,MAAAA,SAAS,EAAE;AAJyC,KAAzB,CALU,CALzB;AAAA,GAAX,CAHyE,CAA3C,CAAjC;AAmBD;;AAED,SAASzC,KAAT","sourcesContent":["import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useRef, useMemo, createElement } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Billboard } from './Billboard.js';\nimport { useTexture } from './useTexture.js';\nimport CloudImage from '../assets/cloud.base64.js';\n\nfunction Cloud(_ref) {\n  let {\n    opacity = 0.5,\n    speed = 0.4,\n    width = 10,\n    length = 1.5,\n    segments = 20,\n    dir = 1\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"opacity\", \"speed\", \"width\", \"length\", \"segments\", \"dir\"]);\n\n  const group = useRef();\n  const texture = useTexture(CloudImage);\n  const clouds = useMemo(() => [...new Array(segments)].map((_, index) => ({\n    x: width / 2 - Math.random() * width,\n    y: width / 2 - Math.random() * width,\n    scale: 0.4 + Math.sin((index + 1) / segments * Math.PI) * ((0.2 + Math.random()) * 10),\n    density: Math.max(0.2, Math.random()),\n    rotation: Math.max(0.002, 0.005 * Math.random()) * speed\n  })), [width, segments, speed]);\n  useFrame(state => {\n    var _group$current;\n\n    return (_group$current = group.current) == null ? void 0 : _group$current.children.forEach((cloud, index) => {\n      cloud.rotation.z += clouds[index].rotation * dir;\n      cloud.scale.setScalar(clouds[index].scale + (1 + Math.sin(state.clock.getElapsedTime() / 10)) / 2 * index / 10);\n    });\n  });\n  return /*#__PURE__*/createElement(\"group\", props, /*#__PURE__*/createElement(\"group\", {\n    position: [0, 0, segments / 2 * length],\n    ref: group\n  }, clouds.map(({\n    x,\n    y,\n    scale,\n    density\n  }, index) => /*#__PURE__*/createElement(Billboard, {\n    key: index,\n    scale: [scale, scale, scale],\n    position: [x, y, -index * length],\n    lockZ: true\n  }, /*#__PURE__*/createElement(\"meshStandardMaterial\", {\n    map: texture,\n    transparent: true,\n    opacity: scale / 6 * density * opacity,\n    depthTest: false\n  })))));\n}\n\nexport { Cloud };\n"]},"metadata":{},"sourceType":"module"}