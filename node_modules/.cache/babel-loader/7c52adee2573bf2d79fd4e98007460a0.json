{"ast":null,"code":"import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public\";\nimport * as utils from \"../utils/utils\";\nimport { first, map, reduce } from \"../utils/utils\";\nimport { NonTerminal, Rule, Terminal } from \"./grammar/gast/gast_public\";\nimport { getProductionDslName } from \"./grammar/gast/gast\";\nexport var defaultParserErrorProvider = {\n  buildMismatchTokenMessage: function buildMismatchTokenMessage(_a) {\n    var expected = _a.expected,\n        actual = _a.actual,\n        previous = _a.previous,\n        ruleName = _a.ruleName;\n    var hasLabel = hasTokenLabel(expected);\n    var expectedMsg = hasLabel ? \"--> \" + tokenLabel(expected) + \" <--\" : \"token of type --> \" + expected.name + \" <--\";\n    var msg = \"Expecting \" + expectedMsg + \" but found --> '\" + actual.image + \"' <--\";\n    return msg;\n  },\n  buildNotAllInputParsedMessage: function buildNotAllInputParsedMessage(_a) {\n    var firstRedundant = _a.firstRedundant,\n        ruleName = _a.ruleName;\n    return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n  },\n  buildNoViableAltMessage: function buildNoViableAltMessage(_a) {\n    var expectedPathsPerAlt = _a.expectedPathsPerAlt,\n        actual = _a.actual,\n        previous = _a.previous,\n        customUserDescription = _a.customUserDescription,\n        ruleName = _a.ruleName;\n    var errPrefix = \"Expecting: \"; // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n\n    var actualText = first(actual).image;\n    var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix;\n    } else {\n      var allLookAheadPaths = reduce(expectedPathsPerAlt, function (result, currAltPaths) {\n        return result.concat(currAltPaths);\n      }, []);\n      var nextValidTokenSequences = map(allLookAheadPaths, function (currPath) {\n        return \"[\" + map(currPath, function (currTokenType) {\n          return tokenLabel(currTokenType);\n        }).join(\", \") + \"]\";\n      });\n      var nextValidSequenceItems = map(nextValidTokenSequences, function (itemMsg, idx) {\n        return \"  \" + (idx + 1) + \". \" + itemMsg;\n      });\n      var calculatedDescription = \"one of these possible Token sequences:\\n\" + nextValidSequenceItems.join(\"\\n\");\n      return errPrefix + calculatedDescription + errSuffix;\n    }\n  },\n  buildEarlyExitMessage: function buildEarlyExitMessage(_a) {\n    var expectedIterationPaths = _a.expectedIterationPaths,\n        actual = _a.actual,\n        customUserDescription = _a.customUserDescription,\n        ruleName = _a.ruleName;\n    var errPrefix = \"Expecting: \"; // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n\n    var actualText = first(actual).image;\n    var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix;\n    } else {\n      var nextValidTokenSequences = map(expectedIterationPaths, function (currPath) {\n        return \"[\" + map(currPath, function (currTokenType) {\n          return tokenLabel(currTokenType);\n        }).join(\",\") + \"]\";\n      });\n      var calculatedDescription = \"expecting at least one iteration which starts with one of these possible Token sequences::\\n  \" + (\"<\" + nextValidTokenSequences.join(\" ,\") + \">\");\n      return errPrefix + calculatedDescription + errSuffix;\n    }\n  }\n};\nObject.freeze(defaultParserErrorProvider);\nexport var defaultGrammarResolverErrorProvider = {\n  buildRuleNotFoundError: function buildRuleNotFoundError(topLevelRule, undefinedRule) {\n    var msg = \"Invalid grammar, reference to a rule which is not defined: ->\" + undefinedRule.nonTerminalName + \"<-\\n\" + \"inside top level rule: ->\" + topLevelRule.name + \"<-\";\n    return msg;\n  }\n};\nexport var defaultGrammarValidatorErrorProvider = {\n  buildDuplicateFoundError: function buildDuplicateFoundError(topLevelRule, duplicateProds) {\n    function getExtraProductionArgument(prod) {\n      if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n      } else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n      } else {\n        return \"\";\n      }\n    }\n\n    var topLevelName = topLevelRule.name;\n    var duplicateProd = first(duplicateProds);\n    var index = duplicateProd.idx;\n    var dslName = getProductionDslName(duplicateProd);\n    var extraArgument = getExtraProductionArgument(duplicateProd);\n    var hasExplicitIndex = index > 0;\n    var msg = \"->\" + dslName + (hasExplicitIndex ? index : \"\") + \"<- \" + (extraArgument ? \"with argument: ->\" + extraArgument + \"<-\" : \"\") + \"\\n                  appears more than once (\" + duplicateProds.length + \" times) in the top level rule: ->\" + topLevelName + \"<-.                  \\n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \\n                  \"; // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n\n    msg = msg.replace(/[ \\t]+/g, \" \");\n    msg = msg.replace(/\\s\\s+/g, \"\\n\");\n    return msg;\n  },\n  buildNamespaceConflictError: function buildNamespaceConflictError(rule) {\n    var errMsg = \"Namespace conflict found in grammar.\\n\" + (\"The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <\" + rule.name + \">.\\n\") + \"To resolve this make sure each Terminal and Non-Terminal names are unique\\n\" + \"This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n\" + \"and Non-Terminal names start with a lower case letter.\";\n    return errMsg;\n  },\n  buildAlternationPrefixAmbiguityError: function buildAlternationPrefixAmbiguityError(options) {\n    var pathMsg = map(options.prefixPath, function (currTok) {\n      return tokenLabel(currTok);\n    }).join(\", \");\n    var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n    var errMsg = \"Ambiguous alternatives: <\" + options.ambiguityIndices.join(\" ,\") + \"> due to common lookahead prefix\\n\" + (\"in <OR\" + occurrence + \"> inside <\" + options.topLevelRule.name + \"> Rule,\\n\") + (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\") + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n\" + \"For Further details.\";\n    return errMsg;\n  },\n  buildAlternationAmbiguityError: function buildAlternationAmbiguityError(options) {\n    var pathMsg = map(options.prefixPath, function (currtok) {\n      return tokenLabel(currtok);\n    }).join(\", \");\n    var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n    var currMessage = \"Ambiguous Alternatives Detected: <\" + options.ambiguityIndices.join(\" ,\") + \"> in <OR\" + occurrence + \">\" + (\" inside <\" + options.topLevelRule.name + \"> Rule,\\n\") + (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\");\n    currMessage = currMessage + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n\" + \"For Further details.\";\n    return currMessage;\n  },\n  buildEmptyRepetitionError: function buildEmptyRepetitionError(options) {\n    var dslName = getProductionDslName(options.repetition);\n\n    if (options.repetition.idx !== 0) {\n      dslName += options.repetition.idx;\n    }\n\n    var errMsg = \"The repetition <\" + dslName + \"> within Rule <\" + options.topLevelRule.name + \"> can never consume any tokens.\\n\" + \"This could lead to an infinite loop.\";\n    return errMsg;\n  },\n  // TODO: remove - `errors_public` from nyc.config.js exclude\n  //       once this method is fully removed from this file\n  buildTokenNameError: function buildTokenNameError(options) {\n    /* istanbul ignore next */\n    return \"deprecated\";\n  },\n  buildEmptyAlternationError: function buildEmptyAlternationError(options) {\n    var errMsg = \"Ambiguous empty alternative: <\" + (options.emptyChoiceIdx + 1) + \">\" + (\" in <OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n\") + \"Only the last alternative may be an empty alternative.\";\n    return errMsg;\n  },\n  buildTooManyAlternativesError: function buildTooManyAlternativesError(options) {\n    var errMsg = \"An Alternation cannot have more than 256 alternatives:\\n\" + (\"<OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n has \" + (options.alternation.definition.length + 1) + \" alternatives.\");\n    return errMsg;\n  },\n  buildLeftRecursionError: function buildLeftRecursionError(options) {\n    var ruleName = options.topLevelRule.name;\n    var pathNames = utils.map(options.leftRecursionPath, function (currRule) {\n      return currRule.name;\n    });\n    var leftRecursivePath = ruleName + \" --> \" + pathNames.concat([ruleName]).join(\" --> \");\n    var errMsg = \"Left Recursion found in grammar.\\n\" + (\"rule: <\" + ruleName + \"> can be invoked from itself (directly or indirectly)\\n\") + (\"without consuming any Tokens. The grammar path that causes this is: \\n \" + leftRecursivePath + \"\\n\") + \" To fix this refactor your grammar to remove the left recursion.\\n\" + \"see: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring.\";\n    return errMsg;\n  },\n  // TODO: remove - `errors_public` from nyc.config.js exclude\n  //       once this method is fully removed from this file\n  buildInvalidRuleNameError: function buildInvalidRuleNameError(options) {\n    /* istanbul ignore next */\n    return \"deprecated\";\n  },\n  buildDuplicateRuleNameError: function buildDuplicateRuleNameError(options) {\n    var ruleName;\n\n    if (options.topLevelRule instanceof Rule) {\n      ruleName = options.topLevelRule.name;\n    } else {\n      ruleName = options.topLevelRule;\n    }\n\n    var errMsg = \"Duplicate definition, rule: ->\" + ruleName + \"<- is already defined in the grammar: ->\" + options.grammarName + \"<-\";\n    return errMsg;\n  }\n};","map":{"version":3,"sources":["../../../src/parse/errors_public.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public\";\nimport * as utils from \"../utils/utils\";\nimport { first, map, reduce } from \"../utils/utils\";\nimport { NonTerminal, Rule, Terminal } from \"./grammar/gast/gast_public\";\nimport { getProductionDslName } from \"./grammar/gast/gast\";\nexport var defaultParserErrorProvider = {\n    buildMismatchTokenMessage: function (_a) {\n        var expected = _a.expected, actual = _a.actual, previous = _a.previous, ruleName = _a.ruleName;\n        var hasLabel = hasTokenLabel(expected);\n        var expectedMsg = hasLabel\n            ? \"--> \" + tokenLabel(expected) + \" <--\"\n            : \"token of type --> \" + expected.name + \" <--\";\n        var msg = \"Expecting \" + expectedMsg + \" but found --> '\" + actual.image + \"' <--\";\n        return msg;\n    },\n    buildNotAllInputParsedMessage: function (_a) {\n        var firstRedundant = _a.firstRedundant, ruleName = _a.ruleName;\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage: function (_a) {\n        var expectedPathsPerAlt = _a.expectedPathsPerAlt, actual = _a.actual, previous = _a.previous, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;\n        var errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        var actualText = first(actual).image;\n        var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            var allLookAheadPaths = reduce(expectedPathsPerAlt, function (result, currAltPaths) { return result.concat(currAltPaths); }, []);\n            var nextValidTokenSequences = map(allLookAheadPaths, function (currPath) {\n                return \"[\" + map(currPath, function (currTokenType) { return tokenLabel(currTokenType); }).join(\", \") + \"]\";\n            });\n            var nextValidSequenceItems = map(nextValidTokenSequences, function (itemMsg, idx) { return \"  \" + (idx + 1) + \". \" + itemMsg; });\n            var calculatedDescription = \"one of these possible Token sequences:\\n\" + nextValidSequenceItems.join(\"\\n\");\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage: function (_a) {\n        var expectedIterationPaths = _a.expectedIterationPaths, actual = _a.actual, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;\n        var errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        var actualText = first(actual).image;\n        var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            var nextValidTokenSequences = map(expectedIterationPaths, function (currPath) {\n                return \"[\" + map(currPath, function (currTokenType) { return tokenLabel(currTokenType); }).join(\",\") + \"]\";\n            });\n            var calculatedDescription = \"expecting at least one iteration which starts with one of these possible Token sequences::\\n  \" +\n                (\"<\" + nextValidTokenSequences.join(\" ,\") + \">\");\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    }\n};\nObject.freeze(defaultParserErrorProvider);\nexport var defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError: function (topLevelRule, undefinedRule) {\n        var msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    }\n};\nexport var defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError: function (topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        var topLevelName = topLevelRule.name;\n        var duplicateProd = first(duplicateProds);\n        var index = duplicateProd.idx;\n        var dslName = getProductionDslName(duplicateProd);\n        var extraArgument = getExtraProductionArgument(duplicateProd);\n        var hasExplicitIndex = index > 0;\n        var msg = \"->\" + dslName + (hasExplicitIndex ? index : \"\") + \"<- \" + (extraArgument ? \"with argument: ->\" + extraArgument + \"<-\" : \"\") + \"\\n                  appears more than once (\" + duplicateProds.length + \" times) in the top level rule: ->\" + topLevelName + \"<-.                  \\n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \\n                  \";\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError: function (rule) {\n        var errMsg = \"Namespace conflict found in grammar.\\n\" +\n            (\"The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <\" + rule.name + \">.\\n\") +\n            \"To resolve this make sure each Terminal and Non-Terminal names are unique\\n\" +\n            \"This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n\" +\n            \"and Non-Terminal names start with a lower case letter.\";\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError: function (options) {\n        var pathMsg = map(options.prefixPath, function (currTok) {\n            return tokenLabel(currTok);\n        }).join(\", \");\n        var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        var errMsg = \"Ambiguous alternatives: <\" + options.ambiguityIndices.join(\" ,\") + \"> due to common lookahead prefix\\n\" +\n            (\"in <OR\" + occurrence + \"> inside <\" + options.topLevelRule.name + \"> Rule,\\n\") +\n            (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\") +\n            \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n\" +\n            \"For Further details.\";\n        return errMsg;\n    },\n    buildAlternationAmbiguityError: function (options) {\n        var pathMsg = map(options.prefixPath, function (currtok) {\n            return tokenLabel(currtok);\n        }).join(\", \");\n        var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        var currMessage = \"Ambiguous Alternatives Detected: <\" + options.ambiguityIndices.join(\" ,\") + \"> in <OR\" + occurrence + \">\" +\n            (\" inside <\" + options.topLevelRule.name + \"> Rule,\\n\") +\n            (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\");\n        currMessage =\n            currMessage +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n\" +\n                \"For Further details.\";\n        return currMessage;\n    },\n    buildEmptyRepetitionError: function (options) {\n        var dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        var errMsg = \"The repetition <\" + dslName + \"> within Rule <\" + options.topLevelRule.name + \"> can never consume any tokens.\\n\" +\n            \"This could lead to an infinite loop.\";\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError: function (options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError: function (options) {\n        var errMsg = \"Ambiguous empty alternative: <\" + (options.emptyChoiceIdx + 1) + \">\" +\n            (\" in <OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n\") +\n            \"Only the last alternative may be an empty alternative.\";\n        return errMsg;\n    },\n    buildTooManyAlternativesError: function (options) {\n        var errMsg = \"An Alternation cannot have more than 256 alternatives:\\n\" +\n            (\"<OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n has \" + (options.alternation.definition.length + 1) + \" alternatives.\");\n        return errMsg;\n    },\n    buildLeftRecursionError: function (options) {\n        var ruleName = options.topLevelRule.name;\n        var pathNames = utils.map(options.leftRecursionPath, function (currRule) { return currRule.name; });\n        var leftRecursivePath = ruleName + \" --> \" + pathNames\n            .concat([ruleName])\n            .join(\" --> \");\n        var errMsg = \"Left Recursion found in grammar.\\n\" +\n            (\"rule: <\" + ruleName + \"> can be invoked from itself (directly or indirectly)\\n\") +\n            (\"without consuming any Tokens. The grammar path that causes this is: \\n \" + leftRecursivePath + \"\\n\") +\n            \" To fix this refactor your grammar to remove the left recursion.\\n\" +\n            \"see: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring.\";\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError: function (options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError: function (options) {\n        var ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        var errMsg = \"Duplicate definition, rule: ->\" + ruleName + \"<- is already defined in the grammar: ->\" + options.grammarName + \"<-\";\n        return errMsg;\n    }\n};\n//# sourceMappingURL=errors_public.js.map"]},"metadata":{},"sourceType":"module"}