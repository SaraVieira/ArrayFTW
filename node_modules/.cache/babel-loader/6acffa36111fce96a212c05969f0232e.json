{"ast":null,"code":"import _classCallCheck from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { UniformsUtils, WebGLRenderTarget, LinearFilter, NearestFilter, RGBAFormat, ShaderMaterial, MeshBasicMaterial } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { AfterimageShader } from '../shaders/AfterimageShader.js';\n\nvar AfterimagePass = /*#__PURE__*/function (_Pass) {\n  _inherits(AfterimagePass, _Pass);\n\n  var _super = _createSuper(AfterimagePass);\n\n  function AfterimagePass() {\n    var _this;\n\n    var damp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.96;\n    var shader = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : AfterimageShader;\n\n    _classCallCheck(this, AfterimagePass);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"shader\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"uniforms\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"textureComp\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"textureOld\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"shaderMaterial\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"compFsQuad\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"copyFsQuad\", void 0);\n\n    _this.shader = shader;\n    _this.uniforms = UniformsUtils.clone(shader.uniforms);\n    _this.uniforms['damp'].value = damp;\n    _this.textureComp = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    _this.textureOld = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    _this.shaderMaterial = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: _this.shader.vertexShader,\n      fragmentShader: _this.shader.fragmentShader\n    });\n    _this.compFsQuad = new FullScreenQuad(_this.shaderMaterial);\n    var material = new MeshBasicMaterial();\n    _this.copyFsQuad = new FullScreenQuad(material);\n    return _this;\n  }\n\n  _createClass(AfterimagePass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      this.uniforms['tOld'].value = this.textureOld.texture;\n      this.uniforms['tNew'].value = readBuffer.texture;\n      renderer.setRenderTarget(this.textureComp);\n      this.compFsQuad.render(renderer);\n      this.copyFsQuad.material.map = this.textureComp.texture;\n\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.copyFsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        if (this.clear) renderer.clear();\n        this.copyFsQuad.render(renderer);\n      } // Swap buffers.\n\n\n      var temp = this.textureOld;\n      this.textureOld = this.textureComp;\n      this.textureComp = temp; // Now textureOld contains the latest image, ready for the next frame.\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(width, height) {\n      this.textureComp.setSize(width, height);\n      this.textureOld.setSize(width, height);\n    }\n  }]);\n\n  return AfterimagePass;\n}(Pass);\n\nexport { AfterimagePass };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/postprocessing/AfterimagePass.js"],"names":["_defineProperty","UniformsUtils","WebGLRenderTarget","LinearFilter","NearestFilter","RGBAFormat","ShaderMaterial","MeshBasicMaterial","Pass","FullScreenQuad","AfterimageShader","AfterimagePass","damp","shader","uniforms","clone","value","textureComp","window","innerWidth","innerHeight","minFilter","magFilter","format","textureOld","shaderMaterial","vertexShader","fragmentShader","compFsQuad","material","copyFsQuad","renderer","writeBuffer","readBuffer","texture","setRenderTarget","render","map","renderToScreen","clear","temp","width","height","setSize"],"mappings":"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","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { UniformsUtils, WebGLRenderTarget, LinearFilter, NearestFilter, RGBAFormat, ShaderMaterial, MeshBasicMaterial } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { AfterimageShader } from '../shaders/AfterimageShader.js';\n\nclass AfterimagePass extends Pass {\n  constructor(damp = 0.96, shader = AfterimageShader) {\n    super();\n\n    _defineProperty(this, \"shader\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    _defineProperty(this, \"textureComp\", void 0);\n\n    _defineProperty(this, \"textureOld\", void 0);\n\n    _defineProperty(this, \"shaderMaterial\", void 0);\n\n    _defineProperty(this, \"compFsQuad\", void 0);\n\n    _defineProperty(this, \"copyFsQuad\", void 0);\n\n    this.shader = shader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.uniforms['damp'].value = damp;\n    this.textureComp = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    this.textureOld = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    this.shaderMaterial = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: this.shader.vertexShader,\n      fragmentShader: this.shader.fragmentShader\n    });\n    this.compFsQuad = new FullScreenQuad(this.shaderMaterial);\n    let material = new MeshBasicMaterial();\n    this.copyFsQuad = new FullScreenQuad(material);\n  }\n\n  render(renderer, writeBuffer, readBuffer) {\n    this.uniforms['tOld'].value = this.textureOld.texture;\n    this.uniforms['tNew'].value = readBuffer.texture;\n    renderer.setRenderTarget(this.textureComp);\n    this.compFsQuad.render(renderer);\n    this.copyFsQuad.material.map = this.textureComp.texture;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.copyFsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.copyFsQuad.render(renderer);\n    } // Swap buffers.\n\n\n    let temp = this.textureOld;\n    this.textureOld = this.textureComp;\n    this.textureComp = temp; // Now textureOld contains the latest image, ready for the next frame.\n  }\n\n  setSize(width, height) {\n    this.textureComp.setSize(width, height);\n    this.textureOld.setSize(width, height);\n  }\n\n}\n\nexport { AfterimagePass };\n"]},"metadata":{},"sourceType":"module"}