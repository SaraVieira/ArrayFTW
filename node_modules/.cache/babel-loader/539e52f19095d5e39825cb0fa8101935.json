{"ast":null,"code":"import { Loader, FileLoader, LoadingManager, Group } from 'three';\nimport { ColladaLoader } from './ColladaLoader.js';\nimport { unzipSync } from 'fflate';\n\nvar KMZLoader = function KMZLoader(manager) {\n  Loader.call(this, manager);\n};\n\nKMZLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: KMZLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  },\n  parse: function parse(data) {\n    function findFile(url) {\n      for (var path in zip) {\n        if (path.substr(-url.length) === url) {\n          return zip[path];\n        }\n      }\n    }\n\n    var manager = new LoadingManager();\n    manager.setURLModifier(function (url) {\n      var image = findFile(url);\n\n      if (image) {\n        console.log('Loading', url);\n        var blob = new Blob([image.buffer], {\n          type: 'application/octet-stream'\n        });\n        return URL.createObjectURL(blob);\n      }\n\n      return url;\n    }); //\n\n    var zip = unzipSync(new Uint8Array(data)); // eslint-disable-line no-undef\n\n    if (zip['doc.kml']) {\n      var xml = new DOMParser().parseFromString(fflate.strFromU8(zip['doc.kml']), 'application/xml'); // eslint-disable-line no-undef\n\n      var model = xml.querySelector('Placemark Model Link href');\n\n      if (model) {\n        var loader = new ColladaLoader(manager);\n        return loader.parse(fflate.strFromU8(zip[model.textContent])); // eslint-disable-line no-undef\n      }\n    } else {\n      console.warn('KMZLoader: Missing doc.kml file.');\n\n      for (var path in zip) {\n        var extension = path.split('.').pop().toLowerCase();\n\n        if (extension === 'dae') {\n          var loader = new ColladaLoader(manager);\n          return loader.parse(fflate.strFromU8(zip[path])); // eslint-disable-line no-undef\n        }\n      }\n    }\n\n    console.error(\"KMZLoader: Couldn't find .dae file.\");\n    return {\n      scene: new Group()\n    };\n  }\n});\nexport { KMZLoader };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/loaders/KMZLoader.js"],"names":["Loader","FileLoader","LoadingManager","Group","ColladaLoader","unzipSync","KMZLoader","manager","call","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","data","findFile","zip","substr","length","setURLModifier","image","log","blob","Blob","buffer","type","URL","createObjectURL","Uint8Array","xml","DOMParser","parseFromString","fflate","strFromU8","model","querySelector","textContent","warn","extension","split","pop","toLowerCase","scene"],"mappings":"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","sourcesContent":["import { Loader, FileLoader, LoadingManager, Group } from 'three';\nimport { ColladaLoader } from './ColladaLoader.js';\nimport { unzipSync } from 'fflate';\n\nvar KMZLoader = function (manager) {\n  Loader.call(this, manager);\n};\n\nKMZLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: KMZLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  },\n  parse: function (data) {\n    function findFile(url) {\n      for (let path in zip) {\n        if (path.substr(-url.length) === url) {\n          return zip[path];\n        }\n      }\n    }\n\n    var manager = new LoadingManager();\n    manager.setURLModifier(function (url) {\n      var image = findFile(url);\n\n      if (image) {\n        console.log('Loading', url);\n        var blob = new Blob([image.buffer], {\n          type: 'application/octet-stream'\n        });\n        return URL.createObjectURL(blob);\n      }\n\n      return url;\n    }); //\n\n    var zip = unzipSync(new Uint8Array(data)); // eslint-disable-line no-undef\n\n    if (zip['doc.kml']) {\n      var xml = new DOMParser().parseFromString(fflate.strFromU8(zip['doc.kml']), 'application/xml'); // eslint-disable-line no-undef\n\n      var model = xml.querySelector('Placemark Model Link href');\n\n      if (model) {\n        var loader = new ColladaLoader(manager);\n        return loader.parse(fflate.strFromU8(zip[model.textContent])); // eslint-disable-line no-undef\n      }\n    } else {\n      console.warn('KMZLoader: Missing doc.kml file.');\n\n      for (let path in zip) {\n        var extension = path.split('.').pop().toLowerCase();\n\n        if (extension === 'dae') {\n          var loader = new ColladaLoader(manager);\n          return loader.parse(fflate.strFromU8(zip[path])); // eslint-disable-line no-undef\n        }\n      }\n    }\n\n    console.error(\"KMZLoader: Couldn't find .dae file.\");\n    return {\n      scene: new Group()\n    };\n  }\n});\n\nexport { KMZLoader };\n"]},"metadata":{},"sourceType":"module"}