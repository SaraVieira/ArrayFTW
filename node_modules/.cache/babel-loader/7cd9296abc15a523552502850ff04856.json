{"ast":null,"code":"import _classCallCheck from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, PerspectiveCamera, Quaternion, Spherical, Vector2, OrthographicCamera } from 'three'; // Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(OrbitControls, _EventDispatcher);\n\n  var _super = _createSuper(OrbitControls);\n\n  // Set to false to disable this control\n  // \"target\" sets the location of focus, where the object orbits around\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  // How far you can zoom in and out ( OrthographicCamera only )\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  // radians\n  // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  // radians\n  // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  // Set to false to disable rotating\n  // Set to false to disable panning\n  // if false, pan orthogonal to world-space direction camera.up\n  // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  // 30 seconds per orbit when fps is 60\n  // The four arrow keys\n  // Mouse buttons\n  // Touch fingers\n  // the target DOM element for key events\n  function OrbitControls(object, domElement) {\n    var _this;\n\n    _classCallCheck(this, OrbitControls);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"object\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"domElement\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"enabled\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"target\", new Vector3());\n\n    _defineProperty(_assertThisInitialized(_this), \"minDistance\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxDistance\", Infinity);\n\n    _defineProperty(_assertThisInitialized(_this), \"minZoom\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxZoom\", Infinity);\n\n    _defineProperty(_assertThisInitialized(_this), \"minPolarAngle\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxPolarAngle\", Math.PI);\n\n    _defineProperty(_assertThisInitialized(_this), \"minAzimuthAngle\", -Infinity);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxAzimuthAngle\", Infinity);\n\n    _defineProperty(_assertThisInitialized(_this), \"enableDamping\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"dampingFactor\", 0.05);\n\n    _defineProperty(_assertThisInitialized(_this), \"enableZoom\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"zoomSpeed\", 1.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"enableRotate\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"rotateSpeed\", 1.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"enablePan\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"panSpeed\", 1.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"screenSpacePanning\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"keyPanSpeed\", 7.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"autoRotate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"autoRotateSpeed\", 2.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"keys\", {\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      BOTTOM: 40\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"target0\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"position0\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"zoom0\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_domElementKeyEvents\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"getPolarAngle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getAzimuthalAngle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"listenToKeyEvents\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"saveState\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"reset\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"connect\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"dispose\", void 0);\n\n    _this.object = object;\n    _this.domElement = domElement; // for reset\n\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.zoom0 = _this.object instanceof PerspectiveCamera ? _this.object.zoom : 1; //\n    // public methods\n    //\n\n    _this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n\n    _this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n\n    _this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      _this._domElementKeyEvents = domElement;\n    };\n\n    _this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object instanceof PerspectiveCamera ? scope.object.zoom : 1;\n    };\n\n    _this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n\n      if (scope.object instanceof PerspectiveCamera) {\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n      }\n\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    _this.update = function () {\n      var offset = new Vector3(); // so camera.up is the orbit axis\n\n      var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      var quatInverse = quat.clone().invert();\n      var lastPosition = new Vector3();\n      var lastQuaternion = new Quaternion();\n      var twoPI = 2 * Math.PI;\n      return function update() {\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        var min = scope.minAzimuthAngle;\n        var max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    }(); // https://github.com/mrdoob/three.js/issues/20575\n\n\n    _this.connect = function (domElement) {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n\n      scope.domElement = domElement;\n      scope.domElement.addEventListener('contextmenu', onContextMenu);\n      scope.domElement.addEventListener('pointerdown', onPointerDown);\n      scope.domElement.addEventListener('wheel', onMouseWheel);\n      scope.domElement.addEventListener('touchstart', onTouchStart);\n      scope.domElement.addEventListener('touchend', onTouchEnd);\n      scope.domElement.addEventListener('touchmove', onTouchMove);\n    };\n\n    _this.dispose = function () {\n      var _scope$domElement, _scope$domElement2, _scope$domElement3, _scope$domElement4, _scope$domElement5, _scope$domElement6, _scope$domElement7, _scope$domElement8;\n\n      (_scope$domElement = scope.domElement) === null || _scope$domElement === void 0 ? void 0 : _scope$domElement.removeEventListener('contextmenu', onContextMenu);\n      (_scope$domElement2 = scope.domElement) === null || _scope$domElement2 === void 0 ? void 0 : _scope$domElement2.removeEventListener('pointerdown', onPointerDown);\n      (_scope$domElement3 = scope.domElement) === null || _scope$domElement3 === void 0 ? void 0 : _scope$domElement3.removeEventListener('wheel', onMouseWheel);\n      (_scope$domElement4 = scope.domElement) === null || _scope$domElement4 === void 0 ? void 0 : _scope$domElement4.removeEventListener('touchstart', onTouchStart);\n      (_scope$domElement5 = scope.domElement) === null || _scope$domElement5 === void 0 ? void 0 : _scope$domElement5.removeEventListener('touchend', onTouchEnd);\n      (_scope$domElement6 = scope.domElement) === null || _scope$domElement6 === void 0 ? void 0 : _scope$domElement6.removeEventListener('touchmove', onTouchMove);\n      (_scope$domElement7 = scope.domElement) === null || _scope$domElement7 === void 0 ? void 0 : _scope$domElement7.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement8 = scope.domElement) === null || _scope$domElement8 === void 0 ? void 0 : _scope$domElement8.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    var scope = _assertThisInitialized(_this);\n\n    var changeEvent = {\n      type: 'change'\n    };\n    var startEvent = {\n      type: 'start'\n    };\n    var endEvent = {\n      type: 'end'\n    };\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    var state = STATE.NONE;\n    var EPS = 0.000001; // current position in spherical coordinates\n\n    var spherical = new Spherical();\n    var sphericalDelta = new Spherical();\n    var scale = 1;\n    var panOffset = new Vector3();\n    var zoomChanged = false;\n    var rotateStart = new Vector2();\n    var rotateEnd = new Vector2();\n    var rotateDelta = new Vector2();\n    var panStart = new Vector2();\n    var panEnd = new Vector2();\n    var panDelta = new Vector2();\n    var dollyStart = new Vector2();\n    var dollyEnd = new Vector2();\n    var dollyDelta = new Vector2();\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = function () {\n      var v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n\n    var panUp = function () {\n      var v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    var pan = function () {\n      var offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        var element = scope.domElement;\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      var needsUpdate = false;\n\n      switch (event.keyCode) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate(event) {\n      if (event.touches.length == 1) {\n        rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan(event) {\n      if (event.touches.length == 1) {\n        panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly(event) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enablePan) handleTouchStartPan(event);\n    }\n\n    function handleTouchStartDollyRotate(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enableRotate) handleTouchStartRotate(event);\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (event.touches.length == 1) {\n        rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (event.touches.length == 1) {\n        panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    } // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseDown(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseMove(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerUp(event) {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseUp();\n          break;\n        // TODO touch\n      }\n    }\n\n    function onMouseDown(event) {\n      var _scope$domElement9; // Prevent the browser from scrolling.\n\n\n      event.preventDefault(); // Manually set the focus since calling preventDefault above\n      // prevents the browser from setting it automatically.\n\n      (_scope$domElement9 = scope.domElement) !== null && _scope$domElement9 !== void 0 && _scope$domElement9.focus ? scope.domElement.focus() : window.focus();\n      var mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        var _scope$domElement10, _scope$domElement11;\n\n        (_scope$domElement10 = scope.domElement) === null || _scope$domElement10 === void 0 ? void 0 : _scope$domElement10.ownerDocument.addEventListener('pointermove', onPointerMove);\n        (_scope$domElement11 = scope.domElement) === null || _scope$domElement11 === void 0 ? void 0 : _scope$domElement11.ownerDocument.addEventListener('pointerup', onPointerUp);\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseUp() {\n      var _scope$domElement12, _scope$domElement13;\n\n      (_scope$domElement12 = scope.domElement) === null || _scope$domElement12 === void 0 ? void 0 : _scope$domElement12.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement13 = scope.domElement) === null || _scope$domElement13 === void 0 ? void 0 : _scope$domElement13.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      if (scope.enabled === false) return;\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (event.touches.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate(event);\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan(event);\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan(event);\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate(event);\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd() {\n      if (scope.enabled === false) return;\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    } // connect events\n\n\n    if (domElement !== undefined) _this.connect(domElement); // force an update at start\n\n    _this.update();\n\n    return _this;\n  }\n\n  return OrbitControls;\n}(EventDispatcher); // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nvar MapControls = /*#__PURE__*/function (_OrbitControls) {\n  _inherits(MapControls, _OrbitControls);\n\n  var _super2 = _createSuper(MapControls);\n\n  function MapControls(object, domElement) {\n    var _this2;\n\n    _classCallCheck(this, MapControls);\n\n    _this2 = _super2.call(this, object, domElement);\n    _this2.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    _this2.mouseButtons.LEFT = MOUSE.PAN;\n    _this2.mouseButtons.RIGHT = MOUSE.ROTATE;\n    _this2.touches.ONE = TOUCH.PAN;\n    _this2.touches.TWO = TOUCH.DOLLY_ROTATE;\n    return _this2;\n  }\n\n  return MapControls;\n}(OrbitControls);\n\nexport { MapControls, OrbitControls };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/controls/OrbitControls.js"],"names":["_defineProperty","EventDispatcher","Vector3","MOUSE","TOUCH","PerspectiveCamera","Quaternion","Spherical","Vector2","OrthographicCamera","OrbitControls","object","domElement","Infinity","Math","PI","LEFT","UP","RIGHT","BOTTOM","ROTATE","MIDDLE","DOLLY","PAN","ONE","TWO","DOLLY_PAN","target0","target","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","addEventListener","onKeyDown","_domElementKeyEvents","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","autoRotate","rotateLeft","getAutoRotationAngle","enableDamping","sphericalDelta","dampingFactor","min","minAzimuthAngle","max","maxAzimuthAngle","isFinite","minPolarAngle","maxPolarAngle","makeSafe","radius","scale","minDistance","maxDistance","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","connect","document","console","error","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","dispose","_scope$domElement","_scope$domElement2","_scope$domElement3","_scope$domElement4","_scope$domElement5","_scope$domElement6","_scope$domElement7","_scope$domElement8","removeEventListener","ownerDocument","onPointerMove","onPointerUp","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","autoRotateSpeed","getZoomScale","pow","zoomSpeed","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","screenSpacePanning","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","warn","enablePan","dollyOut","dollyScale","minZoom","maxZoom","enableZoom","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","rotateSpeed","x","y","handleMouseMoveDolly","handleMouseMovePan","panSpeed","handleMouseWheel","handleKeyDown","needsUpdate","keyCode","keys","keyPanSpeed","preventDefault","handleTouchStartRotate","touches","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","enableRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","enabled","pointerType","onMouseDown","onMouseMove","onMouseUp","_scope$domElement9","focus","window","mouseAction","button","mouseButtons","ctrlKey","metaKey","shiftKey","_scope$domElement10","_scope$domElement11","_scope$domElement12","_scope$domElement13","DOLLY_ROTATE","undefined","MapControls"],"mappings":"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","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, PerspectiveCamera, Quaternion, Spherical, Vector2, OrthographicCamera } from 'three';\n\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nclass OrbitControls extends EventDispatcher {\n  // Set to false to disable this control\n  // \"target\" sets the location of focus, where the object orbits around\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  // How far you can zoom in and out ( OrthographicCamera only )\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  // radians\n  // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  // radians\n  // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  // Set to false to disable rotating\n  // Set to false to disable panning\n  // if false, pan orthogonal to world-space direction camera.up\n  // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  // 30 seconds per orbit when fps is 60\n  // The four arrow keys\n  // Mouse buttons\n  // Touch fingers\n  // the target DOM element for key events\n  constructor(object, domElement) {\n    super();\n\n    _defineProperty(this, \"object\", void 0);\n\n    _defineProperty(this, \"domElement\", void 0);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"target\", new Vector3());\n\n    _defineProperty(this, \"minDistance\", 0);\n\n    _defineProperty(this, \"maxDistance\", Infinity);\n\n    _defineProperty(this, \"minZoom\", 0);\n\n    _defineProperty(this, \"maxZoom\", Infinity);\n\n    _defineProperty(this, \"minPolarAngle\", 0);\n\n    _defineProperty(this, \"maxPolarAngle\", Math.PI);\n\n    _defineProperty(this, \"minAzimuthAngle\", -Infinity);\n\n    _defineProperty(this, \"maxAzimuthAngle\", Infinity);\n\n    _defineProperty(this, \"enableDamping\", false);\n\n    _defineProperty(this, \"dampingFactor\", 0.05);\n\n    _defineProperty(this, \"enableZoom\", true);\n\n    _defineProperty(this, \"zoomSpeed\", 1.0);\n\n    _defineProperty(this, \"enableRotate\", true);\n\n    _defineProperty(this, \"rotateSpeed\", 1.0);\n\n    _defineProperty(this, \"enablePan\", true);\n\n    _defineProperty(this, \"panSpeed\", 1.0);\n\n    _defineProperty(this, \"screenSpacePanning\", true);\n\n    _defineProperty(this, \"keyPanSpeed\", 7.0);\n\n    _defineProperty(this, \"autoRotate\", false);\n\n    _defineProperty(this, \"autoRotateSpeed\", 2.0);\n\n    _defineProperty(this, \"keys\", {\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      BOTTOM: 40\n    });\n\n    _defineProperty(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n\n    _defineProperty(this, \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n\n    _defineProperty(this, \"target0\", void 0);\n\n    _defineProperty(this, \"position0\", void 0);\n\n    _defineProperty(this, \"zoom0\", void 0);\n\n    _defineProperty(this, \"_domElementKeyEvents\", null);\n\n    _defineProperty(this, \"getPolarAngle\", void 0);\n\n    _defineProperty(this, \"getAzimuthalAngle\", void 0);\n\n    _defineProperty(this, \"listenToKeyEvents\", void 0);\n\n    _defineProperty(this, \"saveState\", void 0);\n\n    _defineProperty(this, \"reset\", void 0);\n\n    _defineProperty(this, \"update\", void 0);\n\n    _defineProperty(this, \"connect\", void 0);\n\n    _defineProperty(this, \"dispose\", void 0);\n\n    this.object = object;\n    this.domElement = domElement; // for reset\n\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object instanceof PerspectiveCamera ? this.object.zoom : 1; //\n    // public methods\n    //\n\n    this.getPolarAngle = () => spherical.phi;\n\n    this.getAzimuthalAngle = () => spherical.theta;\n\n    this.listenToKeyEvents = domElement => {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object instanceof PerspectiveCamera ? scope.object.zoom : 1;\n    };\n\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n\n      if (scope.object instanceof PerspectiveCamera) {\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n      }\n\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    this.update = (() => {\n      const offset = new Vector3(); // so camera.up is the orbit axis\n\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    })(); // https://github.com/mrdoob/three.js/issues/20575\n\n\n    this.connect = domElement => {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n\n      scope.domElement = domElement;\n      scope.domElement.addEventListener('contextmenu', onContextMenu);\n      scope.domElement.addEventListener('pointerdown', onPointerDown);\n      scope.domElement.addEventListener('wheel', onMouseWheel);\n      scope.domElement.addEventListener('touchstart', onTouchStart);\n      scope.domElement.addEventListener('touchend', onTouchEnd);\n      scope.domElement.addEventListener('touchmove', onTouchMove);\n    };\n\n    this.dispose = () => {\n      var _scope$domElement, _scope$domElement2, _scope$domElement3, _scope$domElement4, _scope$domElement5, _scope$domElement6, _scope$domElement7, _scope$domElement8;\n\n      (_scope$domElement = scope.domElement) === null || _scope$domElement === void 0 ? void 0 : _scope$domElement.removeEventListener('contextmenu', onContextMenu);\n      (_scope$domElement2 = scope.domElement) === null || _scope$domElement2 === void 0 ? void 0 : _scope$domElement2.removeEventListener('pointerdown', onPointerDown);\n      (_scope$domElement3 = scope.domElement) === null || _scope$domElement3 === void 0 ? void 0 : _scope$domElement3.removeEventListener('wheel', onMouseWheel);\n      (_scope$domElement4 = scope.domElement) === null || _scope$domElement4 === void 0 ? void 0 : _scope$domElement4.removeEventListener('touchstart', onTouchStart);\n      (_scope$domElement5 = scope.domElement) === null || _scope$domElement5 === void 0 ? void 0 : _scope$domElement5.removeEventListener('touchend', onTouchEnd);\n      (_scope$domElement6 = scope.domElement) === null || _scope$domElement6 === void 0 ? void 0 : _scope$domElement6.removeEventListener('touchmove', onTouchMove);\n      (_scope$domElement7 = scope.domElement) === null || _scope$domElement7 === void 0 ? void 0 : _scope$domElement7.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement8 = scope.domElement) === null || _scope$domElement8 === void 0 ? void 0 : _scope$domElement8.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    const scope = this;\n    const changeEvent = {\n      type: 'change'\n    };\n    const startEvent = {\n      type: 'start'\n    };\n    const endEvent = {\n      type: 'end'\n    };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001; // current position in spherical coordinates\n\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    })();\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n\n      switch (event.keyCode) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate(event) {\n      if (event.touches.length == 1) {\n        rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan(event) {\n      if (event.touches.length == 1) {\n        panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly(event) {\n      const dx = event.touches[0].pageX - event.touches[1].pageX;\n      const dy = event.touches[0].pageY - event.touches[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enablePan) handleTouchStartPan(event);\n    }\n\n    function handleTouchStartDollyRotate(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enableRotate) handleTouchStartRotate(event);\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (event.touches.length == 1) {\n        rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (event.touches.length == 1) {\n        panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      const dx = event.touches[0].pageX - event.touches[1].pageX;\n      const dy = event.touches[0].pageY - event.touches[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseDown(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseMove(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerUp(event) {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseUp();\n          break;\n        // TODO touch\n      }\n    }\n\n    function onMouseDown(event) {\n      var _scope$domElement9;\n\n      // Prevent the browser from scrolling.\n      event.preventDefault(); // Manually set the focus since calling preventDefault above\n      // prevents the browser from setting it automatically.\n\n      (_scope$domElement9 = scope.domElement) !== null && _scope$domElement9 !== void 0 && _scope$domElement9.focus ? scope.domElement.focus() : window.focus();\n      let mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        var _scope$domElement10, _scope$domElement11;\n\n        (_scope$domElement10 = scope.domElement) === null || _scope$domElement10 === void 0 ? void 0 : _scope$domElement10.ownerDocument.addEventListener('pointermove', onPointerMove);\n        (_scope$domElement11 = scope.domElement) === null || _scope$domElement11 === void 0 ? void 0 : _scope$domElement11.ownerDocument.addEventListener('pointerup', onPointerUp);\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseUp() {\n      var _scope$domElement12, _scope$domElement13;\n\n      (_scope$domElement12 = scope.domElement) === null || _scope$domElement12 === void 0 ? void 0 : _scope$domElement12.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement13 = scope.domElement) === null || _scope$domElement13 === void 0 ? void 0 : _scope$domElement13.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      if (scope.enabled === false) return;\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (event.touches.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate(event);\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan(event);\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan(event);\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate(event);\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd() {\n      if (scope.enabled === false) return;\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    } // connect events\n\n\n    if (domElement !== undefined) this.connect(domElement); // force an update at start\n\n    this.update();\n  }\n\n} // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n\n}\n\nexport { MapControls, OrbitControls };\n"]},"metadata":{},"sourceType":"module"}