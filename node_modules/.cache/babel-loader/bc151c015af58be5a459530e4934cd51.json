{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nvar vertexDict = ['color', 'color2'],\n    fragmentDict = ['vColor', 'vColor2'];\n\nfunction ColorsNode(index) {\n  TempNode.call(this, 'v4', {\n    shared: false\n  });\n  this.index = index || 0;\n}\n\nColorsNode.prototype = Object.create(TempNode.prototype);\nColorsNode.prototype.constructor = ColorsNode;\nColorsNode.prototype.nodeType = 'Colors';\n\nColorsNode.prototype.generate = function (builder, output) {\n  builder.requires.color[this.index] = true;\n  var result = builder.isShader('vertex') ? vertexDict[this.index] : fragmentDict[this.index];\n  return builder.format(result, this.getType(builder), output);\n};\n\nColorsNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.index = source.index;\n  return this;\n};\n\nColorsNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.index = this.index;\n  }\n\n  return data;\n};\n\nexport { ColorsNode };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/nodes/accessors/ColorsNode.js"],"names":["TempNode","vertexDict","fragmentDict","ColorsNode","index","call","shared","prototype","Object","create","constructor","nodeType","generate","builder","output","requires","color","result","isShader","format","getType","copy","source","toJSON","meta","data","getJSONNode","createJSONNode"],"mappings":"AAAA,SAASA,QAAT,QAAyB,qBAAzB;AAEA,IAAIC,UAAU,GAAG,CAAC,OAAD,EAAU,QAAV,CAAjB;AAAA,IACIC,YAAY,GAAG,CAAC,QAAD,EAAW,SAAX,CADnB;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzBJ,EAAAA,QAAQ,CAACK,IAAT,CAAc,IAAd,EAAoB,IAApB,EAA0B;AACxBC,IAAAA,MAAM,EAAE;AADgB,GAA1B;AAGA,OAAKF,KAAL,GAAaA,KAAK,IAAI,CAAtB;AACD;;AAEDD,UAAU,CAACI,SAAX,GAAuBC,MAAM,CAACC,MAAP,CAAcT,QAAQ,CAACO,SAAvB,CAAvB;AACAJ,UAAU,CAACI,SAAX,CAAqBG,WAArB,GAAmCP,UAAnC;AACAA,UAAU,CAACI,SAAX,CAAqBI,QAArB,GAAgC,QAAhC;;AAEAR,UAAU,CAACI,SAAX,CAAqBK,QAArB,GAAgC,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACzDD,EAAAA,OAAO,CAACE,QAAR,CAAiBC,KAAjB,CAAuB,KAAKZ,KAA5B,IAAqC,IAArC;AACA,MAAIa,MAAM,GAAGJ,OAAO,CAACK,QAAR,CAAiB,QAAjB,IAA6BjB,UAAU,CAAC,KAAKG,KAAN,CAAvC,GAAsDF,YAAY,CAAC,KAAKE,KAAN,CAA/E;AACA,SAAOS,OAAO,CAACM,MAAR,CAAeF,MAAf,EAAuB,KAAKG,OAAL,CAAaP,OAAb,CAAvB,EAA8CC,MAA9C,CAAP;AACD,CAJD;;AAMAX,UAAU,CAACI,SAAX,CAAqBc,IAArB,GAA4B,UAAUC,MAAV,EAAkB;AAC5CtB,EAAAA,QAAQ,CAACO,SAAT,CAAmBc,IAAnB,CAAwBhB,IAAxB,CAA6B,IAA7B,EAAmCiB,MAAnC;AACA,OAAKlB,KAAL,GAAakB,MAAM,CAAClB,KAApB;AACA,SAAO,IAAP;AACD,CAJD;;AAMAD,UAAU,CAACI,SAAX,CAAqBgB,MAArB,GAA8B,UAAUC,IAAV,EAAgB;AAC5C,MAAIC,IAAI,GAAG,KAAKC,WAAL,CAAiBF,IAAjB,CAAX;;AAEA,MAAI,CAACC,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG,KAAKE,cAAL,CAAoBH,IAApB,CAAP;AACAC,IAAAA,IAAI,CAACrB,KAAL,GAAa,KAAKA,KAAlB;AACD;;AAED,SAAOqB,IAAP;AACD,CATD;;AAWA,SAAStB,UAAT","sourcesContent":["import { TempNode } from '../core/TempNode.js';\n\nvar vertexDict = ['color', 'color2'],\n    fragmentDict = ['vColor', 'vColor2'];\n\nfunction ColorsNode(index) {\n  TempNode.call(this, 'v4', {\n    shared: false\n  });\n  this.index = index || 0;\n}\n\nColorsNode.prototype = Object.create(TempNode.prototype);\nColorsNode.prototype.constructor = ColorsNode;\nColorsNode.prototype.nodeType = 'Colors';\n\nColorsNode.prototype.generate = function (builder, output) {\n  builder.requires.color[this.index] = true;\n  var result = builder.isShader('vertex') ? vertexDict[this.index] : fragmentDict[this.index];\n  return builder.format(result, this.getType(builder), output);\n};\n\nColorsNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.index = source.index;\n  return this;\n};\n\nColorsNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.index = this.index;\n  }\n\n  return data;\n};\n\nexport { ColorsNode };\n"]},"metadata":{},"sourceType":"module"}