{"ast":null,"code":"import { Vector4 } from 'three';\nimport { InputNode } from '../core/InputNode.js';\nimport { NodeUtils } from '../core/NodeUtils.js';\n\nfunction Vector4Node(x, y, z, w) {\n  InputNode.call(this, 'v4');\n  this.value = x instanceof Vector4 ? x : new Vector4(x, y, z, w);\n}\n\nVector4Node.prototype = Object.create(InputNode.prototype);\nVector4Node.prototype.constructor = Vector4Node;\nVector4Node.prototype.nodeType = 'Vector4';\nNodeUtils.addShortcuts(Vector4Node.prototype, 'value', ['x', 'y', 'z', 'w']);\n\nVector4Node.prototype.generateReadonly = function (builder, output, uuid, type\n/*, ns, needsUpdate*/\n) {\n  return builder.format('vec4( ' + this.x + ', ' + this.y + ', ' + this.z + ', ' + this.w + ' )', type, output);\n};\n\nVector4Node.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.value.copy(source);\n  return this;\n};\n\nVector4Node.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.x = this.x;\n    data.y = this.y;\n    data.z = this.z;\n    data.w = this.w;\n    if (this.readonly === true) data.readonly = true;\n  }\n\n  return data;\n};\n\nexport { Vector4Node };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/nodes/inputs/Vector4Node.js"],"names":["Vector4","InputNode","NodeUtils","Vector4Node","x","y","z","w","call","value","prototype","Object","create","constructor","nodeType","addShortcuts","generateReadonly","builder","output","uuid","type","format","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","readonly"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,SAASC,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2BC,CAA3B,EAA8BC,CAA9B,EAAiC;AAC/BN,EAAAA,SAAS,CAACO,IAAV,CAAe,IAAf,EAAqB,IAArB;AACA,OAAKC,KAAL,GAAaL,CAAC,YAAYJ,OAAb,GAAuBI,CAAvB,GAA2B,IAAIJ,OAAJ,CAAYI,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,CAAxC;AACD;;AAEDJ,WAAW,CAACO,SAAZ,GAAwBC,MAAM,CAACC,MAAP,CAAcX,SAAS,CAACS,SAAxB,CAAxB;AACAP,WAAW,CAACO,SAAZ,CAAsBG,WAAtB,GAAoCV,WAApC;AACAA,WAAW,CAACO,SAAZ,CAAsBI,QAAtB,GAAiC,SAAjC;AACAZ,SAAS,CAACa,YAAV,CAAuBZ,WAAW,CAACO,SAAnC,EAA8C,OAA9C,EAAuD,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAvD;;AAEAP,WAAW,CAACO,SAAZ,CAAsBM,gBAAtB,GAAyC,UAAUC,OAAV,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC;AAC1E;AADyC,EAEvC;AACA,SAAOH,OAAO,CAACI,MAAR,CAAe,WAAW,KAAKjB,CAAhB,GAAoB,IAApB,GAA2B,KAAKC,CAAhC,GAAoC,IAApC,GAA2C,KAAKC,CAAhD,GAAoD,IAApD,GAA2D,KAAKC,CAAhE,GAAoE,IAAnF,EAAyFa,IAAzF,EAA+FF,MAA/F,CAAP;AACD,CAJD;;AAMAf,WAAW,CAACO,SAAZ,CAAsBY,IAAtB,GAA6B,UAAUC,MAAV,EAAkB;AAC7CtB,EAAAA,SAAS,CAACS,SAAV,CAAoBY,IAApB,CAAyBd,IAAzB,CAA8B,IAA9B,EAAoCe,MAApC;AACA,OAAKd,KAAL,CAAWa,IAAX,CAAgBC,MAAhB;AACA,SAAO,IAAP;AACD,CAJD;;AAMApB,WAAW,CAACO,SAAZ,CAAsBc,MAAtB,GAA+B,UAAUC,IAAV,EAAgB;AAC7C,MAAIC,IAAI,GAAG,KAAKC,WAAL,CAAiBF,IAAjB,CAAX;;AAEA,MAAI,CAACC,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG,KAAKE,cAAL,CAAoBH,IAApB,CAAP;AACAC,IAAAA,IAAI,CAACtB,CAAL,GAAS,KAAKA,CAAd;AACAsB,IAAAA,IAAI,CAACrB,CAAL,GAAS,KAAKA,CAAd;AACAqB,IAAAA,IAAI,CAACpB,CAAL,GAAS,KAAKA,CAAd;AACAoB,IAAAA,IAAI,CAACnB,CAAL,GAAS,KAAKA,CAAd;AACA,QAAI,KAAKsB,QAAL,KAAkB,IAAtB,EAA4BH,IAAI,CAACG,QAAL,GAAgB,IAAhB;AAC7B;;AAED,SAAOH,IAAP;AACD,CAbD;;AAeA,SAASvB,WAAT","sourcesContent":["import { Vector4 } from 'three';\nimport { InputNode } from '../core/InputNode.js';\nimport { NodeUtils } from '../core/NodeUtils.js';\n\nfunction Vector4Node(x, y, z, w) {\n  InputNode.call(this, 'v4');\n  this.value = x instanceof Vector4 ? x : new Vector4(x, y, z, w);\n}\n\nVector4Node.prototype = Object.create(InputNode.prototype);\nVector4Node.prototype.constructor = Vector4Node;\nVector4Node.prototype.nodeType = 'Vector4';\nNodeUtils.addShortcuts(Vector4Node.prototype, 'value', ['x', 'y', 'z', 'w']);\n\nVector4Node.prototype.generateReadonly = function (builder, output, uuid, type\n/*, ns, needsUpdate*/\n) {\n  return builder.format('vec4( ' + this.x + ', ' + this.y + ', ' + this.z + ', ' + this.w + ' )', type, output);\n};\n\nVector4Node.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.value.copy(source);\n  return this;\n};\n\nVector4Node.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.x = this.x;\n    data.y = this.y;\n    data.z = this.z;\n    data.w = this.w;\n    if (this.readonly === true) data.readonly = true;\n  }\n\n  return data;\n};\n\nexport { Vector4Node };\n"]},"metadata":{},"sourceType":"module"}