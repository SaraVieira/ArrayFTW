{"ast":null,"code":"/**\n * Blend two textures\n */\nvar BlendShader = {\n  uniforms: {\n    tDiffuse1: {\n      value: null\n    },\n    tDiffuse2: {\n      value: null\n    },\n    mixRatio: {\n      value: 0.5\n    },\n    opacity: {\n      value: 1.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform float opacity;', 'uniform float mixRatio;', 'uniform sampler2D tDiffuse1;', 'uniform sampler2D tDiffuse2;', 'varying vec2 vUv;', 'void main() {', '\tvec4 texel1 = texture2D( tDiffuse1, vUv );', '\tvec4 texel2 = texture2D( tDiffuse2, vUv );', '\tgl_FragColor = opacity * mix( texel1, texel2, mixRatio );', '}'].join('\\n')\n};\nexport { BlendShader };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/shaders/BlendShader.js"],"names":["BlendShader","uniforms","tDiffuse1","value","tDiffuse2","mixRatio","opacity","vertexShader","join","fragmentShader"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AADE,KADH;AAIRC,IAAAA,SAAS,EAAE;AACTD,MAAAA,KAAK,EAAE;AADE,KAJH;AAORE,IAAAA,QAAQ,EAAE;AACRF,MAAAA,KAAK,EAAE;AADC,KAPF;AAURG,IAAAA,OAAO,EAAE;AACPH,MAAAA,KAAK,EAAE;AADA;AAVD,GADM;AAehBI,EAAAA,YAAY,EAAE,CAAC,mBAAD,EAAsB,eAAtB,EAAuC,YAAvC,EAAqD,4EAArD,EAAmI,GAAnI,EAAwIC,IAAxI,CAA6I,IAA7I,CAfE;AAgBhBC,EAAAA,cAAc,EAAE,CAAC,wBAAD,EAA2B,yBAA3B,EAAsD,8BAAtD,EAAsF,8BAAtF,EAAsH,mBAAtH,EAA2I,eAA3I,EAA4J,6CAA5J,EAA2M,6CAA3M,EAA0P,4DAA1P,EAAwT,GAAxT,EAA6TD,IAA7T,CAAkU,IAAlU;AAhBA,CAAlB;AAmBA,SAASR,WAAT","sourcesContent":["/**\n * Blend two textures\n */\nvar BlendShader = {\n  uniforms: {\n    tDiffuse1: {\n      value: null\n    },\n    tDiffuse2: {\n      value: null\n    },\n    mixRatio: {\n      value: 0.5\n    },\n    opacity: {\n      value: 1.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform float opacity;', 'uniform float mixRatio;', 'uniform sampler2D tDiffuse1;', 'uniform sampler2D tDiffuse2;', 'varying vec2 vUv;', 'void main() {', '\tvec4 texel1 = texture2D( tDiffuse1, vUv );', '\tvec4 texel2 = texture2D( tDiffuse2, vUv );', '\tgl_FragColor = opacity * mix( texel1, texel2, mixRatio );', '}'].join('\\n')\n};\n\nexport { BlendShader };\n"]},"metadata":{},"sourceType":"module"}