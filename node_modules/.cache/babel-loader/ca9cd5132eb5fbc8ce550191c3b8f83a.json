{"ast":null,"code":"import _classCallCheck from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { OrthographicCamera, PlaneGeometry, Mesh } from 'three';\n\nvar Pass = /*#__PURE__*/function () {\n  function Pass() {\n    _classCallCheck(this, Pass);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"needsSwap\", true);\n\n    _defineProperty(this, \"clear\", false);\n\n    _defineProperty(this, \"renderToScreen\", false);\n  }\n\n  _createClass(Pass, [{\n    key: \"setSize\",\n    value: function setSize(\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n\n    /* eslint-disable no-unused-vars */\n    width, height) {}\n  }, {\n    key: \"render\",\n    value: function render(\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n\n    /* eslint-disable no-unused-vars */\n    renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n      console.error('THREE.Pass: .render() must be implemented in derived pass.');\n    }\n  }]);\n\n  return Pass;\n}(); // Helper for passes that need to fill the viewport with a single quad.\n\n\nvar FullScreenQuad = /*#__PURE__*/function () {\n  function FullScreenQuad(material) {\n    _classCallCheck(this, FullScreenQuad);\n\n    _defineProperty(this, \"camera\", new OrthographicCamera(-1, 1, 1, -1, 0, 1));\n\n    _defineProperty(this, \"geometry\", new PlaneGeometry(2, 2));\n\n    _defineProperty(this, \"mesh\", void 0);\n\n    this.mesh = new Mesh(this.geometry, material);\n  }\n\n  _createClass(FullScreenQuad, [{\n    key: \"material\",\n    get: function get() {\n      return this.mesh.material;\n    },\n    set: function set(value) {\n      this.mesh.material = value;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.mesh.geometry.dispose();\n    }\n  }, {\n    key: \"render\",\n    value: function render(renderer) {\n      renderer.render(this.mesh, this.camera);\n    }\n  }]);\n\n  return FullScreenQuad;\n}();\n\nexport { FullScreenQuad, Pass };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/postprocessing/Pass.js"],"names":["_defineProperty","OrthographicCamera","PlaneGeometry","Mesh","Pass","width","height","renderer","writeBuffer","readBuffer","deltaTime","maskActive","console","error","FullScreenQuad","material","mesh","geometry","value","dispose","render","camera"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,SAASC,kBAAT,EAA6BC,aAA7B,EAA4CC,IAA5C,QAAwD,OAAxD;;IAEMC,I;AACJ,kBAAc;AAAA;;AACZJ,IAAAA,eAAe,CAAC,IAAD,EAAO,SAAP,EAAkB,IAAlB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,WAAP,EAAoB,IAApB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,OAAP,EAAgB,KAAhB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,gBAAP,EAAyB,KAAzB,CAAf;AACD;;;;WAED;AACA;;AAEA;AACAK,IAAAA,KAJA,EAIOC,MAJP,EAIe,CAAE;;;WAEjB;AACA;;AAEA;AACAC,IAAAA,QAJA,EAIUC,WAJV,EAIuBC,UAJvB,EAImCC,SAJnC,EAI8CC,UAJ9C,EAI0D;AACxDC,MAAAA,OAAO,CAACC,KAAR,CAAc,4DAAd;AACD;;;;KAED;;;IAGIC,c;AACJ,0BAAYC,QAAZ,EAAsB;AAAA;;AACpBf,IAAAA,eAAe,CAAC,IAAD,EAAO,QAAP,EAAiB,IAAIC,kBAAJ,CAAuB,CAAC,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,CAAjB,CAAf;;AAEAD,IAAAA,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,IAAIE,aAAJ,CAAkB,CAAlB,EAAqB,CAArB,CAAnB,CAAf;;AAEAF,IAAAA,eAAe,CAAC,IAAD,EAAO,MAAP,EAAe,KAAK,CAApB,CAAf;;AAEA,SAAKgB,IAAL,GAAY,IAAIb,IAAJ,CAAS,KAAKc,QAAd,EAAwBF,QAAxB,CAAZ;AACD;;;;SAED,eAAe;AACb,aAAO,KAAKC,IAAL,CAAUD,QAAjB;AACD,K;SAED,aAAaG,KAAb,EAAoB;AAClB,WAAKF,IAAL,CAAUD,QAAV,GAAqBG,KAArB;AACD;;;WAED,mBAAU;AACR,WAAKF,IAAL,CAAUC,QAAV,CAAmBE,OAAnB;AACD;;;WAED,gBAAOZ,QAAP,EAAiB;AACfA,MAAAA,QAAQ,CAACa,MAAT,CAAgB,KAAKJ,IAArB,EAA2B,KAAKK,MAAhC;AACD;;;;;;AAIH,SAASP,cAAT,EAAyBV,IAAzB","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { OrthographicCamera, PlaneGeometry, Mesh } from 'three';\n\nclass Pass {\n  constructor() {\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"needsSwap\", true);\n\n    _defineProperty(this, \"clear\", false);\n\n    _defineProperty(this, \"renderToScreen\", false);\n  }\n\n  setSize(\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  /* eslint-disable no-unused-vars */\n  width, height) {}\n\n  render(\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  /* eslint-disable no-unused-vars */\n  renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    console.error('THREE.Pass: .render() must be implemented in derived pass.');\n  }\n\n} // Helper for passes that need to fill the viewport with a single quad.\n\n\nclass FullScreenQuad {\n  constructor(material) {\n    _defineProperty(this, \"camera\", new OrthographicCamera(-1, 1, 1, -1, 0, 1));\n\n    _defineProperty(this, \"geometry\", new PlaneGeometry(2, 2));\n\n    _defineProperty(this, \"mesh\", void 0);\n\n    this.mesh = new Mesh(this.geometry, material);\n  }\n\n  get material() {\n    return this.mesh.material;\n  }\n\n  set material(value) {\n    this.mesh.material = value;\n  }\n\n  dispose() {\n    this.mesh.geometry.dispose();\n  }\n\n  render(renderer) {\n    renderer.render(this.mesh, this.camera);\n  }\n\n}\n\nexport { FullScreenQuad, Pass };\n"]},"metadata":{},"sourceType":"module"}