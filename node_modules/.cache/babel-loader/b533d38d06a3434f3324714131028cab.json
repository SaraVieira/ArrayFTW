{"ast":null,"code":"import { Vector2 } from 'three';\nimport { InputNode } from '../core/InputNode.js';\nimport { NodeUtils } from '../core/NodeUtils.js';\n\nfunction Vector2Node(x, y) {\n  InputNode.call(this, 'v2');\n  this.value = x instanceof Vector2 ? x : new Vector2(x, y);\n}\n\nVector2Node.prototype = Object.create(InputNode.prototype);\nVector2Node.prototype.constructor = Vector2Node;\nVector2Node.prototype.nodeType = 'Vector2';\nNodeUtils.addShortcuts(Vector2Node.prototype, 'value', ['x', 'y']);\n\nVector2Node.prototype.generateReadonly = function (builder, output, uuid, type\n/*, ns, needsUpdate*/\n) {\n  return builder.format('vec2( ' + this.x + ', ' + this.y + ' )', type, output);\n};\n\nVector2Node.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.value.copy(source);\n  return this;\n};\n\nVector2Node.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.x = this.x;\n    data.y = this.y;\n    if (this.readonly === true) data.readonly = true;\n  }\n\n  return data;\n};\n\nexport { Vector2Node };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/nodes/inputs/Vector2Node.js"],"names":["Vector2","InputNode","NodeUtils","Vector2Node","x","y","call","value","prototype","Object","create","constructor","nodeType","addShortcuts","generateReadonly","builder","output","uuid","type","format","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","readonly"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,SAASC,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACzBJ,EAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqB,IAArB;AACA,OAAKC,KAAL,GAAaH,CAAC,YAAYJ,OAAb,GAAuBI,CAAvB,GAA2B,IAAIJ,OAAJ,CAAYI,CAAZ,EAAeC,CAAf,CAAxC;AACD;;AAEDF,WAAW,CAACK,SAAZ,GAAwBC,MAAM,CAACC,MAAP,CAAcT,SAAS,CAACO,SAAxB,CAAxB;AACAL,WAAW,CAACK,SAAZ,CAAsBG,WAAtB,GAAoCR,WAApC;AACAA,WAAW,CAACK,SAAZ,CAAsBI,QAAtB,GAAiC,SAAjC;AACAV,SAAS,CAACW,YAAV,CAAuBV,WAAW,CAACK,SAAnC,EAA8C,OAA9C,EAAuD,CAAC,GAAD,EAAM,GAAN,CAAvD;;AAEAL,WAAW,CAACK,SAAZ,CAAsBM,gBAAtB,GAAyC,UAAUC,OAAV,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC;AAC1E;AADyC,EAEvC;AACA,SAAOH,OAAO,CAACI,MAAR,CAAe,WAAW,KAAKf,CAAhB,GAAoB,IAApB,GAA2B,KAAKC,CAAhC,GAAoC,IAAnD,EAAyDa,IAAzD,EAA+DF,MAA/D,CAAP;AACD,CAJD;;AAMAb,WAAW,CAACK,SAAZ,CAAsBY,IAAtB,GAA6B,UAAUC,MAAV,EAAkB;AAC7CpB,EAAAA,SAAS,CAACO,SAAV,CAAoBY,IAApB,CAAyBd,IAAzB,CAA8B,IAA9B,EAAoCe,MAApC;AACA,OAAKd,KAAL,CAAWa,IAAX,CAAgBC,MAAhB;AACA,SAAO,IAAP;AACD,CAJD;;AAMAlB,WAAW,CAACK,SAAZ,CAAsBc,MAAtB,GAA+B,UAAUC,IAAV,EAAgB;AAC7C,MAAIC,IAAI,GAAG,KAAKC,WAAL,CAAiBF,IAAjB,CAAX;;AAEA,MAAI,CAACC,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG,KAAKE,cAAL,CAAoBH,IAApB,CAAP;AACAC,IAAAA,IAAI,CAACpB,CAAL,GAAS,KAAKA,CAAd;AACAoB,IAAAA,IAAI,CAACnB,CAAL,GAAS,KAAKA,CAAd;AACA,QAAI,KAAKsB,QAAL,KAAkB,IAAtB,EAA4BH,IAAI,CAACG,QAAL,GAAgB,IAAhB;AAC7B;;AAED,SAAOH,IAAP;AACD,CAXD;;AAaA,SAASrB,WAAT","sourcesContent":["import { Vector2 } from 'three';\nimport { InputNode } from '../core/InputNode.js';\nimport { NodeUtils } from '../core/NodeUtils.js';\n\nfunction Vector2Node(x, y) {\n  InputNode.call(this, 'v2');\n  this.value = x instanceof Vector2 ? x : new Vector2(x, y);\n}\n\nVector2Node.prototype = Object.create(InputNode.prototype);\nVector2Node.prototype.constructor = Vector2Node;\nVector2Node.prototype.nodeType = 'Vector2';\nNodeUtils.addShortcuts(Vector2Node.prototype, 'value', ['x', 'y']);\n\nVector2Node.prototype.generateReadonly = function (builder, output, uuid, type\n/*, ns, needsUpdate*/\n) {\n  return builder.format('vec2( ' + this.x + ', ' + this.y + ' )', type, output);\n};\n\nVector2Node.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.value.copy(source);\n  return this;\n};\n\nVector2Node.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.x = this.x;\n    data.y = this.y;\n    if (this.readonly === true) data.readonly = true;\n  }\n\n  return data;\n};\n\nexport { Vector2Node };\n"]},"metadata":{},"sourceType":"module"}