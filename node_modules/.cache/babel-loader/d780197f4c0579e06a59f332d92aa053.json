{"ast":null,"code":"import { InputNode } from '../core/InputNode.js';\n\nfunction FloatNode(value) {\n  InputNode.call(this, 'f');\n  this.value = value || 0;\n}\n\nFloatNode.prototype = Object.create(InputNode.prototype);\nFloatNode.prototype.constructor = FloatNode;\nFloatNode.prototype.nodeType = 'Float';\n\nFloatNode.prototype.generateReadonly = function (builder, output, uuid, type\n/*, ns, needsUpdate */\n) {\n  return builder.format(this.value + (this.value % 1 ? '' : '.0'), type, output);\n};\n\nFloatNode.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.value = source.value;\n  return this;\n};\n\nFloatNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value;\n    if (this.readonly === true) data.readonly = true;\n  }\n\n  return data;\n};\n\nexport { FloatNode };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/nodes/inputs/FloatNode.js"],"names":["InputNode","FloatNode","value","call","prototype","Object","create","constructor","nodeType","generateReadonly","builder","output","uuid","type","format","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","readonly"],"mappings":"AAAA,SAASA,SAAT,QAA0B,sBAA1B;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxBF,EAAAA,SAAS,CAACG,IAAV,CAAe,IAAf,EAAqB,GAArB;AACA,OAAKD,KAAL,GAAaA,KAAK,IAAI,CAAtB;AACD;;AAEDD,SAAS,CAACG,SAAV,GAAsBC,MAAM,CAACC,MAAP,CAAcN,SAAS,CAACI,SAAxB,CAAtB;AACAH,SAAS,CAACG,SAAV,CAAoBG,WAApB,GAAkCN,SAAlC;AACAA,SAAS,CAACG,SAAV,CAAoBI,QAApB,GAA+B,OAA/B;;AAEAP,SAAS,CAACG,SAAV,CAAoBK,gBAApB,GAAuC,UAAUC,OAAV,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC;AACxE;AADuC,EAErC;AACA,SAAOH,OAAO,CAACI,MAAR,CAAe,KAAKZ,KAAL,IAAc,KAAKA,KAAL,GAAa,CAAb,GAAiB,EAAjB,GAAsB,IAApC,CAAf,EAA0DW,IAA1D,EAAgEF,MAAhE,CAAP;AACD,CAJD;;AAMAV,SAAS,CAACG,SAAV,CAAoBW,IAApB,GAA2B,UAAUC,MAAV,EAAkB;AAC3ChB,EAAAA,SAAS,CAACI,SAAV,CAAoBW,IAApB,CAAyBZ,IAAzB,CAA8B,IAA9B,EAAoCa,MAApC;AACA,OAAKd,KAAL,GAAac,MAAM,CAACd,KAApB;AACA,SAAO,IAAP;AACD,CAJD;;AAMAD,SAAS,CAACG,SAAV,CAAoBa,MAApB,GAA6B,UAAUC,IAAV,EAAgB;AAC3C,MAAIC,IAAI,GAAG,KAAKC,WAAL,CAAiBF,IAAjB,CAAX;;AAEA,MAAI,CAACC,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG,KAAKE,cAAL,CAAoBH,IAApB,CAAP;AACAC,IAAAA,IAAI,CAACjB,KAAL,GAAa,KAAKA,KAAlB;AACA,QAAI,KAAKoB,QAAL,KAAkB,IAAtB,EAA4BH,IAAI,CAACG,QAAL,GAAgB,IAAhB;AAC7B;;AAED,SAAOH,IAAP;AACD,CAVD;;AAYA,SAASlB,SAAT","sourcesContent":["import { InputNode } from '../core/InputNode.js';\n\nfunction FloatNode(value) {\n  InputNode.call(this, 'f');\n  this.value = value || 0;\n}\n\nFloatNode.prototype = Object.create(InputNode.prototype);\nFloatNode.prototype.constructor = FloatNode;\nFloatNode.prototype.nodeType = 'Float';\n\nFloatNode.prototype.generateReadonly = function (builder, output, uuid, type\n/*, ns, needsUpdate */\n) {\n  return builder.format(this.value + (this.value % 1 ? '' : '.0'), type, output);\n};\n\nFloatNode.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.value = source.value;\n  return this;\n};\n\nFloatNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value;\n    if (this.readonly === true) data.readonly = true;\n  }\n\n  return data;\n};\n\nexport { FloatNode };\n"]},"metadata":{},"sourceType":"module"}