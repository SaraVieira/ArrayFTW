{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nimport { FunctionNode } from '../core/FunctionNode.js';\nimport { UVNode } from '../accessors/UVNode.js';\n\nfunction CheckerNode(uv) {\n  TempNode.call(this, 'f');\n  this.uv = uv || new UVNode();\n}\n\nCheckerNode.prototype = Object.create(TempNode.prototype);\nCheckerNode.prototype.constructor = CheckerNode;\nCheckerNode.prototype.nodeType = 'Noise';\n\nCheckerNode.Nodes = function () {\n  // https://github.com/mattdesl/glsl-checker/blob/master/index.glsl\n  var checker = new FunctionNode(['float checker( vec2 uv ) {', '\tfloat cx = floor( uv.x );', '\tfloat cy = floor( uv.y ); ', '\tfloat result = mod( cx + cy, 2.0 );', '\treturn sign( result );', '}'].join('\\n'));\n  return {\n    checker: checker\n  };\n}();\n\nCheckerNode.prototype.generate = function (builder, output) {\n  var snoise = builder.include(CheckerNode.Nodes.checker);\n  return builder.format(snoise + '( ' + this.uv.build(builder, 'v2') + ' )', this.getType(builder), output);\n};\n\nCheckerNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.uv = source.uv;\n  return this;\n};\n\nCheckerNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.uv = this.uv.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { CheckerNode };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/nodes/procedural/CheckerNode.js"],"names":["TempNode","FunctionNode","UVNode","CheckerNode","uv","call","prototype","Object","create","constructor","nodeType","Nodes","checker","join","generate","builder","output","snoise","include","format","build","getType","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"mappings":"AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,SAASC,WAAT,CAAqBC,EAArB,EAAyB;AACvBJ,EAAAA,QAAQ,CAACK,IAAT,CAAc,IAAd,EAAoB,GAApB;AACA,OAAKD,EAAL,GAAUA,EAAE,IAAI,IAAIF,MAAJ,EAAhB;AACD;;AAEDC,WAAW,CAACG,SAAZ,GAAwBC,MAAM,CAACC,MAAP,CAAcR,QAAQ,CAACM,SAAvB,CAAxB;AACAH,WAAW,CAACG,SAAZ,CAAsBG,WAAtB,GAAoCN,WAApC;AACAA,WAAW,CAACG,SAAZ,CAAsBI,QAAtB,GAAiC,OAAjC;;AAEAP,WAAW,CAACQ,KAAZ,GAAoB,YAAY;AAC9B;AACA,MAAIC,OAAO,GAAG,IAAIX,YAAJ,CAAiB,CAAC,4BAAD,EAA+B,4BAA/B,EAA6D,6BAA7D,EAA4F,sCAA5F,EAAoI,yBAApI,EAA+J,GAA/J,EAAoKY,IAApK,CAAyK,IAAzK,CAAjB,CAAd;AACA,SAAO;AACLD,IAAAA,OAAO,EAAEA;AADJ,GAAP;AAGD,CANmB,EAApB;;AAQAT,WAAW,CAACG,SAAZ,CAAsBQ,QAAtB,GAAiC,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1D,MAAIC,MAAM,GAAGF,OAAO,CAACG,OAAR,CAAgBf,WAAW,CAACQ,KAAZ,CAAkBC,OAAlC,CAAb;AACA,SAAOG,OAAO,CAACI,MAAR,CAAeF,MAAM,GAAG,IAAT,GAAgB,KAAKb,EAAL,CAAQgB,KAAR,CAAcL,OAAd,EAAuB,IAAvB,CAAhB,GAA+C,IAA9D,EAAoE,KAAKM,OAAL,CAAaN,OAAb,CAApE,EAA2FC,MAA3F,CAAP;AACD,CAHD;;AAKAb,WAAW,CAACG,SAAZ,CAAsBgB,IAAtB,GAA6B,UAAUC,MAAV,EAAkB;AAC7CvB,EAAAA,QAAQ,CAACM,SAAT,CAAmBgB,IAAnB,CAAwBjB,IAAxB,CAA6B,IAA7B,EAAmCkB,MAAnC;AACA,OAAKnB,EAAL,GAAUmB,MAAM,CAACnB,EAAjB;AACA,SAAO,IAAP;AACD,CAJD;;AAMAD,WAAW,CAACG,SAAZ,CAAsBkB,MAAtB,GAA+B,UAAUC,IAAV,EAAgB;AAC7C,MAAIC,IAAI,GAAG,KAAKC,WAAL,CAAiBF,IAAjB,CAAX;;AAEA,MAAI,CAACC,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG,KAAKE,cAAL,CAAoBH,IAApB,CAAP;AACAC,IAAAA,IAAI,CAACtB,EAAL,GAAU,KAAKA,EAAL,CAAQoB,MAAR,CAAeC,IAAf,EAAqBI,IAA/B;AACD;;AAED,SAAOH,IAAP;AACD,CATD;;AAWA,SAASvB,WAAT","sourcesContent":["import { TempNode } from '../core/TempNode.js';\nimport { FunctionNode } from '../core/FunctionNode.js';\nimport { UVNode } from '../accessors/UVNode.js';\n\nfunction CheckerNode(uv) {\n  TempNode.call(this, 'f');\n  this.uv = uv || new UVNode();\n}\n\nCheckerNode.prototype = Object.create(TempNode.prototype);\nCheckerNode.prototype.constructor = CheckerNode;\nCheckerNode.prototype.nodeType = 'Noise';\n\nCheckerNode.Nodes = function () {\n  // https://github.com/mattdesl/glsl-checker/blob/master/index.glsl\n  var checker = new FunctionNode(['float checker( vec2 uv ) {', '\tfloat cx = floor( uv.x );', '\tfloat cy = floor( uv.y ); ', '\tfloat result = mod( cx + cy, 2.0 );', '\treturn sign( result );', '}'].join('\\n'));\n  return {\n    checker: checker\n  };\n}();\n\nCheckerNode.prototype.generate = function (builder, output) {\n  var snoise = builder.include(CheckerNode.Nodes.checker);\n  return builder.format(snoise + '( ' + this.uv.build(builder, 'v2') + ' )', this.getType(builder), output);\n};\n\nCheckerNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.uv = source.uv;\n  return this;\n};\n\nCheckerNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.uv = this.uv.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { CheckerNode };\n"]},"metadata":{},"sourceType":"module"}