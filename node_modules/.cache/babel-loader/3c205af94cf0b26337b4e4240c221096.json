{"ast":null,"code":"import _slicedToArray from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useRef, useState, useMemo, createElement } from 'react';\nimport { WebGLCubeRenderTarget, LinearFilter, RGBFormat } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction CubeCamera(_ref) {\n  var children = _ref.children,\n      fog = _ref.fog,\n      _ref$frames = _ref.frames,\n      frames = _ref$frames === void 0 ? Infinity : _ref$frames,\n      _ref$resolution = _ref.resolution,\n      resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,\n      _ref$near = _ref.near,\n      near = _ref$near === void 0 ? 1 : _ref$near,\n      _ref$far = _ref.far,\n      far = _ref$far === void 0 ? 1000 : _ref$far,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"fog\", \"frames\", \"resolution\", \"near\", \"far\"]);\n\n  var ref = useRef();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      camera = _useState2[0],\n      setCamera = _useState2[1];\n\n  var scene = useThree(function (_ref2) {\n    var scene = _ref2.scene;\n    return scene;\n  });\n  var gl = useThree(function (_ref3) {\n    var gl = _ref3.gl;\n    return gl;\n  });\n  var fbo = useMemo(function () {\n    return new WebGLCubeRenderTarget(resolution, {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBFormat,\n      encoding: gl.outputEncoding\n    });\n  }, [resolution]);\n  var count = 0;\n  useFrame(function () {\n    if (camera && ref.current && (frames === Infinity || count < frames)) {\n      ref.current.traverse(function (obj) {\n        return obj.visible = false;\n      });\n      var originalFog = scene.fog;\n      scene.fog = fog != null ? fog : originalFog;\n      camera.update(gl, scene);\n      scene.fog = originalFog;\n      ref.current.traverse(function (obj) {\n        return obj.visible = true;\n      });\n      count++;\n    }\n  });\n  return /*#__PURE__*/createElement(\"group\", props, /*#__PURE__*/createElement(\"cubeCamera\", {\n    ref: setCamera,\n    args: [near, far, fbo]\n  }), /*#__PURE__*/createElement(\"group\", {\n    ref: ref\n  }, children(fbo.texture)));\n}\n\nexport { CubeCamera };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/@react-three/drei/core/CubeCamera.js"],"names":["_objectWithoutPropertiesLoose","useRef","useState","useMemo","createElement","WebGLCubeRenderTarget","LinearFilter","RGBFormat","useThree","useFrame","CubeCamera","_ref","children","fog","frames","Infinity","resolution","near","far","props","ref","camera","setCamera","scene","gl","fbo","minFilter","magFilter","format","encoding","outputEncoding","count","current","traverse","obj","visible","originalFog","update","args","texture"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useRef, useState, useMemo, createElement } from 'react';\nimport { WebGLCubeRenderTarget, LinearFilter, RGBFormat } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction CubeCamera(_ref) {\n  let {\n    children,\n    fog,\n    frames = Infinity,\n    resolution = 256,\n    near = 1,\n    far = 1000\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"fog\", \"frames\", \"resolution\", \"near\", \"far\"]);\n\n  const ref = useRef();\n  const [camera, setCamera] = useState();\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const fbo = useMemo(() => new WebGLCubeRenderTarget(resolution, {\n    minFilter: LinearFilter,\n    magFilter: LinearFilter,\n    format: RGBFormat,\n    encoding: gl.outputEncoding\n  }), [resolution]);\n  let count = 0;\n  useFrame(() => {\n    if (camera && ref.current && (frames === Infinity || count < frames)) {\n      ref.current.traverse(obj => obj.visible = false);\n      const originalFog = scene.fog;\n      scene.fog = fog != null ? fog : originalFog;\n      camera.update(gl, scene);\n      scene.fog = originalFog;\n      ref.current.traverse(obj => obj.visible = true);\n      count++;\n    }\n  });\n  return /*#__PURE__*/createElement(\"group\", props, /*#__PURE__*/createElement(\"cubeCamera\", {\n    ref: setCamera,\n    args: [near, far, fbo]\n  }), /*#__PURE__*/createElement(\"group\", {\n    ref: ref\n  }, children(fbo.texture)));\n}\n\nexport { CubeCamera };\n"]},"metadata":{},"sourceType":"module"}