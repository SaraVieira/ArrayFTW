{"ast":null,"code":"/**\n * Kaleidoscope Shader\n * Radial reflection around center point\n * Ported from: http://pixelshaders.com/editor/\n * by Toby Schachman / http://tobyschachman.com/\n *\n * sides: number of reflections\n * angle: initial angle in radians\n */\nvar KaleidoShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    sides: {\n      value: 6.0\n    },\n    angle: {\n      value: 0.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform sampler2D tDiffuse;', 'uniform float sides;', 'uniform float angle;', 'varying vec2 vUv;', 'void main() {', '\tvec2 p = vUv - 0.5;', '\tfloat r = length(p);', '\tfloat a = atan(p.y, p.x) + angle;', '\tfloat tau = 2. * 3.1416 ;', '\ta = mod(a, tau/sides);', '\ta = abs(a - tau/sides/2.) ;', '\tp = r * vec2(cos(a), sin(a));', '\tvec4 color = texture2D(tDiffuse, p + 0.5);', '\tgl_FragColor = color;', '}'].join('\\n')\n};\nexport { KaleidoShader };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/shaders/KaleidoShader.js"],"names":["KaleidoShader","uniforms","tDiffuse","value","sides","angle","vertexShader","join","fragmentShader"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,aAAa,GAAG;AAClBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE;AADC,KADF;AAIRC,IAAAA,KAAK,EAAE;AACLD,MAAAA,KAAK,EAAE;AADF,KAJC;AAORE,IAAAA,KAAK,EAAE;AACLF,MAAAA,KAAK,EAAE;AADF;AAPC,GADQ;AAYlBG,EAAAA,YAAY,EAAE,CAAC,mBAAD,EAAsB,eAAtB,EAAuC,YAAvC,EAAqD,4EAArD,EAAmI,GAAnI,EAAwIC,IAAxI,CAA6I,IAA7I,CAZI;AAalBC,EAAAA,cAAc,EAAE,CAAC,6BAAD,EAAgC,sBAAhC,EAAwD,sBAAxD,EAAgF,mBAAhF,EAAqG,eAArG,EAAsH,sBAAtH,EAA8I,uBAA9I,EAAuK,oCAAvK,EAA6M,4BAA7M,EAA2O,yBAA3O,EAAsQ,8BAAtQ,EAAsS,gCAAtS,EAAwU,6CAAxU,EAAuX,wBAAvX,EAAiZ,GAAjZ,EAAsZD,IAAtZ,CAA2Z,IAA3Z;AAbE,CAApB;AAgBA,SAASP,aAAT","sourcesContent":["/**\n * Kaleidoscope Shader\n * Radial reflection around center point\n * Ported from: http://pixelshaders.com/editor/\n * by Toby Schachman / http://tobyschachman.com/\n *\n * sides: number of reflections\n * angle: initial angle in radians\n */\nvar KaleidoShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    sides: {\n      value: 6.0\n    },\n    angle: {\n      value: 0.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform sampler2D tDiffuse;', 'uniform float sides;', 'uniform float angle;', 'varying vec2 vUv;', 'void main() {', '\tvec2 p = vUv - 0.5;', '\tfloat r = length(p);', '\tfloat a = atan(p.y, p.x) + angle;', '\tfloat tau = 2. * 3.1416 ;', '\ta = mod(a, tau/sides);', '\ta = abs(a - tau/sides/2.) ;', '\tp = r * vec2(cos(a), sin(a));', '\tvec4 color = texture2D(tDiffuse, p + 0.5);', '\tgl_FragColor = color;', '}'].join('\\n')\n};\n\nexport { KaleidoShader };\n"]},"metadata":{},"sourceType":"module"}