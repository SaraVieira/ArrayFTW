{"ast":null,"code":"import { Loader, FileLoader, BufferGeometry, Vector3, Float32BufferAttribute, AnimationClip } from 'three';\n\nvar MD2Loader = function MD2Loader(manager) {\n  Loader.call(this, manager);\n};\n\nMD2Loader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: MD2Loader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        onLoad(scope.parse(buffer));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  },\n  parse: function () {\n    var normalData = [[-0.525731, 0.0, 0.850651], [-0.442863, 0.238856, 0.864188], [-0.295242, 0.0, 0.955423], [-0.309017, 0.5, 0.809017], [-0.16246, 0.262866, 0.951056], [0.0, 0.0, 1.0], [0.0, 0.850651, 0.525731], [-0.147621, 0.716567, 0.681718], [0.147621, 0.716567, 0.681718], [0.0, 0.525731, 0.850651], [0.309017, 0.5, 0.809017], [0.525731, 0.0, 0.850651], [0.295242, 0.0, 0.955423], [0.442863, 0.238856, 0.864188], [0.16246, 0.262866, 0.951056], [-0.681718, 0.147621, 0.716567], [-0.809017, 0.309017, 0.5], [-0.587785, 0.425325, 0.688191], [-0.850651, 0.525731, 0.0], [-0.864188, 0.442863, 0.238856], [-0.716567, 0.681718, 0.147621], [-0.688191, 0.587785, 0.425325], [-0.5, 0.809017, 0.309017], [-0.238856, 0.864188, 0.442863], [-0.425325, 0.688191, 0.587785], [-0.716567, 0.681718, -0.147621], [-0.5, 0.809017, -0.309017], [-0.525731, 0.850651, 0.0], [0.0, 0.850651, -0.525731], [-0.238856, 0.864188, -0.442863], [0.0, 0.955423, -0.295242], [-0.262866, 0.951056, -0.16246], [0.0, 1.0, 0.0], [0.0, 0.955423, 0.295242], [-0.262866, 0.951056, 0.16246], [0.238856, 0.864188, 0.442863], [0.262866, 0.951056, 0.16246], [0.5, 0.809017, 0.309017], [0.238856, 0.864188, -0.442863], [0.262866, 0.951056, -0.16246], [0.5, 0.809017, -0.309017], [0.850651, 0.525731, 0.0], [0.716567, 0.681718, 0.147621], [0.716567, 0.681718, -0.147621], [0.525731, 0.850651, 0.0], [0.425325, 0.688191, 0.587785], [0.864188, 0.442863, 0.238856], [0.688191, 0.587785, 0.425325], [0.809017, 0.309017, 0.5], [0.681718, 0.147621, 0.716567], [0.587785, 0.425325, 0.688191], [0.955423, 0.295242, 0.0], [1.0, 0.0, 0.0], [0.951056, 0.16246, 0.262866], [0.850651, -0.525731, 0.0], [0.955423, -0.295242, 0.0], [0.864188, -0.442863, 0.238856], [0.951056, -0.16246, 0.262866], [0.809017, -0.309017, 0.5], [0.681718, -0.147621, 0.716567], [0.850651, 0.0, 0.525731], [0.864188, 0.442863, -0.238856], [0.809017, 0.309017, -0.5], [0.951056, 0.16246, -0.262866], [0.525731, 0.0, -0.850651], [0.681718, 0.147621, -0.716567], [0.681718, -0.147621, -0.716567], [0.850651, 0.0, -0.525731], [0.809017, -0.309017, -0.5], [0.864188, -0.442863, -0.238856], [0.951056, -0.16246, -0.262866], [0.147621, 0.716567, -0.681718], [0.309017, 0.5, -0.809017], [0.425325, 0.688191, -0.587785], [0.442863, 0.238856, -0.864188], [0.587785, 0.425325, -0.688191], [0.688191, 0.587785, -0.425325], [-0.147621, 0.716567, -0.681718], [-0.309017, 0.5, -0.809017], [0.0, 0.525731, -0.850651], [-0.525731, 0.0, -0.850651], [-0.442863, 0.238856, -0.864188], [-0.295242, 0.0, -0.955423], [-0.16246, 0.262866, -0.951056], [0.0, 0.0, -1.0], [0.295242, 0.0, -0.955423], [0.16246, 0.262866, -0.951056], [-0.442863, -0.238856, -0.864188], [-0.309017, -0.5, -0.809017], [-0.16246, -0.262866, -0.951056], [0.0, -0.850651, -0.525731], [-0.147621, -0.716567, -0.681718], [0.147621, -0.716567, -0.681718], [0.0, -0.525731, -0.850651], [0.309017, -0.5, -0.809017], [0.442863, -0.238856, -0.864188], [0.16246, -0.262866, -0.951056], [0.238856, -0.864188, -0.442863], [0.5, -0.809017, -0.309017], [0.425325, -0.688191, -0.587785], [0.716567, -0.681718, -0.147621], [0.688191, -0.587785, -0.425325], [0.587785, -0.425325, -0.688191], [0.0, -0.955423, -0.295242], [0.0, -1.0, 0.0], [0.262866, -0.951056, -0.16246], [0.0, -0.850651, 0.525731], [0.0, -0.955423, 0.295242], [0.238856, -0.864188, 0.442863], [0.262866, -0.951056, 0.16246], [0.5, -0.809017, 0.309017], [0.716567, -0.681718, 0.147621], [0.525731, -0.850651, 0.0], [-0.238856, -0.864188, -0.442863], [-0.5, -0.809017, -0.309017], [-0.262866, -0.951056, -0.16246], [-0.850651, -0.525731, 0.0], [-0.716567, -0.681718, -0.147621], [-0.716567, -0.681718, 0.147621], [-0.525731, -0.850651, 0.0], [-0.5, -0.809017, 0.309017], [-0.238856, -0.864188, 0.442863], [-0.262866, -0.951056, 0.16246], [-0.864188, -0.442863, 0.238856], [-0.809017, -0.309017, 0.5], [-0.688191, -0.587785, 0.425325], [-0.681718, -0.147621, 0.716567], [-0.442863, -0.238856, 0.864188], [-0.587785, -0.425325, 0.688191], [-0.309017, -0.5, 0.809017], [-0.147621, -0.716567, 0.681718], [-0.425325, -0.688191, 0.587785], [-0.16246, -0.262866, 0.951056], [0.442863, -0.238856, 0.864188], [0.16246, -0.262866, 0.951056], [0.309017, -0.5, 0.809017], [0.147621, -0.716567, 0.681718], [0.0, -0.525731, 0.850651], [0.425325, -0.688191, 0.587785], [0.587785, -0.425325, 0.688191], [0.688191, -0.587785, 0.425325], [-0.955423, 0.295242, 0.0], [-0.951056, 0.16246, 0.262866], [-1.0, 0.0, 0.0], [-0.850651, 0.0, 0.525731], [-0.955423, -0.295242, 0.0], [-0.951056, -0.16246, 0.262866], [-0.864188, 0.442863, -0.238856], [-0.951056, 0.16246, -0.262866], [-0.809017, 0.309017, -0.5], [-0.864188, -0.442863, -0.238856], [-0.951056, -0.16246, -0.262866], [-0.809017, -0.309017, -0.5], [-0.681718, 0.147621, -0.716567], [-0.681718, -0.147621, -0.716567], [-0.850651, 0.0, -0.525731], [-0.688191, 0.587785, -0.425325], [-0.587785, 0.425325, -0.688191], [-0.425325, 0.688191, -0.587785], [-0.425325, -0.688191, -0.587785], [-0.587785, -0.425325, -0.688191], [-0.688191, -0.587785, -0.425325]];\n    return function (buffer) {\n      var data = new DataView(buffer); // http://tfc.duke.free.fr/coding/md2-specs-en.html\n\n      var header = {};\n      var headerNames = ['ident', 'version', 'skinwidth', 'skinheight', 'framesize', 'num_skins', 'num_vertices', 'num_st', 'num_tris', 'num_glcmds', 'num_frames', 'offset_skins', 'offset_st', 'offset_tris', 'offset_frames', 'offset_glcmds', 'offset_end'];\n\n      for (var i = 0; i < headerNames.length; i++) {\n        header[headerNames[i]] = data.getInt32(i * 4, true);\n      }\n\n      if (header.ident !== 844121161 || header.version !== 8) {\n        console.error('Not a valid MD2 file');\n        return;\n      }\n\n      if (header.offset_end !== data.byteLength) {\n        console.error('Corrupted MD2 file');\n        return;\n      } //\n\n\n      var geometry = new BufferGeometry(); // uvs\n\n      var uvsTemp = [];\n      var offset = header.offset_st;\n\n      for (var _i = 0, l = header.num_st; _i < l; _i++) {\n        var u = data.getInt16(offset + 0, true);\n        var v = data.getInt16(offset + 2, true);\n        uvsTemp.push(u / header.skinwidth, 1 - v / header.skinheight);\n        offset += 4;\n      } // triangles\n\n\n      offset = header.offset_tris;\n      var vertexIndices = [];\n      var uvIndices = [];\n\n      for (var _i2 = 0, _l = header.num_tris; _i2 < _l; _i2++) {\n        vertexIndices.push(data.getUint16(offset + 0, true), data.getUint16(offset + 2, true), data.getUint16(offset + 4, true));\n        uvIndices.push(data.getUint16(offset + 6, true), data.getUint16(offset + 8, true), data.getUint16(offset + 10, true));\n        offset += 12;\n      } // frames\n\n\n      var translation = new Vector3();\n      var scale = new Vector3();\n      var string = [];\n      var frames = [];\n      offset = header.offset_frames;\n\n      for (var _i3 = 0, _l2 = header.num_frames; _i3 < _l2; _i3++) {\n        scale.set(data.getFloat32(offset + 0, true), data.getFloat32(offset + 4, true), data.getFloat32(offset + 8, true));\n        translation.set(data.getFloat32(offset + 12, true), data.getFloat32(offset + 16, true), data.getFloat32(offset + 20, true));\n        offset += 24;\n\n        for (var j = 0; j < 16; j++) {\n          var character = data.getUint8(offset + j, true);\n          if (character === 0) break;\n          string[j] = character;\n        }\n\n        var frame = {\n          name: String.fromCharCode.apply(null, string),\n          vertices: [],\n          normals: []\n        };\n        offset += 16;\n\n        for (var _j = 0; _j < header.num_vertices; _j++) {\n          var x = data.getUint8(offset++, true);\n          var y = data.getUint8(offset++, true);\n          var z = data.getUint8(offset++, true);\n          var n = normalData[data.getUint8(offset++, true)];\n          x = x * scale.x + translation.x;\n          y = y * scale.y + translation.y;\n          z = z * scale.z + translation.z;\n          frame.vertices.push(x, z, y); // convert to Y-up\n\n          frame.normals.push(n[0], n[2], n[1]); // convert to Y-up\n        }\n\n        frames.push(frame);\n      } // static\n\n\n      var positions = [];\n      var normals = [];\n      var uvs = [];\n      var verticesTemp = frames[0].vertices;\n      var normalsTemp = frames[0].normals;\n\n      for (var _i4 = 0, _l3 = vertexIndices.length; _i4 < _l3; _i4++) {\n        var vertexIndex = vertexIndices[_i4];\n        var stride = vertexIndex * 3; //\n\n        var x = verticesTemp[stride];\n        var y = verticesTemp[stride + 1];\n        var z = verticesTemp[stride + 2];\n        positions.push(x, y, z); //\n\n        var nx = normalsTemp[stride];\n        var ny = normalsTemp[stride + 1];\n        var nz = normalsTemp[stride + 2];\n        normals.push(nx, ny, nz); //\n\n        var uvIndex = uvIndices[_i4];\n        stride = uvIndex * 2;\n        var u = uvsTemp[stride];\n        var v = uvsTemp[stride + 1];\n        uvs.push(u, v);\n      }\n\n      geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n      geometry.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n      geometry.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // animation\n\n      var morphPositions = [];\n      var morphNormals = [];\n\n      for (var _i5 = 0, _l4 = frames.length; _i5 < _l4; _i5++) {\n        var frame = frames[_i5];\n        var attributeName = frame.name;\n\n        if (frame.vertices.length > 0) {\n          var positions = [];\n\n          for (var _j2 = 0, jl = vertexIndices.length; _j2 < jl; _j2++) {\n            var vertexIndex = vertexIndices[_j2];\n            var stride = vertexIndex * 3;\n            var x = frame.vertices[stride];\n            var y = frame.vertices[stride + 1];\n            var z = frame.vertices[stride + 2];\n            positions.push(x, y, z);\n          }\n\n          var positionAttribute = new Float32BufferAttribute(positions, 3);\n          positionAttribute.name = attributeName;\n          morphPositions.push(positionAttribute);\n        }\n\n        if (frame.normals.length > 0) {\n          var normals = [];\n\n          for (var _j3 = 0, _jl = vertexIndices.length; _j3 < _jl; _j3++) {\n            var vertexIndex = vertexIndices[_j3];\n            var stride = vertexIndex * 3;\n            var nx = frame.normals[stride];\n            var ny = frame.normals[stride + 1];\n            var nz = frame.normals[stride + 2];\n            normals.push(nx, ny, nz);\n          }\n\n          var normalAttribute = new Float32BufferAttribute(normals, 3);\n          normalAttribute.name = attributeName;\n          morphNormals.push(normalAttribute);\n        }\n      }\n\n      geometry.morphAttributes.position = morphPositions;\n      geometry.morphAttributes.normal = morphNormals;\n      geometry.morphTargetsRelative = false;\n      geometry.animations = AnimationClip.CreateClipsFromMorphTargetSequences(frames, 10);\n      return geometry;\n    };\n  }()\n});\nexport { MD2Loader };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/loaders/MD2Loader.js"],"names":["Loader","FileLoader","BufferGeometry","Vector3","Float32BufferAttribute","AnimationClip","MD2Loader","manager","call","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","parse","e","console","error","itemError","normalData","data","DataView","header","headerNames","i","length","getInt32","ident","version","offset_end","byteLength","geometry","uvsTemp","offset","offset_st","l","num_st","u","getInt16","v","push","skinwidth","skinheight","offset_tris","vertexIndices","uvIndices","num_tris","getUint16","translation","scale","string","frames","offset_frames","num_frames","set","getFloat32","j","character","getUint8","frame","name","String","fromCharCode","apply","vertices","normals","num_vertices","x","y","z","n","positions","uvs","verticesTemp","normalsTemp","vertexIndex","stride","nx","ny","nz","uvIndex","setAttribute","morphPositions","morphNormals","attributeName","jl","positionAttribute","normalAttribute","morphAttributes","position","normal","morphTargetsRelative","animations","CreateClipsFromMorphTargetSequences"],"mappings":"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","sourcesContent":["import { Loader, FileLoader, BufferGeometry, Vector3, Float32BufferAttribute, AnimationClip } from 'three';\n\nvar MD2Loader = function (manager) {\n  Loader.call(this, manager);\n};\n\nMD2Loader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: MD2Loader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        onLoad(scope.parse(buffer));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  },\n  parse: function () {\n    var normalData = [[-0.525731, 0.0, 0.850651], [-0.442863, 0.238856, 0.864188], [-0.295242, 0.0, 0.955423], [-0.309017, 0.5, 0.809017], [-0.16246, 0.262866, 0.951056], [0.0, 0.0, 1.0], [0.0, 0.850651, 0.525731], [-0.147621, 0.716567, 0.681718], [0.147621, 0.716567, 0.681718], [0.0, 0.525731, 0.850651], [0.309017, 0.5, 0.809017], [0.525731, 0.0, 0.850651], [0.295242, 0.0, 0.955423], [0.442863, 0.238856, 0.864188], [0.16246, 0.262866, 0.951056], [-0.681718, 0.147621, 0.716567], [-0.809017, 0.309017, 0.5], [-0.587785, 0.425325, 0.688191], [-0.850651, 0.525731, 0.0], [-0.864188, 0.442863, 0.238856], [-0.716567, 0.681718, 0.147621], [-0.688191, 0.587785, 0.425325], [-0.5, 0.809017, 0.309017], [-0.238856, 0.864188, 0.442863], [-0.425325, 0.688191, 0.587785], [-0.716567, 0.681718, -0.147621], [-0.5, 0.809017, -0.309017], [-0.525731, 0.850651, 0.0], [0.0, 0.850651, -0.525731], [-0.238856, 0.864188, -0.442863], [0.0, 0.955423, -0.295242], [-0.262866, 0.951056, -0.16246], [0.0, 1.0, 0.0], [0.0, 0.955423, 0.295242], [-0.262866, 0.951056, 0.16246], [0.238856, 0.864188, 0.442863], [0.262866, 0.951056, 0.16246], [0.5, 0.809017, 0.309017], [0.238856, 0.864188, -0.442863], [0.262866, 0.951056, -0.16246], [0.5, 0.809017, -0.309017], [0.850651, 0.525731, 0.0], [0.716567, 0.681718, 0.147621], [0.716567, 0.681718, -0.147621], [0.525731, 0.850651, 0.0], [0.425325, 0.688191, 0.587785], [0.864188, 0.442863, 0.238856], [0.688191, 0.587785, 0.425325], [0.809017, 0.309017, 0.5], [0.681718, 0.147621, 0.716567], [0.587785, 0.425325, 0.688191], [0.955423, 0.295242, 0.0], [1.0, 0.0, 0.0], [0.951056, 0.16246, 0.262866], [0.850651, -0.525731, 0.0], [0.955423, -0.295242, 0.0], [0.864188, -0.442863, 0.238856], [0.951056, -0.16246, 0.262866], [0.809017, -0.309017, 0.5], [0.681718, -0.147621, 0.716567], [0.850651, 0.0, 0.525731], [0.864188, 0.442863, -0.238856], [0.809017, 0.309017, -0.5], [0.951056, 0.16246, -0.262866], [0.525731, 0.0, -0.850651], [0.681718, 0.147621, -0.716567], [0.681718, -0.147621, -0.716567], [0.850651, 0.0, -0.525731], [0.809017, -0.309017, -0.5], [0.864188, -0.442863, -0.238856], [0.951056, -0.16246, -0.262866], [0.147621, 0.716567, -0.681718], [0.309017, 0.5, -0.809017], [0.425325, 0.688191, -0.587785], [0.442863, 0.238856, -0.864188], [0.587785, 0.425325, -0.688191], [0.688191, 0.587785, -0.425325], [-0.147621, 0.716567, -0.681718], [-0.309017, 0.5, -0.809017], [0.0, 0.525731, -0.850651], [-0.525731, 0.0, -0.850651], [-0.442863, 0.238856, -0.864188], [-0.295242, 0.0, -0.955423], [-0.16246, 0.262866, -0.951056], [0.0, 0.0, -1.0], [0.295242, 0.0, -0.955423], [0.16246, 0.262866, -0.951056], [-0.442863, -0.238856, -0.864188], [-0.309017, -0.5, -0.809017], [-0.16246, -0.262866, -0.951056], [0.0, -0.850651, -0.525731], [-0.147621, -0.716567, -0.681718], [0.147621, -0.716567, -0.681718], [0.0, -0.525731, -0.850651], [0.309017, -0.5, -0.809017], [0.442863, -0.238856, -0.864188], [0.16246, -0.262866, -0.951056], [0.238856, -0.864188, -0.442863], [0.5, -0.809017, -0.309017], [0.425325, -0.688191, -0.587785], [0.716567, -0.681718, -0.147621], [0.688191, -0.587785, -0.425325], [0.587785, -0.425325, -0.688191], [0.0, -0.955423, -0.295242], [0.0, -1.0, 0.0], [0.262866, -0.951056, -0.16246], [0.0, -0.850651, 0.525731], [0.0, -0.955423, 0.295242], [0.238856, -0.864188, 0.442863], [0.262866, -0.951056, 0.16246], [0.5, -0.809017, 0.309017], [0.716567, -0.681718, 0.147621], [0.525731, -0.850651, 0.0], [-0.238856, -0.864188, -0.442863], [-0.5, -0.809017, -0.309017], [-0.262866, -0.951056, -0.16246], [-0.850651, -0.525731, 0.0], [-0.716567, -0.681718, -0.147621], [-0.716567, -0.681718, 0.147621], [-0.525731, -0.850651, 0.0], [-0.5, -0.809017, 0.309017], [-0.238856, -0.864188, 0.442863], [-0.262866, -0.951056, 0.16246], [-0.864188, -0.442863, 0.238856], [-0.809017, -0.309017, 0.5], [-0.688191, -0.587785, 0.425325], [-0.681718, -0.147621, 0.716567], [-0.442863, -0.238856, 0.864188], [-0.587785, -0.425325, 0.688191], [-0.309017, -0.5, 0.809017], [-0.147621, -0.716567, 0.681718], [-0.425325, -0.688191, 0.587785], [-0.16246, -0.262866, 0.951056], [0.442863, -0.238856, 0.864188], [0.16246, -0.262866, 0.951056], [0.309017, -0.5, 0.809017], [0.147621, -0.716567, 0.681718], [0.0, -0.525731, 0.850651], [0.425325, -0.688191, 0.587785], [0.587785, -0.425325, 0.688191], [0.688191, -0.587785, 0.425325], [-0.955423, 0.295242, 0.0], [-0.951056, 0.16246, 0.262866], [-1.0, 0.0, 0.0], [-0.850651, 0.0, 0.525731], [-0.955423, -0.295242, 0.0], [-0.951056, -0.16246, 0.262866], [-0.864188, 0.442863, -0.238856], [-0.951056, 0.16246, -0.262866], [-0.809017, 0.309017, -0.5], [-0.864188, -0.442863, -0.238856], [-0.951056, -0.16246, -0.262866], [-0.809017, -0.309017, -0.5], [-0.681718, 0.147621, -0.716567], [-0.681718, -0.147621, -0.716567], [-0.850651, 0.0, -0.525731], [-0.688191, 0.587785, -0.425325], [-0.587785, 0.425325, -0.688191], [-0.425325, 0.688191, -0.587785], [-0.425325, -0.688191, -0.587785], [-0.587785, -0.425325, -0.688191], [-0.688191, -0.587785, -0.425325]];\n    return function (buffer) {\n      var data = new DataView(buffer); // http://tfc.duke.free.fr/coding/md2-specs-en.html\n\n      var header = {};\n      var headerNames = ['ident', 'version', 'skinwidth', 'skinheight', 'framesize', 'num_skins', 'num_vertices', 'num_st', 'num_tris', 'num_glcmds', 'num_frames', 'offset_skins', 'offset_st', 'offset_tris', 'offset_frames', 'offset_glcmds', 'offset_end'];\n\n      for (let i = 0; i < headerNames.length; i++) {\n        header[headerNames[i]] = data.getInt32(i * 4, true);\n      }\n\n      if (header.ident !== 844121161 || header.version !== 8) {\n        console.error('Not a valid MD2 file');\n        return;\n      }\n\n      if (header.offset_end !== data.byteLength) {\n        console.error('Corrupted MD2 file');\n        return;\n      } //\n\n\n      var geometry = new BufferGeometry(); // uvs\n\n      var uvsTemp = [];\n      var offset = header.offset_st;\n\n      for (let i = 0, l = header.num_st; i < l; i++) {\n        var u = data.getInt16(offset + 0, true);\n        var v = data.getInt16(offset + 2, true);\n        uvsTemp.push(u / header.skinwidth, 1 - v / header.skinheight);\n        offset += 4;\n      } // triangles\n\n\n      offset = header.offset_tris;\n      var vertexIndices = [];\n      var uvIndices = [];\n\n      for (let i = 0, l = header.num_tris; i < l; i++) {\n        vertexIndices.push(data.getUint16(offset + 0, true), data.getUint16(offset + 2, true), data.getUint16(offset + 4, true));\n        uvIndices.push(data.getUint16(offset + 6, true), data.getUint16(offset + 8, true), data.getUint16(offset + 10, true));\n        offset += 12;\n      } // frames\n\n\n      var translation = new Vector3();\n      var scale = new Vector3();\n      var string = [];\n      var frames = [];\n      offset = header.offset_frames;\n\n      for (let i = 0, l = header.num_frames; i < l; i++) {\n        scale.set(data.getFloat32(offset + 0, true), data.getFloat32(offset + 4, true), data.getFloat32(offset + 8, true));\n        translation.set(data.getFloat32(offset + 12, true), data.getFloat32(offset + 16, true), data.getFloat32(offset + 20, true));\n        offset += 24;\n\n        for (let j = 0; j < 16; j++) {\n          var character = data.getUint8(offset + j, true);\n          if (character === 0) break;\n          string[j] = character;\n        }\n\n        var frame = {\n          name: String.fromCharCode.apply(null, string),\n          vertices: [],\n          normals: []\n        };\n        offset += 16;\n\n        for (let j = 0; j < header.num_vertices; j++) {\n          var x = data.getUint8(offset++, true);\n          var y = data.getUint8(offset++, true);\n          var z = data.getUint8(offset++, true);\n          var n = normalData[data.getUint8(offset++, true)];\n          x = x * scale.x + translation.x;\n          y = y * scale.y + translation.y;\n          z = z * scale.z + translation.z;\n          frame.vertices.push(x, z, y); // convert to Y-up\n\n          frame.normals.push(n[0], n[2], n[1]); // convert to Y-up\n        }\n\n        frames.push(frame);\n      } // static\n\n\n      var positions = [];\n      var normals = [];\n      var uvs = [];\n      var verticesTemp = frames[0].vertices;\n      var normalsTemp = frames[0].normals;\n\n      for (let i = 0, l = vertexIndices.length; i < l; i++) {\n        var vertexIndex = vertexIndices[i];\n        var stride = vertexIndex * 3; //\n\n        var x = verticesTemp[stride];\n        var y = verticesTemp[stride + 1];\n        var z = verticesTemp[stride + 2];\n        positions.push(x, y, z); //\n\n        var nx = normalsTemp[stride];\n        var ny = normalsTemp[stride + 1];\n        var nz = normalsTemp[stride + 2];\n        normals.push(nx, ny, nz); //\n\n        var uvIndex = uvIndices[i];\n        stride = uvIndex * 2;\n        var u = uvsTemp[stride];\n        var v = uvsTemp[stride + 1];\n        uvs.push(u, v);\n      }\n\n      geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n      geometry.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n      geometry.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // animation\n\n      var morphPositions = [];\n      var morphNormals = [];\n\n      for (let i = 0, l = frames.length; i < l; i++) {\n        var frame = frames[i];\n        var attributeName = frame.name;\n\n        if (frame.vertices.length > 0) {\n          var positions = [];\n\n          for (let j = 0, jl = vertexIndices.length; j < jl; j++) {\n            var vertexIndex = vertexIndices[j];\n            var stride = vertexIndex * 3;\n            var x = frame.vertices[stride];\n            var y = frame.vertices[stride + 1];\n            var z = frame.vertices[stride + 2];\n            positions.push(x, y, z);\n          }\n\n          var positionAttribute = new Float32BufferAttribute(positions, 3);\n          positionAttribute.name = attributeName;\n          morphPositions.push(positionAttribute);\n        }\n\n        if (frame.normals.length > 0) {\n          var normals = [];\n\n          for (let j = 0, jl = vertexIndices.length; j < jl; j++) {\n            var vertexIndex = vertexIndices[j];\n            var stride = vertexIndex * 3;\n            var nx = frame.normals[stride];\n            var ny = frame.normals[stride + 1];\n            var nz = frame.normals[stride + 2];\n            normals.push(nx, ny, nz);\n          }\n\n          var normalAttribute = new Float32BufferAttribute(normals, 3);\n          normalAttribute.name = attributeName;\n          morphNormals.push(normalAttribute);\n        }\n      }\n\n      geometry.morphAttributes.position = morphPositions;\n      geometry.morphAttributes.normal = morphNormals;\n      geometry.morphTargetsRelative = false;\n      geometry.animations = AnimationClip.CreateClipsFromMorphTargetSequences(frames, 10);\n      return geometry;\n    };\n  }()\n});\n\nexport { MD2Loader };\n"]},"metadata":{},"sourceType":"module"}