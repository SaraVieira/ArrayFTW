{"ast":null,"code":"/**\n * Sepia tone shader\n * based on glfx.js sepia shader\n * https://github.com/evanw/glfx.js\n */\nvar SepiaShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    amount: {\n      value: 1.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform float amount;', 'uniform sampler2D tDiffuse;', 'varying vec2 vUv;', 'void main() {', '\tvec4 color = texture2D( tDiffuse, vUv );', '\tvec3 c = color.rgb;', '\tcolor.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );', '\tcolor.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );', '\tcolor.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );', '\tgl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );', '}'].join('\\n')\n};\nexport { SepiaShader };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/shaders/SepiaShader.js"],"names":["SepiaShader","uniforms","tDiffuse","value","amount","vertexShader","join","fragmentShader"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,IAAIA,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE;AADC,KADF;AAIRC,IAAAA,MAAM,EAAE;AACND,MAAAA,KAAK,EAAE;AADD;AAJA,GADM;AAShBE,EAAAA,YAAY,EAAE,CAAC,mBAAD,EAAsB,eAAtB,EAAuC,YAAvC,EAAqD,4EAArD,EAAmI,GAAnI,EAAwIC,IAAxI,CAA6I,IAA7I,CATE;AAUhBC,EAAAA,cAAc,EAAE,CAAC,uBAAD,EAA0B,6BAA1B,EAAyD,mBAAzD,EAA8E,eAA9E,EAA+F,2CAA/F,EAA4I,sBAA5I,EAAoK,oFAApK,EAA0P,oFAA1P,EAAgV,oFAAhV,EAAsa,iEAAta,EAAye,GAAze,EAA8eD,IAA9e,CAAmf,IAAnf;AAVA,CAAlB;AAaA,SAASN,WAAT","sourcesContent":["/**\n * Sepia tone shader\n * based on glfx.js sepia shader\n * https://github.com/evanw/glfx.js\n */\nvar SepiaShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    amount: {\n      value: 1.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform float amount;', 'uniform sampler2D tDiffuse;', 'varying vec2 vUv;', 'void main() {', '\tvec4 color = texture2D( tDiffuse, vUv );', '\tvec3 c = color.rgb;', '\tcolor.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );', '\tcolor.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );', '\tcolor.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );', '\tgl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );', '}'].join('\\n')\n};\n\nexport { SepiaShader };\n"]},"metadata":{},"sourceType":"module"}