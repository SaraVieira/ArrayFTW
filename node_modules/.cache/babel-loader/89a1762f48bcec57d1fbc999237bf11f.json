{"ast":null,"code":"import { Matrix4 } from 'three';\nimport { InputNode } from '../core/InputNode.js';\n\nfunction Matrix4Node(matrix) {\n  InputNode.call(this, 'm4');\n  this.value = matrix || new Matrix4();\n}\n\nMatrix4Node.prototype = Object.create(InputNode.prototype);\nMatrix4Node.prototype.constructor = Matrix4Node;\nMatrix4Node.prototype.nodeType = 'Matrix4';\nObject.defineProperties(Matrix4Node.prototype, {\n  elements: {\n    set: function set(val) {\n      this.value.elements = val;\n    },\n    get: function get() {\n      return this.value.elements;\n    }\n  }\n});\n\nMatrix4Node.prototype.generateReadonly = function (builder, output, uuid, type\n/*, ns, needsUpdate */\n) {\n  return builder.format('mat4( ' + this.value.elements.join(', ') + ' )', type, output);\n};\n\nMatrix4Node.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.scope.value.fromArray(source.elements);\n  return this;\n};\n\nMatrix4Node.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.elements = this.value.elements.concat();\n  }\n\n  return data;\n};\n\nexport { Matrix4Node };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/nodes/inputs/Matrix4Node.js"],"names":["Matrix4","InputNode","Matrix4Node","matrix","call","value","prototype","Object","create","constructor","nodeType","defineProperties","elements","set","val","get","generateReadonly","builder","output","uuid","type","format","join","copy","source","scope","fromArray","toJSON","meta","data","getJSONNode","createJSONNode","concat"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3BF,EAAAA,SAAS,CAACG,IAAV,CAAe,IAAf,EAAqB,IAArB;AACA,OAAKC,KAAL,GAAaF,MAAM,IAAI,IAAIH,OAAJ,EAAvB;AACD;;AAEDE,WAAW,CAACI,SAAZ,GAAwBC,MAAM,CAACC,MAAP,CAAcP,SAAS,CAACK,SAAxB,CAAxB;AACAJ,WAAW,CAACI,SAAZ,CAAsBG,WAAtB,GAAoCP,WAApC;AACAA,WAAW,CAACI,SAAZ,CAAsBI,QAAtB,GAAiC,SAAjC;AACAH,MAAM,CAACI,gBAAP,CAAwBT,WAAW,CAACI,SAApC,EAA+C;AAC7CM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,aAAUC,GAAV,EAAe;AAClB,WAAKT,KAAL,CAAWO,QAAX,GAAsBE,GAAtB;AACD,KAHO;AAIRC,IAAAA,GAAG,EAAE,eAAY;AACf,aAAO,KAAKV,KAAL,CAAWO,QAAlB;AACD;AANO;AADmC,CAA/C;;AAWAV,WAAW,CAACI,SAAZ,CAAsBU,gBAAtB,GAAyC,UAAUC,OAAV,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC;AAC1E;AADyC,EAEvC;AACA,SAAOH,OAAO,CAACI,MAAR,CAAe,WAAW,KAAKhB,KAAL,CAAWO,QAAX,CAAoBU,IAApB,CAAyB,IAAzB,CAAX,GAA4C,IAA3D,EAAiEF,IAAjE,EAAuEF,MAAvE,CAAP;AACD,CAJD;;AAMAhB,WAAW,CAACI,SAAZ,CAAsBiB,IAAtB,GAA6B,UAAUC,MAAV,EAAkB;AAC7CvB,EAAAA,SAAS,CAACK,SAAV,CAAoBiB,IAApB,CAAyBnB,IAAzB,CAA8B,IAA9B,EAAoCoB,MAApC;AACA,OAAKC,KAAL,CAAWpB,KAAX,CAAiBqB,SAAjB,CAA2BF,MAAM,CAACZ,QAAlC;AACA,SAAO,IAAP;AACD,CAJD;;AAMAV,WAAW,CAACI,SAAZ,CAAsBqB,MAAtB,GAA+B,UAAUC,IAAV,EAAgB;AAC7C,MAAIC,IAAI,GAAG,KAAKC,WAAL,CAAiBF,IAAjB,CAAX;;AAEA,MAAI,CAACC,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG,KAAKE,cAAL,CAAoBH,IAApB,CAAP;AACAC,IAAAA,IAAI,CAACjB,QAAL,GAAgB,KAAKP,KAAL,CAAWO,QAAX,CAAoBoB,MAApB,EAAhB;AACD;;AAED,SAAOH,IAAP;AACD,CATD;;AAWA,SAAS3B,WAAT","sourcesContent":["import { Matrix4 } from 'three';\nimport { InputNode } from '../core/InputNode.js';\n\nfunction Matrix4Node(matrix) {\n  InputNode.call(this, 'm4');\n  this.value = matrix || new Matrix4();\n}\n\nMatrix4Node.prototype = Object.create(InputNode.prototype);\nMatrix4Node.prototype.constructor = Matrix4Node;\nMatrix4Node.prototype.nodeType = 'Matrix4';\nObject.defineProperties(Matrix4Node.prototype, {\n  elements: {\n    set: function (val) {\n      this.value.elements = val;\n    },\n    get: function () {\n      return this.value.elements;\n    }\n  }\n});\n\nMatrix4Node.prototype.generateReadonly = function (builder, output, uuid, type\n/*, ns, needsUpdate */\n) {\n  return builder.format('mat4( ' + this.value.elements.join(', ') + ' )', type, output);\n};\n\nMatrix4Node.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.scope.value.fromArray(source.elements);\n  return this;\n};\n\nMatrix4Node.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.elements = this.value.elements.concat();\n  }\n\n  return data;\n};\n\nexport { Matrix4Node };\n"]},"metadata":{},"sourceType":"module"}