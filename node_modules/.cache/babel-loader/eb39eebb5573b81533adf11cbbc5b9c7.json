{"ast":null,"code":"import { Loader, FileLoader } from 'three';\nimport { parse as _parse } from 'opentype.js';\n/**\n * Requires opentype.js to be included in the project.\n * Loads TTF files and converts them into typeface JSON that can be used directly\n * to create THREE.Font objects.\n */\n\nvar TTFLoader = function TTFLoader(manager) {\n  Loader.call(this, manager);\n  this.reversed = false;\n};\n\nTTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: TTFLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        onLoad(scope.parse(buffer));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  },\n  parse: function parse(arraybuffer) {\n    function convert(font, reversed) {\n      var round = Math.round;\n      var glyphs = {};\n      var scale = 100000 / ((font.unitsPerEm || 2048) * 72);\n      var glyphIndexMap = font.encoding.cmap.glyphIndexMap;\n      var unicodes = Object.keys(glyphIndexMap);\n\n      for (var i = 0; i < unicodes.length; i++) {\n        var unicode = unicodes[i];\n        var glyph = font.glyphs.glyphs[glyphIndexMap[unicode]];\n\n        if (unicode !== undefined) {\n          var token = {\n            ha: round(glyph.advanceWidth * scale),\n            x_min: round(glyph.xMin * scale),\n            x_max: round(glyph.xMax * scale),\n            o: ''\n          };\n\n          if (reversed) {\n            glyph.path.commands = reverseCommands(glyph.path.commands);\n          }\n\n          glyph.path.commands.forEach(function (command) {\n            if (command.type.toLowerCase() === 'c') {\n              command.type = 'b';\n            }\n\n            token.o += command.type.toLowerCase() + ' ';\n\n            if (command.x !== undefined && command.y !== undefined) {\n              token.o += round(command.x * scale) + ' ' + round(command.y * scale) + ' ';\n            }\n\n            if (command.x1 !== undefined && command.y1 !== undefined) {\n              token.o += round(command.x1 * scale) + ' ' + round(command.y1 * scale) + ' ';\n            }\n\n            if (command.x2 !== undefined && command.y2 !== undefined) {\n              token.o += round(command.x2 * scale) + ' ' + round(command.y2 * scale) + ' ';\n            }\n          });\n          glyphs[String.fromCodePoint(glyph.unicode)] = token;\n        }\n      }\n\n      return {\n        glyphs: glyphs,\n        familyName: font.getEnglishName('fullName'),\n        ascender: round(font.ascender * scale),\n        descender: round(font.descender * scale),\n        underlinePosition: font.tables.post.underlinePosition,\n        underlineThickness: font.tables.post.underlineThickness,\n        boundingBox: {\n          xMin: font.tables.head.xMin,\n          xMax: font.tables.head.xMax,\n          yMin: font.tables.head.yMin,\n          yMax: font.tables.head.yMax\n        },\n        resolution: 1000,\n        original_font_information: font.tables.name\n      };\n    }\n\n    function reverseCommands(commands) {\n      var paths = [];\n      var path;\n      commands.forEach(function (c) {\n        if (c.type.toLowerCase() === 'm') {\n          path = [c];\n          paths.push(path);\n        } else if (c.type.toLowerCase() !== 'z') {\n          path.push(c);\n        }\n      });\n      var reversed = [];\n      paths.forEach(function (p) {\n        var result = {\n          type: 'm',\n          x: p[p.length - 1].x,\n          y: p[p.length - 1].y\n        };\n        reversed.push(result);\n\n        for (var i = p.length - 1; i > 0; i--) {\n          var command = p[i];\n          var result = {\n            type: command.type\n          };\n\n          if (command.x2 !== undefined && command.y2 !== undefined) {\n            result.x1 = command.x2;\n            result.y1 = command.y2;\n            result.x2 = command.x1;\n            result.y2 = command.y1;\n          } else if (command.x1 !== undefined && command.y1 !== undefined) {\n            result.x1 = command.x1;\n            result.y1 = command.y1;\n          }\n\n          result.x = p[i - 1].x;\n          result.y = p[i - 1].y;\n          reversed.push(result);\n        }\n      });\n      return reversed;\n    }\n\n    return convert(_parse(arraybuffer), this.reversed); // eslint-disable-line no-undef\n  }\n});\nexport { TTFLoader };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/loaders/TTFLoader.js"],"names":["Loader","FileLoader","parse","TTFLoader","manager","call","reversed","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","e","console","error","itemError","arraybuffer","convert","font","round","Math","glyphs","scale","unitsPerEm","glyphIndexMap","encoding","cmap","unicodes","keys","i","length","unicode","glyph","undefined","token","ha","advanceWidth","x_min","xMin","x_max","xMax","o","commands","reverseCommands","forEach","command","type","toLowerCase","x","y","x1","y1","x2","y2","String","fromCodePoint","familyName","getEnglishName","ascender","descender","underlinePosition","tables","post","underlineThickness","boundingBox","head","yMin","yMax","resolution","original_font_information","name","paths","c","push","p","result"],"mappings":"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","sourcesContent":["import { Loader, FileLoader } from 'three';\nimport { parse } from 'opentype.js';\n\n/**\n * Requires opentype.js to be included in the project.\n * Loads TTF files and converts them into typeface JSON that can be used directly\n * to create THREE.Font objects.\n */\n\nvar TTFLoader = function (manager) {\n  Loader.call(this, manager);\n  this.reversed = false;\n};\n\nTTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: TTFLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        onLoad(scope.parse(buffer));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  },\n  parse: function (arraybuffer) {\n    function convert(font, reversed) {\n      var round = Math.round;\n      var glyphs = {};\n      var scale = 100000 / ((font.unitsPerEm || 2048) * 72);\n      var glyphIndexMap = font.encoding.cmap.glyphIndexMap;\n      var unicodes = Object.keys(glyphIndexMap);\n\n      for (let i = 0; i < unicodes.length; i++) {\n        var unicode = unicodes[i];\n        var glyph = font.glyphs.glyphs[glyphIndexMap[unicode]];\n\n        if (unicode !== undefined) {\n          var token = {\n            ha: round(glyph.advanceWidth * scale),\n            x_min: round(glyph.xMin * scale),\n            x_max: round(glyph.xMax * scale),\n            o: ''\n          };\n\n          if (reversed) {\n            glyph.path.commands = reverseCommands(glyph.path.commands);\n          }\n\n          glyph.path.commands.forEach(function (command) {\n            if (command.type.toLowerCase() === 'c') {\n              command.type = 'b';\n            }\n\n            token.o += command.type.toLowerCase() + ' ';\n\n            if (command.x !== undefined && command.y !== undefined) {\n              token.o += round(command.x * scale) + ' ' + round(command.y * scale) + ' ';\n            }\n\n            if (command.x1 !== undefined && command.y1 !== undefined) {\n              token.o += round(command.x1 * scale) + ' ' + round(command.y1 * scale) + ' ';\n            }\n\n            if (command.x2 !== undefined && command.y2 !== undefined) {\n              token.o += round(command.x2 * scale) + ' ' + round(command.y2 * scale) + ' ';\n            }\n          });\n          glyphs[String.fromCodePoint(glyph.unicode)] = token;\n        }\n      }\n\n      return {\n        glyphs: glyphs,\n        familyName: font.getEnglishName('fullName'),\n        ascender: round(font.ascender * scale),\n        descender: round(font.descender * scale),\n        underlinePosition: font.tables.post.underlinePosition,\n        underlineThickness: font.tables.post.underlineThickness,\n        boundingBox: {\n          xMin: font.tables.head.xMin,\n          xMax: font.tables.head.xMax,\n          yMin: font.tables.head.yMin,\n          yMax: font.tables.head.yMax\n        },\n        resolution: 1000,\n        original_font_information: font.tables.name\n      };\n    }\n\n    function reverseCommands(commands) {\n      var paths = [];\n      var path;\n      commands.forEach(function (c) {\n        if (c.type.toLowerCase() === 'm') {\n          path = [c];\n          paths.push(path);\n        } else if (c.type.toLowerCase() !== 'z') {\n          path.push(c);\n        }\n      });\n      var reversed = [];\n      paths.forEach(function (p) {\n        var result = {\n          type: 'm',\n          x: p[p.length - 1].x,\n          y: p[p.length - 1].y\n        };\n        reversed.push(result);\n\n        for (let i = p.length - 1; i > 0; i--) {\n          var command = p[i];\n          var result = {\n            type: command.type\n          };\n\n          if (command.x2 !== undefined && command.y2 !== undefined) {\n            result.x1 = command.x2;\n            result.y1 = command.y2;\n            result.x2 = command.x1;\n            result.y2 = command.y1;\n          } else if (command.x1 !== undefined && command.y1 !== undefined) {\n            result.x1 = command.x1;\n            result.y1 = command.y1;\n          }\n\n          result.x = p[i - 1].x;\n          result.y = p[i - 1].y;\n          reversed.push(result);\n        }\n      });\n      return reversed;\n    }\n\n    return convert(parse(arraybuffer), this.reversed); // eslint-disable-line no-undef\n  }\n});\n\nexport { TTFLoader };\n"]},"metadata":{},"sourceType":"module"}