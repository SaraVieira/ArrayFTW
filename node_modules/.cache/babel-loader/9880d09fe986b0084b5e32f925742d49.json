{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nimport { FloatNode } from '../inputs/FloatNode.js';\nimport { FunctionNode } from '../core/FunctionNode.js';\nimport { NormalNode } from '../accessors/NormalNode.js';\nimport { PositionNode } from '../accessors/PositionNode.js';\n\nfunction BumpMapNode(value, scale) {\n  TempNode.call(this, 'v3');\n  this.value = value;\n  this.scale = scale || new FloatNode(1);\n  this.toNormalMap = false;\n}\n\nBumpMapNode.Nodes = function () {\n  var dHdxy_fwd = new FunctionNode([// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n  // http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n  // Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n  'vec2 dHdxy_fwd( sampler2D bumpMap, vec2 vUv, float bumpScale ) {', // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n  '\tvec2 dSTdx = dFdx( vUv );', '\tvec2 dSTdy = dFdy( vUv );', '\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;', '\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;', '\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;', '\treturn vec2( dBx, dBy );', '}'].join('\\n'), null, {\n    derivatives: true\n  });\n  var perturbNormalArb = new FunctionNode(['vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {', // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n  '\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );', '\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );', '\tvec3 vN = surf_norm;', // normalized\n  '\tvec3 R1 = cross( vSigmaY, vN );', '\tvec3 R2 = cross( vN, vSigmaX );', '\tfloat fDet = dot( vSigmaX, R1 );', '\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );', '\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );', '\treturn normalize( abs( fDet ) * surf_norm - vGrad );', '}'].join('\\n'), [dHdxy_fwd], {\n    derivatives: true\n  });\n  var bumpToNormal = new FunctionNode(['vec3 bumpToNormal( sampler2D bumpMap, vec2 uv, float scale ) {', '\tvec2 dSTdx = dFdx( uv );', '\tvec2 dSTdy = dFdy( uv );', '\tfloat Hll = texture2D( bumpMap, uv ).x;', '\tfloat dBx = texture2D( bumpMap, uv + dSTdx ).x - Hll;', '\tfloat dBy = texture2D( bumpMap, uv + dSTdy ).x - Hll;', '\treturn vec3( .5 - ( dBx * scale ), .5 - ( dBy * scale ), 1.0 );', '}'].join('\\n'), null, {\n    derivatives: true\n  });\n  return {\n    dHdxy_fwd: dHdxy_fwd,\n    perturbNormalArb: perturbNormalArb,\n    bumpToNormal: bumpToNormal\n  };\n}();\n\nBumpMapNode.prototype = Object.create(TempNode.prototype);\nBumpMapNode.prototype.constructor = BumpMapNode;\nBumpMapNode.prototype.nodeType = 'BumpMap';\nBumpMapNode.prototype.hashProperties = ['toNormalMap'];\n\nBumpMapNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    if (this.toNormalMap) {\n      var bumpToNormal = builder.include(BumpMapNode.Nodes.bumpToNormal);\n      return builder.format(bumpToNormal + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.value.uv.build(builder, 'v2') + ', ' + this.scale.build(builder, 'f') + ' )', this.getType(builder), output);\n    } else {\n      var derivativeHeight = builder.include(BumpMapNode.Nodes.dHdxy_fwd),\n          perturbNormalArb = builder.include(BumpMapNode.Nodes.perturbNormalArb);\n      this.normal = this.normal || new NormalNode();\n      this.position = this.position || new PositionNode(PositionNode.VIEW);\n      var derivativeHeightCode = derivativeHeight + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.value.uv.build(builder, 'v2') + ', ' + this.scale.build(builder, 'f') + ' )';\n      return builder.format(perturbNormalArb + '( -' + this.position.build(builder, 'v3') + ', ' + this.normal.build(builder, 'v3') + ', ' + derivativeHeightCode + ' )', this.getType(builder), output);\n    }\n  } else {\n    console.warn('THREE.BumpMapNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('vec3( 0.0 )', this.getType(builder), output);\n  }\n};\n\nBumpMapNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.value = source.value;\n  this.scale = source.scale;\n  return this;\n};\n\nBumpMapNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n    data.scale = this.scale.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { BumpMapNode };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/three-stdlib/nodes/misc/BumpMapNode.js"],"names":["TempNode","FloatNode","FunctionNode","NormalNode","PositionNode","BumpMapNode","value","scale","call","toNormalMap","Nodes","dHdxy_fwd","join","derivatives","perturbNormalArb","bumpToNormal","prototype","Object","create","constructor","nodeType","hashProperties","generate","builder","output","isShader","include","format","build","uv","getType","derivativeHeight","normal","position","VIEW","derivativeHeightCode","console","warn","shader","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"mappings":"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","sourcesContent":["import { TempNode } from '../core/TempNode.js';\nimport { FloatNode } from '../inputs/FloatNode.js';\nimport { FunctionNode } from '../core/FunctionNode.js';\nimport { NormalNode } from '../accessors/NormalNode.js';\nimport { PositionNode } from '../accessors/PositionNode.js';\n\nfunction BumpMapNode(value, scale) {\n  TempNode.call(this, 'v3');\n  this.value = value;\n  this.scale = scale || new FloatNode(1);\n  this.toNormalMap = false;\n}\n\nBumpMapNode.Nodes = function () {\n  var dHdxy_fwd = new FunctionNode([// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n  // http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n  // Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n  'vec2 dHdxy_fwd( sampler2D bumpMap, vec2 vUv, float bumpScale ) {', // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n  '\tvec2 dSTdx = dFdx( vUv );', '\tvec2 dSTdy = dFdy( vUv );', '\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;', '\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;', '\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;', '\treturn vec2( dBx, dBy );', '}'].join('\\n'), null, {\n    derivatives: true\n  });\n  var perturbNormalArb = new FunctionNode(['vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {', // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n  '\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );', '\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );', '\tvec3 vN = surf_norm;', // normalized\n  '\tvec3 R1 = cross( vSigmaY, vN );', '\tvec3 R2 = cross( vN, vSigmaX );', '\tfloat fDet = dot( vSigmaX, R1 );', '\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );', '\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );', '\treturn normalize( abs( fDet ) * surf_norm - vGrad );', '}'].join('\\n'), [dHdxy_fwd], {\n    derivatives: true\n  });\n  var bumpToNormal = new FunctionNode(['vec3 bumpToNormal( sampler2D bumpMap, vec2 uv, float scale ) {', '\tvec2 dSTdx = dFdx( uv );', '\tvec2 dSTdy = dFdy( uv );', '\tfloat Hll = texture2D( bumpMap, uv ).x;', '\tfloat dBx = texture2D( bumpMap, uv + dSTdx ).x - Hll;', '\tfloat dBy = texture2D( bumpMap, uv + dSTdy ).x - Hll;', '\treturn vec3( .5 - ( dBx * scale ), .5 - ( dBy * scale ), 1.0 );', '}'].join('\\n'), null, {\n    derivatives: true\n  });\n  return {\n    dHdxy_fwd: dHdxy_fwd,\n    perturbNormalArb: perturbNormalArb,\n    bumpToNormal: bumpToNormal\n  };\n}();\n\nBumpMapNode.prototype = Object.create(TempNode.prototype);\nBumpMapNode.prototype.constructor = BumpMapNode;\nBumpMapNode.prototype.nodeType = 'BumpMap';\nBumpMapNode.prototype.hashProperties = ['toNormalMap'];\n\nBumpMapNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    if (this.toNormalMap) {\n      var bumpToNormal = builder.include(BumpMapNode.Nodes.bumpToNormal);\n      return builder.format(bumpToNormal + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.value.uv.build(builder, 'v2') + ', ' + this.scale.build(builder, 'f') + ' )', this.getType(builder), output);\n    } else {\n      var derivativeHeight = builder.include(BumpMapNode.Nodes.dHdxy_fwd),\n          perturbNormalArb = builder.include(BumpMapNode.Nodes.perturbNormalArb);\n      this.normal = this.normal || new NormalNode();\n      this.position = this.position || new PositionNode(PositionNode.VIEW);\n      var derivativeHeightCode = derivativeHeight + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.value.uv.build(builder, 'v2') + ', ' + this.scale.build(builder, 'f') + ' )';\n      return builder.format(perturbNormalArb + '( -' + this.position.build(builder, 'v3') + ', ' + this.normal.build(builder, 'v3') + ', ' + derivativeHeightCode + ' )', this.getType(builder), output);\n    }\n  } else {\n    console.warn('THREE.BumpMapNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('vec3( 0.0 )', this.getType(builder), output);\n  }\n};\n\nBumpMapNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.value = source.value;\n  this.scale = source.scale;\n  return this;\n};\n\nBumpMapNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n    data.scale = this.scale.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { BumpMapNode };\n"]},"metadata":{},"sourceType":"module"}