{"ast":null,"code":"import _slicedToArray from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _construct from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct\";\nimport _toConsumableArray from \"/Projects/arrayftw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createElement, useState, useMemo } from 'react';\nimport { Vector3, CanvasTexture } from 'three';\nimport { useGizmoContext } from './GizmoHelper.js';\nvar faces = ['right', 'left', 'top', 'bottom', 'front', 'back'];\n\nvar makePositionVector = function makePositionVector(xyz) {\n  return _construct(Vector3, _toConsumableArray(xyz)).multiplyScalar(0.38);\n};\n\nvar corners = [[1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]].map(makePositionVector);\nvar cornerDimensions = [0.25, 0.25, 0.25];\nvar edges = [[1, 1, 0], [1, 0, 1], [1, 0, -1], [1, -1, 0], [0, 1, 1], [0, 1, -1], [0, -1, 1], [0, -1, -1], [-1, 1, 0], [-1, 0, 1], [-1, 0, -1], [-1, -1, 0]].map(makePositionVector);\nvar edgeDimensions = edges.map(function (edge) {\n  return edge.toArray().map(function (axis) {\n    return axis == 0 ? 0.5 : 0.25;\n  });\n});\n\nvar FaceMaterial = function FaceMaterial(_ref) {\n  var hover = _ref.hover,\n      index = _ref.index;\n  var texture = useMemo(function () {\n    var canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    var context = canvas.getContext('2d');\n    context.fillStyle = '#eee';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.strokeStyle = '#444';\n    context.strokeRect(0, 0, canvas.width, canvas.height);\n    context.font = '28px Arial';\n    context.textAlign = 'center';\n    context.fillStyle = '#222';\n    context.fillText(faces[index].toUpperCase(), 64, 76);\n    return new CanvasTexture(canvas);\n  }, [index]);\n  return /*#__PURE__*/createElement(\"meshLambertMaterial\", {\n    map: texture,\n    attachArray: \"material\",\n    color: hover ? 'hotpink' : 'white'\n  });\n};\n\nvar FaceCube = function FaceCube() {\n  var _useGizmoContext = useGizmoContext(),\n      tweenCamera = _useGizmoContext.tweenCamera,\n      raycast = _useGizmoContext.raycast;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hover = _useState2[0],\n      setHover = _useState2[1];\n\n  var handlePointerOut = function handlePointerOut(e) {\n    setHover(null);\n    e.stopPropagation();\n  };\n\n  var handlePointerDown = function handlePointerDown(e) {\n    tweenCamera(e.face.normal);\n    e.stopPropagation();\n  };\n\n  var handlePointerMove = function handlePointerMove(e) {\n    setHover(Math.floor(e.faceIndex / 2));\n    e.stopPropagation();\n  };\n\n  return /*#__PURE__*/createElement(\"mesh\", {\n    raycast: raycast,\n    onPointerOut: handlePointerOut,\n    onPointerMove: handlePointerMove,\n    onPointerDown: handlePointerDown\n  }, _toConsumableArray(Array(6)).map(function (_, index) {\n    return /*#__PURE__*/createElement(FaceMaterial, {\n      key: index,\n      index: index,\n      hover: hover === index\n    });\n  }), /*#__PURE__*/createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1, 1]\n  }));\n};\n\nvar EdgeCube = function EdgeCube(_ref2) {\n  var dimensions = _ref2.dimensions,\n      position = _ref2.position;\n\n  var _useGizmoContext2 = useGizmoContext(),\n      tweenCamera = _useGizmoContext2.tweenCamera,\n      raycast = _useGizmoContext2.raycast;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hover = _useState4[0],\n      setHover = _useState4[1];\n\n  var handlePointerOut = function handlePointerOut(e) {\n    setHover(false);\n    e.stopPropagation();\n  };\n\n  var handlePointerOver = function handlePointerOver(e) {\n    setHover(true);\n    e.stopPropagation();\n  };\n\n  var handlePointerDown = function handlePointerDown(e) {\n    tweenCamera(position);\n    e.stopPropagation();\n  };\n\n  return /*#__PURE__*/createElement(\"mesh\", {\n    position: position,\n    raycast: raycast,\n    onPointerOver: handlePointerOver,\n    onPointerOut: handlePointerOut,\n    onPointerDown: handlePointerDown\n  }, /*#__PURE__*/createElement(\"meshBasicMaterial\", {\n    color: hover ? 'hotpink' : 'white',\n    transparent: true,\n    opacity: 0.75,\n    visible: hover\n  }), /*#__PURE__*/createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: dimensions\n  }));\n};\n\nvar GizmoViewcube = function GizmoViewcube() {\n  return /*#__PURE__*/createElement(\"group\", {\n    scale: [60, 60, 60]\n  }, /*#__PURE__*/createElement(FaceCube, null), edges.map(function (edge, index) {\n    return /*#__PURE__*/createElement(EdgeCube, {\n      key: index,\n      position: edge,\n      dimensions: edgeDimensions[index]\n    });\n  }), corners.map(function (corner, index) {\n    return /*#__PURE__*/createElement(EdgeCube, {\n      key: index,\n      position: corner,\n      dimensions: cornerDimensions\n    });\n  }), /*#__PURE__*/createElement(\"ambientLight\", {\n    intensity: 0.5\n  }), /*#__PURE__*/createElement(\"pointLight\", {\n    position: [10, 10, 10],\n    intensity: 0.5\n  }));\n};\n\nexport { GizmoViewcube };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/@react-three/drei/core/GizmoViewcube.js"],"names":["createElement","useState","useMemo","Vector3","CanvasTexture","useGizmoContext","faces","makePositionVector","xyz","multiplyScalar","corners","map","cornerDimensions","edges","edgeDimensions","edge","toArray","axis","FaceMaterial","hover","index","texture","canvas","document","width","height","context","getContext","fillStyle","fillRect","strokeStyle","strokeRect","font","textAlign","fillText","toUpperCase","attachArray","color","FaceCube","tweenCamera","raycast","setHover","handlePointerOut","e","stopPropagation","handlePointerDown","face","normal","handlePointerMove","Math","floor","faceIndex","onPointerOut","onPointerMove","onPointerDown","Array","_","key","attach","args","EdgeCube","dimensions","position","handlePointerOver","onPointerOver","transparent","opacity","visible","GizmoViewcube","scale","corner","intensity"],"mappings":"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","sourcesContent":["import { createElement, useState, useMemo } from 'react';\nimport { Vector3, CanvasTexture } from 'three';\nimport { useGizmoContext } from './GizmoHelper.js';\n\nconst faces = ['right', 'left', 'top', 'bottom', 'front', 'back'];\n\nconst makePositionVector = xyz => new Vector3(...xyz).multiplyScalar(0.38);\n\nconst corners = [[1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]].map(makePositionVector);\nconst cornerDimensions = [0.25, 0.25, 0.25];\nconst edges = [[1, 1, 0], [1, 0, 1], [1, 0, -1], [1, -1, 0], [0, 1, 1], [0, 1, -1], [0, -1, 1], [0, -1, -1], [-1, 1, 0], [-1, 0, 1], [-1, 0, -1], [-1, -1, 0]].map(makePositionVector);\nconst edgeDimensions = edges.map(edge => edge.toArray().map(axis => axis == 0 ? 0.5 : 0.25));\n\nconst FaceMaterial = ({\n  hover,\n  index\n}) => {\n  const texture = useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const context = canvas.getContext('2d');\n    context.fillStyle = '#eee';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.strokeStyle = '#444';\n    context.strokeRect(0, 0, canvas.width, canvas.height);\n    context.font = '28px Arial';\n    context.textAlign = 'center';\n    context.fillStyle = '#222';\n    context.fillText(faces[index].toUpperCase(), 64, 76);\n    return new CanvasTexture(canvas);\n  }, [index]);\n  return /*#__PURE__*/createElement(\"meshLambertMaterial\", {\n    map: texture,\n    attachArray: \"material\",\n    color: hover ? 'hotpink' : 'white'\n  });\n};\n\nconst FaceCube = () => {\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const [hover, setHover] = useState(null);\n\n  const handlePointerOut = e => {\n    setHover(null);\n    e.stopPropagation();\n  };\n\n  const handlePointerDown = e => {\n    tweenCamera(e.face.normal);\n    e.stopPropagation();\n  };\n\n  const handlePointerMove = e => {\n    setHover(Math.floor(e.faceIndex / 2));\n    e.stopPropagation();\n  };\n\n  return /*#__PURE__*/createElement(\"mesh\", {\n    raycast: raycast,\n    onPointerOut: handlePointerOut,\n    onPointerMove: handlePointerMove,\n    onPointerDown: handlePointerDown\n  }, [...Array(6)].map((_, index) => /*#__PURE__*/createElement(FaceMaterial, {\n    key: index,\n    index: index,\n    hover: hover === index\n  })), /*#__PURE__*/createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1, 1]\n  }));\n};\n\nconst EdgeCube = ({\n  dimensions,\n  position\n}) => {\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const [hover, setHover] = useState(false);\n\n  const handlePointerOut = e => {\n    setHover(false);\n    e.stopPropagation();\n  };\n\n  const handlePointerOver = e => {\n    setHover(true);\n    e.stopPropagation();\n  };\n\n  const handlePointerDown = e => {\n    tweenCamera(position);\n    e.stopPropagation();\n  };\n\n  return /*#__PURE__*/createElement(\"mesh\", {\n    position: position,\n    raycast: raycast,\n    onPointerOver: handlePointerOver,\n    onPointerOut: handlePointerOut,\n    onPointerDown: handlePointerDown\n  }, /*#__PURE__*/createElement(\"meshBasicMaterial\", {\n    color: hover ? 'hotpink' : 'white',\n    transparent: true,\n    opacity: 0.75,\n    visible: hover\n  }), /*#__PURE__*/createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: dimensions\n  }));\n};\n\nconst GizmoViewcube = () => {\n  return /*#__PURE__*/createElement(\"group\", {\n    scale: [60, 60, 60]\n  }, /*#__PURE__*/createElement(FaceCube, null), edges.map((edge, index) => /*#__PURE__*/createElement(EdgeCube, {\n    key: index,\n    position: edge,\n    dimensions: edgeDimensions[index]\n  })), corners.map((corner, index) => /*#__PURE__*/createElement(EdgeCube, {\n    key: index,\n    position: corner,\n    dimensions: cornerDimensions\n  })), /*#__PURE__*/createElement(\"ambientLight\", {\n    intensity: 0.5\n  }), /*#__PURE__*/createElement(\"pointLight\", {\n    position: [10, 10, 10],\n    intensity: 0.5\n  }));\n};\n\nexport { GizmoViewcube };\n"]},"metadata":{},"sourceType":"module"}