{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useRef, useLayoutEffect, createElement } from 'react';\nimport { useThree } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nvar PerspectiveCamera = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$makeDefault = _ref.makeDefault,\n      makeDefault = _ref$makeDefault === void 0 ? false : _ref$makeDefault,\n      props = _objectWithoutPropertiesLoose(_ref, [\"makeDefault\"]);\n\n  var set = useThree(function (_ref2) {\n    var set = _ref2.set;\n    return set;\n  });\n  var camera = useThree(function (_ref3) {\n    var camera = _ref3.camera;\n    return camera;\n  });\n  var size = useThree(function (_ref4) {\n    var size = _ref4.size;\n    return size;\n  });\n  var cameraRef = useRef();\n  useLayoutEffect(function () {\n    var cam = cameraRef.current;\n\n    if (cam) {\n      cam.aspect = size.width / size.height;\n      cam.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  useLayoutEffect(function () {\n    if (makeDefault && cameraRef.current) {\n      var oldCam = camera;\n      set(function () {\n        return {\n          camera: cameraRef.current\n        };\n      });\n      return function () {\n        return set(function () {\n          return {\n            camera: oldCam\n          };\n        });\n      };\n    }\n  }, [camera, cameraRef, makeDefault, set]);\n  return /*#__PURE__*/createElement(\"perspectiveCamera\", _extends({\n    ref: mergeRefs([cameraRef, ref])\n  }, props));\n});\nexport { PerspectiveCamera };","map":{"version":3,"sources":["/Projects/arrayftw/node_modules/@react-three/drei/core/PerspectiveCamera.js"],"names":["_extends","_objectWithoutPropertiesLoose","forwardRef","useRef","useLayoutEffect","createElement","useThree","mergeRefs","PerspectiveCamera","_ref","ref","makeDefault","props","set","camera","size","cameraRef","cam","current","aspect","width","height","updateProjectionMatrix","oldCam"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,eAA7B,EAA8CC,aAA9C,QAAmE,OAAnE;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,IAAMC,iBAAiB,GAAG,aAAaN,UAAU,CAAC,UAACO,IAAD,EAAOC,GAAP,EAAe;AAC/D,yBAEID,IAFJ,CACEE,WADF;AAAA,MACEA,WADF,iCACgB,KADhB;AAAA,MAGIC,KAHJ,GAGYX,6BAA6B,CAACQ,IAAD,EAAO,CAAC,aAAD,CAAP,CAHzC;;AAKA,MAAMI,GAAG,GAAGP,QAAQ,CAAC;AAAA,QACnBO,GADmB,SACnBA,GADmB;AAAA,WAEfA,GAFe;AAAA,GAAD,CAApB;AAGA,MAAMC,MAAM,GAAGR,QAAQ,CAAC;AAAA,QACtBQ,MADsB,SACtBA,MADsB;AAAA,WAElBA,MAFkB;AAAA,GAAD,CAAvB;AAGA,MAAMC,IAAI,GAAGT,QAAQ,CAAC;AAAA,QACpBS,IADoB,SACpBA,IADoB;AAAA,WAEhBA,IAFgB;AAAA,GAAD,CAArB;AAGA,MAAMC,SAAS,GAAGb,MAAM,EAAxB;AACAC,EAAAA,eAAe,CAAC,YAAM;AACpB,QACWa,GADX,GAEID,SAFJ,CACEE,OADF;;AAIA,QAAID,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACE,MAAJ,GAAaJ,IAAI,CAACK,KAAL,GAAaL,IAAI,CAACM,MAA/B;AACAJ,MAAAA,GAAG,CAACK,sBAAJ;AACD;AACF,GATc,EASZ,CAACP,IAAD,EAAOH,KAAP,CATY,CAAf;AAUAR,EAAAA,eAAe,CAAC,YAAM;AACpB,QAAIO,WAAW,IAAIK,SAAS,CAACE,OAA7B,EAAsC;AACpC,UAAMK,MAAM,GAAGT,MAAf;AACAD,MAAAA,GAAG,CAAC;AAAA,eAAO;AACTC,UAAAA,MAAM,EAAEE,SAAS,CAACE;AADT,SAAP;AAAA,OAAD,CAAH;AAGA,aAAO;AAAA,eAAML,GAAG,CAAC;AAAA,iBAAO;AACtBC,YAAAA,MAAM,EAAES;AADc,WAAP;AAAA,SAAD,CAAT;AAAA,OAAP;AAGD;AACF,GAVc,EAUZ,CAACT,MAAD,EAASE,SAAT,EAAoBL,WAApB,EAAiCE,GAAjC,CAVY,CAAf;AAWA,SAAO,aAAaR,aAAa,CAAC,mBAAD,EAAsBL,QAAQ,CAAC;AAC9DU,IAAAA,GAAG,EAAEH,SAAS,CAAC,CAACS,SAAD,EAAYN,GAAZ,CAAD;AADgD,GAAD,EAE5DE,KAF4D,CAA9B,CAAjC;AAGD,CAxCgD,CAAjD;AA0CA,SAASJ,iBAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useRef, useLayoutEffect, createElement } from 'react';\nimport { useThree } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\n\nconst PerspectiveCamera = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    makeDefault = false\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"makeDefault\"]);\n\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = useRef();\n  useLayoutEffect(() => {\n    const {\n      current: cam\n    } = cameraRef;\n\n    if (cam) {\n      cam.aspect = size.width / size.height;\n      cam.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  useLayoutEffect(() => {\n    if (makeDefault && cameraRef.current) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    }\n  }, [camera, cameraRef, makeDefault, set]);\n  return /*#__PURE__*/createElement(\"perspectiveCamera\", _extends({\n    ref: mergeRefs([cameraRef, ref])\n  }, props));\n});\n\nexport { PerspectiveCamera };\n"]},"metadata":{},"sourceType":"module"}