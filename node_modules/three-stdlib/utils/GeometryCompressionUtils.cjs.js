"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("@babel/runtime/helpers/inheritsLoose"),e=require("three");function r(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var n=r(t),a={compressNormals:function(t,r){t.geometry||console.error("Mesh must contain geometry. ");var n=t.geometry.attributes.normal;if(n||console.error("Geometry must contain normal attribute. "),!n.isPacked){3!=n.itemSize&&console.error("normal.itemSize is not 3, which cannot be encoded. ");var a,i=n.array,h=n.count;if("DEFAULT"==r){a=new Uint8Array(3*h);for(var s=0;s<i.length;s+=3){var u=this.EncodingFuncs.defaultEncode(i[s],i[s+1],i[s+2],1);a[s+0]=u[0],a[s+1]=u[1],a[s+2]=u[2]}t.geometry.setAttribute("normal",new e.BufferAttribute(a,3,!0)),t.geometry.attributes.normal.bytes=1*a.length}else if("OCT1Byte"==r){a=new Int8Array(2*h);for(var d=0;d<i.length;d+=3){var m=this.EncodingFuncs.octEncodeBest(i[d],i[d+1],i[d+2],1);a[d/3*2+0]=m[0],a[d/3*2+1]=m[1]}t.geometry.setAttribute("normal",new e.BufferAttribute(a,2,!0)),t.geometry.attributes.normal.bytes=1*a.length}else if("OCT2Byte"==r){a=new Int16Array(2*h);for(var f=0;f<i.length;f+=3){var l=this.EncodingFuncs.octEncodeBest(i[f],i[f+1],i[f+2],2);a[f/3*2+0]=l[0],a[f/3*2+1]=l[1]}t.geometry.setAttribute("normal",new e.BufferAttribute(a,2,!0)),t.geometry.attributes.normal.bytes=2*a.length}else if("ANGLES"==r){a=new Uint16Array(2*h);for(var c=0;c<i.length;c+=3){var g=this.EncodingFuncs.anglesEncode(i[c],i[c+1],i[c+2]);a[c/3*2+0]=g[0],a[c/3*2+1]=g[1]}t.geometry.setAttribute("normal",new e.BufferAttribute(a,2,!0)),t.geometry.attributes.normal.bytes=2*a.length}else console.error("Unrecognized encoding method, should be `DEFAULT` or `ANGLES` or `OCT`. ");t.geometry.attributes.normal.needsUpdate=!0,t.geometry.attributes.normal.isPacked=!0,t.geometry.attributes.normal.packingMethod=r,t.material instanceof o||(t.material=(new o).copy(t.material)),"ANGLES"==r&&(t.material.defines.USE_PACKED_NORMAL=0),"OCT1Byte"==r&&(t.material.defines.USE_PACKED_NORMAL=1),"OCT2Byte"==r&&(t.material.defines.USE_PACKED_NORMAL=1),"DEFAULT"==r&&(t.material.defines.USE_PACKED_NORMAL=2)}},compressPositions:function(t){t.geometry||console.error("Mesh must contain geometry. ");var r=t.geometry.attributes.position;if(r||console.error("Geometry must contain position attribute. "),!r.isPacked){3!=r.itemSize&&console.error("position.itemSize is not 3, which cannot be packed. ");var n=r.array,a=this.EncodingFuncs.quantizedEncode(n,2),i=a.quantized,h=a.decodeMat;null==t.geometry.boundingBox&&t.geometry.computeBoundingBox(),null==t.geometry.boundingSphere&&t.geometry.computeBoundingSphere(),t.geometry.setAttribute("position",new e.BufferAttribute(i,3)),t.geometry.attributes.position.isPacked=!0,t.geometry.attributes.position.needsUpdate=!0,t.geometry.attributes.position.bytes=2*i.length,t.material instanceof o||(t.material=(new o).copy(t.material)),t.material.defines.USE_PACKED_POSITION=0,t.material.uniforms.quantizeMatPos.value=h,t.material.uniforms.quantizeMatPos.needsUpdate=!0}},compressUvs:function(t){t.geometry||console.error("Mesh must contain geometry property. ");var r=t.geometry.attributes.uv;if(r||console.error("Geometry must contain uv attribute. "),!r.isPacked){for(var n,a={min:1/0,max:-1/0},i=r.array,h=0;h<i.length;h++)a.min=Math.min(a.min,i[h]),a.max=Math.max(a.max,i[h]);if(a.min>=-1&&a.max<=1){n=new Uint16Array(i.length);for(var s=0;s<i.length;s+=2){var u=this.EncodingFuncs.defaultEncode(i[s],i[s+1],0,2);n[s]=u[0],n[s+1]=u[1]}t.geometry.setAttribute("uv",new e.BufferAttribute(n,2,!0)),t.geometry.attributes.uv.isPacked=!0,t.geometry.attributes.uv.needsUpdate=!0,t.geometry.attributes.uv.bytes=2*n.length,t.material instanceof o||(t.material=(new o).copy(t.material)),t.material.defines.USE_PACKED_UV=0}else n=this.EncodingFuncs.quantizedEncodeUV(i,2),t.geometry.setAttribute("uv",new e.BufferAttribute(n.quantized,2)),t.geometry.attributes.uv.isPacked=!0,t.geometry.attributes.uv.needsUpdate=!0,t.geometry.attributes.uv.bytes=2*n.quantized.length,t.material instanceof o||(t.material=(new o).copy(t.material)),t.material.defines.USE_PACKED_UV=1,t.material.uniforms.quantizeMatUV.value=n.decodeMat,t.material.uniforms.quantizeMatUV.needsUpdate=!0}},EncodingFuncs:{defaultEncode:function(t,e,r,n){if(1==n){var a=Math.round(.5*(t+1)*255),o=Math.round(.5*(e+1)*255),i=Math.round(.5*(r+1)*255);return new Uint8Array([a,o,i])}if(2==n){var h=Math.round(.5*(t+1)*65535),s=Math.round(.5*(e+1)*65535),u=Math.round(.5*(r+1)*65535);return new Uint16Array([h,s,u])}console.error("number of bytes must be 1 or 2")},defaultDecode:function(t,e){return 1==e?[t[0]/255*2-1,t[1]/255*2-1,t[2]/255*2-1]:2==e?[t[0]/65535*2-1,t[1]/65535*2-1,t[2]/65535*2-1]:void console.error("number of bytes must be 1 or 2")},anglesEncode:function(t,e,r){var n=parseInt(.5*(1+Math.atan2(e,t)/Math.PI)*65535),a=parseInt(.5*(1+r)*65535);return new Uint16Array([n,a])},octEncodeBest:function(t,e,r,n){var a,o,i,h,s;return i=a=u(t,e,r,"floor","floor"),o=d(a),s=m(t,e,r,o),o=d(a=u(t,e,r,"ceil","floor")),(h=m(t,e,r,o))>s&&(i=a,s=h),o=d(a=u(t,e,r,"floor","ceil")),(h=m(t,e,r,o))>s&&(i=a,s=h),o=d(a=u(t,e,r,"ceil","ceil")),(h=m(t,e,r,o))>s&&(i=a),i;function u(t,e,a,o,i){var h=t/(Math.abs(t)+Math.abs(e)+Math.abs(a)),s=e/(Math.abs(t)+Math.abs(e)+Math.abs(a));if(r<0){var u=(1-Math.abs(s))*(h>=0?1:-1),d=(1-Math.abs(h))*(s>=0?1:-1);h=u,s=d;var m=1-Math.abs(h)-Math.abs(s);m>0&&(m+=.001,h+=h>0?m/2:-m/2,s+=s>0?m/2:-m/2)}return 1==n?new Int8Array([Math[o](127.5*h+(h<0?1:0)),Math[i](127.5*s+(s<0?1:0))]):2==n?new Int16Array([Math[o](32767.5*h+(h<0?1:0)),Math[i](32767.5*s+(s<0?1:0))]):void 0}function d(t){var e=t[0],r=t[1];1==n?(e/=e<0?127:128,r/=r<0?127:128):2==n&&(e/=e<0?32767:32768,r/=r<0?32767:32768);var a=1-Math.abs(e)-Math.abs(r);if(a<0){var o=e;e=(1-Math.abs(r))*(e>=0?1:-1),r=(1-Math.abs(o))*(r>=0?1:-1)}var i=Math.sqrt(e*e+r*r+a*a);return[e/i,r/i,a/i]}function m(t,e,r,n){return t*n[0]+e*n[1]+r*n[2]}},quantizedEncode:function(t,r){var n,a;1==r?(n=new Uint8Array(t.length),a=255):2==r?(n=new Uint16Array(t.length),a=65535):console.error("number of bytes error! ");var o=new e.Matrix4,i=new Float32Array(3),h=new Float32Array(3);i[0]=i[1]=i[2]=Number.MAX_VALUE,h[0]=h[1]=h[2]=-Number.MAX_VALUE;for(var s=0;s<t.length;s+=3)i[0]=Math.min(i[0],t[s+0]),i[1]=Math.min(i[1],t[s+1]),i[2]=Math.min(i[2],t[s+2]),h[0]=Math.max(h[0],t[s+0]),h[1]=Math.max(h[1],t[s+1]),h[2]=Math.max(h[2],t[s+2]);o.scale(new e.Vector3((h[0]-i[0])/a,(h[1]-i[1])/a,(h[2]-i[2])/a)),o.elements[12]=i[0],o.elements[13]=i[1],o.elements[14]=i[2],o.transpose();for(var u=new Float32Array([h[0]!==i[0]?a/(h[0]-i[0]):0,h[1]!==i[1]?a/(h[1]-i[1]):0,h[2]!==i[2]?a/(h[2]-i[2]):0]),d=0;d<t.length;d+=3)n[d+0]=Math.floor((t[d+0]-i[0])*u[0]),n[d+1]=Math.floor((t[d+1]-i[1])*u[1]),n[d+2]=Math.floor((t[d+2]-i[2])*u[2]);return{quantized:n,decodeMat:o}},quantizedEncodeUV:function(t,r){var n,a;1==r?(n=new Uint8Array(t.length),a=255):2==r?(n=new Uint16Array(t.length),a=65535):console.error("number of bytes error! ");var o=new e.Matrix3,i=new Float32Array(2),h=new Float32Array(2);i[0]=i[1]=Number.MAX_VALUE,h[0]=h[1]=-Number.MAX_VALUE;for(var s=0;s<t.length;s+=2)i[0]=Math.min(i[0],t[s+0]),i[1]=Math.min(i[1],t[s+1]),h[0]=Math.max(h[0],t[s+0]),h[1]=Math.max(h[1],t[s+1]);o.scale((h[0]-i[0])/a,(h[1]-i[1])/a),o.elements[6]=i[0],o.elements[7]=i[1],o.transpose();for(var u=new Float32Array([h[0]!==i[0]?a/(h[0]-i[0]):0,h[1]!==i[1]?a/(h[1]-i[1]):0]),d=0;d<t.length;d+=2)n[d+0]=Math.floor((t[d+0]-i[0])*u[0]),n[d+1]=Math.floor((t[d+1]-i[1])*u[1]);return{quantized:n,decodeMat:o}}}},o=function(t){function r(r){var n;return(n=t.call(this)||this).defines={},n.type="PackedPhongMaterial",n.uniforms=e.UniformsUtils.merge([e.ShaderLib.phong.uniforms,{quantizeMatPos:{value:null},quantizeMatUV:{value:null}}]),n.vertexShader=["#define PHONG","varying vec3 vViewPosition;","#ifndef FLAT_SHADED","varying vec3 vNormal;","#endif",e.ShaderChunk.common,e.ShaderChunk.uv_pars_vertex,e.ShaderChunk.uv2_pars_vertex,e.ShaderChunk.displacementmap_pars_vertex,e.ShaderChunk.envmap_pars_vertex,e.ShaderChunk.color_pars_vertex,e.ShaderChunk.fog_pars_vertex,e.ShaderChunk.morphtarget_pars_vertex,e.ShaderChunk.skinning_pars_vertex,e.ShaderChunk.shadowmap_pars_vertex,e.ShaderChunk.logdepthbuf_pars_vertex,e.ShaderChunk.clipping_planes_pars_vertex,"#ifdef USE_PACKED_NORMAL\n\t\t\t\t\t#if USE_PACKED_NORMAL == 0\n\t\t\t\t\t\tvec3 decodeNormal(vec3 packedNormal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfloat x = packedNormal.x * 2.0 - 1.0;\n\t\t\t\t\t\t\tfloat y = packedNormal.y * 2.0 - 1.0;\n\t\t\t\t\t\t\tvec2 scth = vec2(sin(x * PI), cos(x * PI));\n\t\t\t\t\t\t\tvec2 scphi = vec2(sqrt(1.0 - y * y), y);\n\t\t\t\t\t\t\treturn normalize( vec3(scth.y * scphi.x, scth.x * scphi.x, scphi.y) );\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#if USE_PACKED_NORMAL == 1\n\t\t\t\t\t\tvec3 decodeNormal(vec3 packedNormal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvec3 v = vec3(packedNormal.xy, 1.0 - abs(packedNormal.x) - abs(packedNormal.y));\n\t\t\t\t\t\t\tif (v.z < 0.0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tv.xy = (1.0 - abs(v.yx)) * vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn normalize(v);\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#if USE_PACKED_NORMAL == 2\n\t\t\t\t\t\tvec3 decodeNormal(vec3 packedNormal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvec3 v = (packedNormal * 2.0) - 1.0;\n\t\t\t\t\t\t\treturn normalize(v);\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\t\t\t\t#endif","#ifdef USE_PACKED_POSITION\n\t\t\t\t\t#if USE_PACKED_POSITION == 0\n\t\t\t\t\t\tuniform mat4 quantizeMatPos;\n\t\t\t\t\t#endif\n\t\t\t\t#endif","#ifdef USE_PACKED_UV\n\t\t\t\t\t#if USE_PACKED_UV == 1\n\t\t\t\t\t\tuniform mat3 quantizeMatUV;\n\t\t\t\t\t#endif\n\t\t\t\t#endif","#ifdef USE_PACKED_UV\n\t\t\t\t\t#if USE_PACKED_UV == 0\n\t\t\t\t\t\tvec2 decodeUV(vec2 packedUV)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvec2 uv = (packedUV * 2.0) - 1.0;\n\t\t\t\t\t\t\treturn uv;\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#if USE_PACKED_UV == 1\n\t\t\t\t\t\tvec2 decodeUV(vec2 packedUV)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvec2 uv = ( vec3(packedUV, 1.0) * quantizeMatUV ).xy;\n\t\t\t\t\t\t\treturn uv;\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\t\t\t\t#endif","void main() {",e.ShaderChunk.uv_vertex,"#ifdef USE_UV\n\t\t\t\t\t#ifdef USE_PACKED_UV\n\t\t\t\t\t\tvUv = decodeUV(vUv);\n\t\t\t\t\t#endif\n\t\t\t\t#endif",e.ShaderChunk.uv2_vertex,e.ShaderChunk.color_vertex,e.ShaderChunk.beginnormal_vertex,"#ifdef USE_PACKED_NORMAL\n\t\t\t\t\tobjectNormal = decodeNormal(objectNormal);\n\t\t\t\t#endif\n\n\t\t\t\t#ifdef USE_TANGENT\n\t\t\t\t\tvec3 objectTangent = vec3( tangent.xyz );\n\t\t\t\t#endif\n\t\t\t\t",e.ShaderChunk.morphnormal_vertex,e.ShaderChunk.skinbase_vertex,e.ShaderChunk.skinnormal_vertex,e.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED","\tvNormal = normalize( transformedNormal );","#endif",e.ShaderChunk.begin_vertex,"#ifdef USE_PACKED_POSITION\n\t\t\t\t\t#if USE_PACKED_POSITION == 0\n\t\t\t\t\t\ttransformed = ( vec4(transformed, 1.0) * quantizeMatPos ).xyz;\n\t\t\t\t\t#endif\n\t\t\t\t#endif",e.ShaderChunk.morphtarget_vertex,e.ShaderChunk.skinning_vertex,e.ShaderChunk.displacementmap_vertex,e.ShaderChunk.project_vertex,e.ShaderChunk.logdepthbuf_vertex,e.ShaderChunk.clipping_planes_vertex,"vViewPosition = - mvPosition.xyz;",e.ShaderChunk.worldpos_vertex,e.ShaderChunk.envmap_vertex,e.ShaderChunk.shadowmap_vertex,e.ShaderChunk.fog_vertex,"}"].join("\n"),n.fragmentShader=["#define PHONG","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;",e.ShaderChunk.common,e.ShaderChunk.packing,e.ShaderChunk.dithering_pars_fragment,e.ShaderChunk.color_pars_fragment,e.ShaderChunk.uv_pars_fragment,e.ShaderChunk.uv2_pars_fragment,e.ShaderChunk.map_pars_fragment,e.ShaderChunk.alphamap_pars_fragment,e.ShaderChunk.aomap_pars_fragment,e.ShaderChunk.lightmap_pars_fragment,e.ShaderChunk.emissivemap_pars_fragment,e.ShaderChunk.envmap_common_pars_fragment,e.ShaderChunk.envmap_pars_fragment,e.ShaderChunk.cube_uv_reflection_fragment,e.ShaderChunk.fog_pars_fragment,e.ShaderChunk.bsdfs,e.ShaderChunk.lights_pars_begin,e.ShaderChunk.lights_phong_pars_fragment,e.ShaderChunk.shadowmap_pars_fragment,e.ShaderChunk.bumpmap_pars_fragment,e.ShaderChunk.normalmap_pars_fragment,e.ShaderChunk.specularmap_pars_fragment,e.ShaderChunk.logdepthbuf_pars_fragment,e.ShaderChunk.clipping_planes_pars_fragment,"void main() {",e.ShaderChunk.clipping_planes_fragment,"vec4 diffuseColor = vec4( diffuse, opacity );","ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","vec3 totalEmissiveRadiance = emissive;",e.ShaderChunk.logdepthbuf_fragment,e.ShaderChunk.map_fragment,e.ShaderChunk.color_fragment,e.ShaderChunk.alphamap_fragment,e.ShaderChunk.alphatest_fragment,e.ShaderChunk.specularmap_fragment,e.ShaderChunk.normal_fragment_begin,e.ShaderChunk.normal_fragment_maps,e.ShaderChunk.emissivemap_fragment,e.ShaderChunk.lights_phong_fragment,e.ShaderChunk.lights_fragment_begin,e.ShaderChunk.lights_fragment_maps,e.ShaderChunk.lights_fragment_end,e.ShaderChunk.aomap_fragment,"vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;",e.ShaderChunk.envmap_fragment,"gl_FragColor = vec4( outgoingLight, diffuseColor.a );",e.ShaderChunk.tonemapping_fragment,e.ShaderChunk.encodings_fragment,e.ShaderChunk.fog_fragment,e.ShaderChunk.premultiplied_alpha_fragment,e.ShaderChunk.dithering_fragment,"}"].join("\n"),n.setValues(r),n}return n.default(r,t),r}(e.MeshPhongMaterial);exports.GeometryCompressionUtils=a,exports.PackedPhongMaterial=o;
