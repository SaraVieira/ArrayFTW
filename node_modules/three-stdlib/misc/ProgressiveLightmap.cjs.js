"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three");function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var i=t(require("potpack")),r=function(){function t(t,i){var r=this;void 0===i&&(i=1024),this.renderer=t,this.res=i,this.lightMapContainers=[],this.compiled=!1,this.scene=new e.Scene,this.scene.background=null,this.tinyTarget=new e.WebGLRenderTarget(1,1),this.buffer1Active=!1,this.firstUpdate=!0,this.warned=!1;var a=/(Android|iPad|iPhone|iPod)/g.test(navigator.userAgent)?alfFloatType:e.FloatType;this.progressiveLightMap1=new e.WebGLRenderTarget(this.res,this.res,{type:a}),this.progressiveLightMap2=new e.WebGLRenderTarget(this.res,this.res,{type:a}),this.uvMat=new e.MeshPhongMaterial,this.uvMat.uniforms={},this.uvMat.onBeforeCompile=function(e){e.vertexShader="#define USE_LIGHTMAP\n"+e.vertexShader.slice(0,-1)+"\tgl_Position = vec4((uv2 - 0.5) * 2.0, 1.0, 1.0); }";var t=e.fragmentShader.indexOf("void main() {");e.fragmentShader="varying vec2 vUv2;\n"+e.fragmentShader.slice(0,t)+"\tuniform sampler2D previousShadowMap;\n\tuniform float averagingWindow;\n"+e.fragmentShader.slice(t-1,-1)+"\nvec3 texelOld = texture2D(previousShadowMap, vUv2).rgb;\n\t\t\t\tgl_FragColor.rgb = mix(texelOld, gl_FragColor.rgb, 1.0/averagingWindow);\n\t\t\t}",e.uniforms.previousShadowMap={value:r.progressiveLightMap1.texture},e.uniforms.averagingWindow={value:100},r.uvMat.uniforms=e.uniforms,r.uvMat.userData.shader=e,r.compiled=!0}}var r=t.prototype;return r.addObjectsToLightMap=function(e){this.uv_boxes=[];for(var t=3/this.res,r=0;r<e.length;r++){var a=e[r];a.isLight?this.scene.attach(a):a.geometry.hasAttribute("uv")?(null==this.blurringPlane&&this._initializeBlurPlane(this.res,this.progressiveLightMap1),a.material.lightMap=this.progressiveLightMap2.texture,a.material.dithering=!0,a.castShadow=!0,a.receiveShadow=!0,a.renderOrder=1e3+r,this.uv_boxes.push({w:1+2*t,h:1+2*t,index:r}),this.lightMapContainers.push({basicMat:a.material,object:a}),this.compiled=!1):console.warn("All lightmap objects need UVs!")}var s=i.default(this.uv_boxes);this.uv_boxes.forEach((function(i){for(var r=e[i.index].geometry.getAttribute("uv").clone(),a=0;a<r.array.length;a+=r.itemSize)r.array[a]=(r.array[a]+i.x+t)/s.w,r.array[a+1]=(r.array[a+1]+i.y+t)/s.h;e[i.index].geometry.setAttribute("uv2",r),e[i.index].geometry.getAttribute("uv2").needsUpdate=!0}))},r.update=function(e,t,i){if(void 0===t&&(t=100),void 0===i&&(i=!0),null!=this.blurringPlane){var r=this.renderer.getRenderTarget();this.blurringPlane.visible=i;for(var a=0;a<this.lightMapContainers.length;a++)this.lightMapContainers[a].object.oldScene=this.lightMapContainers[a].object.parent,this.scene.attach(this.lightMapContainers[a].object);this.firstUpdate&&(this.renderer.setRenderTarget(this.tinyTarget),this.renderer.render(this.scene,e),this.firstUpdate=!1);for(var s=0;s<this.lightMapContainers.length;s++)this.uvMat.uniforms.averagingWindow={value:t},this.lightMapContainers[s].object.material=this.uvMat,this.lightMapContainers[s].object.oldFrustumCulled=this.lightMapContainers[s].object.frustumCulled,this.lightMapContainers[s].object.frustumCulled=!1;var n=this.buffer1Active?this.progressiveLightMap1:this.progressiveLightMap2,h=this.buffer1Active?this.progressiveLightMap2:this.progressiveLightMap1;this.renderer.setRenderTarget(n),this.uvMat.uniforms.previousShadowMap={value:h.texture},this.blurringPlane.material.uniforms.previousShadowMap={value:h.texture},this.buffer1Active=!this.buffer1Active,this.renderer.render(this.scene,e);for(var o=0;o<this.lightMapContainers.length;o++)this.lightMapContainers[o].object.frustumCulled=this.lightMapContainers[o].object.oldFrustumCulled,this.lightMapContainers[o].object.material=this.lightMapContainers[o].basicMat,this.lightMapContainers[o].object.oldScene.attach(this.lightMapContainers[o].object);this.renderer.setRenderTarget(r)}},r.showDebugLightmap=function(t,i){void 0===i&&(i=void 0),0!=this.lightMapContainers.length?(null==this.labelMesh&&(this.labelMaterial=new e.MeshBasicMaterial({map:this.progressiveLightMap1.texture,side:e.DoubleSide}),this.labelPlane=new e.PlaneGeometry(100,100),this.labelMesh=new e.Mesh(this.labelPlane,this.labelMaterial),this.labelMesh.position.y=250,this.lightMapContainers[0].object.parent.add(this.labelMesh)),null!=i&&this.labelMesh.position.copy(i),this.labelMesh.visible=t):this.warned||(console.warn("Call this after adding the objects!"),this.warned=!0)},r._initializeBlurPlane=function(t,i){var r=this;void 0===i&&(i=null);var a=new e.MeshBasicMaterial;a.uniforms={previousShadowMap:{value:null},pixelOffset:{value:1/t},polygonOffset:!0,polygonOffsetFactor:-1,polygonOffsetUnits:3},a.onBeforeCompile=function(e){e.vertexShader="#define USE_UV\n"+e.vertexShader.slice(0,-1)+"\tgl_Position = vec4((uv - 0.5) * 2.0, 1.0, 1.0); }";var s=e.fragmentShader.indexOf("void main() {");e.fragmentShader="#define USE_UV\n"+e.fragmentShader.slice(0,s)+"\tuniform sampler2D previousShadowMap;\n\tuniform float pixelOffset;\n"+e.fragmentShader.slice(s-1,-1)+"\tgl_FragColor.rgb = (\n\t\t\t  texture2D(previousShadowMap, vUv + vec2( pixelOffset,  0.0        )).rgb +\n\t\t\t  texture2D(previousShadowMap, vUv + vec2( 0.0        ,  pixelOffset)).rgb +\n\t\t\t  texture2D(previousShadowMap, vUv + vec2( 0.0        , -pixelOffset)).rgb +\n\t\t\t  texture2D(previousShadowMap, vUv + vec2(-pixelOffset,  0.0        )).rgb +\n\t\t\t  texture2D(previousShadowMap, vUv + vec2( pixelOffset,  pixelOffset)).rgb +\n\t\t\t  texture2D(previousShadowMap, vUv + vec2(-pixelOffset,  pixelOffset)).rgb +\n\t\t\t  texture2D(previousShadowMap, vUv + vec2( pixelOffset, -pixelOffset)).rgb +\n\t\t\t  texture2D(previousShadowMap, vUv + vec2(-pixelOffset, -pixelOffset)).rgb)/8.0;\n\t\t}",e.uniforms.previousShadowMap={value:i.texture},e.uniforms.pixelOffset={value:.5/t},a.uniforms=e.uniforms,a.userData.shader=e,r.compiled=!0},this.blurringPlane=new e.Mesh(new e.PlaneBufferGeometry(1,1),a),this.blurringPlane.name="Blurring Plane",this.blurringPlane.frustumCulled=!1,this.blurringPlane.renderOrder=0,this.blurringPlane.material.depthWrite=!1,this.scene.add(this.blurringPlane)},t}();exports.ProgressiveLightMap=r;
