"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three"),t=function(){var t=/^[og]\s*(.+)?/,r=/^mtllib /,s=/^usemtl /,i=/^usemap /,a=new e.Vector3,o=new e.Vector3,n=new e.Vector3,l=new e.Vector3,h=new e.Vector3;function c(){var e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=!1!==t);var r=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:!1!==t,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(e,t){var r=this._finalize(!1);r&&(r.inherited||r.groupCount<=0)&&this.materials.splice(r.index,1);var s={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==r?r.smooth:this.smooth,groupStart:void 0!==r?r.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){var t={index:"number"==typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(s),s},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){var t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(var r=this.materials.length-1;r>=0;r--)this.materials[r].groupCount<=0&&this.materials.splice(r,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}},r&&r.name&&"function"==typeof r.clone){var s=r.clone(0);s.inherited=!0,this.object.materials.push(s)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){var r=parseInt(e,10);return 3*(r>=0?r-1:r+t/3)},parseNormalIndex:function(e,t){var r=parseInt(e,10);return 3*(r>=0?r-1:r+t/3)},parseUVIndex:function(e,t){var r=parseInt(e,10);return 2*(r>=0?r-1:r+t/2)},addVertex:function(e,t,r){var s=this.vertices,i=this.object.geometry.vertices;i.push(s[e+0],s[e+1],s[e+2]),i.push(s[t+0],s[t+1],s[t+2]),i.push(s[r+0],s[r+1],s[r+2])},addVertexPoint:function(e){var t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){var t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,r){var s=this.normals,i=this.object.geometry.normals;i.push(s[e+0],s[e+1],s[e+2]),i.push(s[t+0],s[t+1],s[t+2]),i.push(s[r+0],s[r+1],s[r+2])},addFaceNormal:function(e,t,r){var s=this.vertices,i=this.object.geometry.normals;a.fromArray(s,e),o.fromArray(s,t),n.fromArray(s,r),h.subVectors(n,o),l.subVectors(a,o),h.cross(l),h.normalize(),i.push(h.x,h.y,h.z),i.push(h.x,h.y,h.z),i.push(h.x,h.y,h.z)},addColor:function(e,t,r){var s=this.colors,i=this.object.geometry.colors;void 0!==s[e]&&i.push(s[e+0],s[e+1],s[e+2]),void 0!==s[t]&&i.push(s[t+0],s[t+1],s[t+2]),void 0!==s[r]&&i.push(s[r+0],s[r+1],s[r+2])},addUV:function(e,t,r){var s=this.uvs,i=this.object.geometry.uvs;i.push(s[e+0],s[e+1]),i.push(s[t+0],s[t+1]),i.push(s[r+0],s[r+1])},addDefaultUV:function(){var e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){var t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,r,s,i,a,o,n,l){var h=this.vertices.length,c=this.parseVertexIndex(e,h),u=this.parseVertexIndex(t,h),p=this.parseVertexIndex(r,h);if(this.addVertex(c,u,p),this.addColor(c,u,p),void 0!==o&&""!==o){var d=this.normals.length;c=this.parseNormalIndex(o,d),u=this.parseNormalIndex(n,d),p=this.parseNormalIndex(l,d),this.addNormal(c,u,p)}else this.addFaceNormal(c,u,p);if(void 0!==s&&""!==s){var m=this.uvs.length;c=this.parseUVIndex(s,m),u=this.parseUVIndex(i,m),p=this.parseUVIndex(a,m),this.addUV(c,u,p),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";for(var t=this.vertices.length,r=0,s=e.length;r<s;r++){var i=this.parseVertexIndex(e[r],t);this.addVertexPoint(i),this.addColor(i)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";for(var r=this.vertices.length,s=this.uvs.length,i=0,a=e.length;i<a;i++)this.addVertexLine(this.parseVertexIndex(e[i],r));for(var o=0,n=t.length;o<n;o++)this.addUVLine(this.parseUVIndex(t[o],s))}};return e.startObject("",!1),e}function u(t){e.Loader.call(this,t),this.materials=null}return u.prototype=Object.assign(Object.create(e.Loader.prototype),{constructor:u,load:function(t,r,s,i){var a=this,o=new e.FileLoader(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,(function(e){try{r(a.parse(e))}catch(e){i?i(e):console.error(e),a.manager.itemError(t)}}),s,i)},setMaterials:function(e){return this.materials=e,this},parse:function(a){var o=new c;-1!==a.indexOf("\r\n")&&(a=a.replace(/\r\n/g,"\n")),-1!==a.indexOf("\\\n")&&(a=a.replace(/\\\n/g,""));for(var n=a.split("\n"),l="",h="",u=[],p="function"==typeof"".trimLeft,d=0,m=n.length;d<m;d++)if(l=n[d],0!==(l=p?l.trimLeft():l.trim()).length&&"#"!==(h=l.charAt(0)))if("v"===h){var f=l.split(/\s+/);switch(f[0]){case"v":o.vertices.push(parseFloat(f[1]),parseFloat(f[2]),parseFloat(f[3])),f.length>=7?o.colors.push(parseFloat(f[4]),parseFloat(f[5]),parseFloat(f[6])):o.colors.push(void 0,void 0,void 0);break;case"vn":o.normals.push(parseFloat(f[1]),parseFloat(f[2]),parseFloat(f[3]));break;case"vt":o.uvs.push(parseFloat(f[1]),parseFloat(f[2]))}}else if("f"===h){for(var v=l.substr(1).trim().split(/\s+/),g=[],b=0,y=v.length;b<y;b++){var j=v[b];if(j.length>0){var x=j.split("/");g.push(x)}}for(var w=g[0],V=1,L=g.length-1;V<L;V++){var M=g[V],F=g[V+1];o.addFace(w[0],M[0],F[0],w[1],M[1],F[1],w[2],M[2],F[2])}}else if("l"===h){var A=l.substring(1).trim().split(" "),I=[],z=[];if(-1===l.indexOf("/"))I=A;else for(var P=0,U=A.length;P<U;P++){var B=A[P].split("/");""!==B[0]&&I.push(B[0]),""!==B[1]&&z.push(B[1])}o.addLineGeometry(I,z)}else if("p"===h){var C=l.substr(1).trim().split(" ");o.addPointGeometry(C)}else if(null!==(u=t.exec(l))){var O=(" "+u[0].substr(1).trim()).substr(1);o.startObject(O)}else if(s.test(l))o.object.startMaterial(l.substring(7).trim(),o.materialLibraries);else if(r.test(l))o.materialLibraries.push(l.substring(7).trim());else if(i.test(l))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===h){if((u=l.split(" ")).length>1){var E=u[1].trim().toLowerCase();o.object.smooth="0"!==E&&"off"!==E}else o.object.smooth=!0;(X=o.object.currentMaterial())&&(X.smooth=o.object.smooth)}else{if("\0"===l)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+l+'"')}o.finalize();var _=new e.Group;if(_.materialLibraries=[].concat(o.materialLibraries),!0===!(1===o.objects.length&&0===o.objects[0].geometry.vertices.length))for(var G=0,N=o.objects.length;G<N;G++){var S=o.objects[G],D=S.geometry,H=S.materials,R="Line"===D.type,T="Points"===D.type,q=!1;if(0!==D.vertices.length){(re=new e.BufferGeometry).setAttribute("position",new e.Float32BufferAttribute(D.vertices,3)),D.normals.length>0&&re.setAttribute("normal",new e.Float32BufferAttribute(D.normals,3)),D.colors.length>0&&(q=!0,re.setAttribute("color",new e.Float32BufferAttribute(D.colors,3))),!0===D.hasUVIndices&&re.setAttribute("uv",new e.Float32BufferAttribute(D.uvs,2));for(var J,k=[],W=0,K=H.length;W<K;W++){var Q=(te=H[W]).name+"_"+te.smooth+"_"+q,X=o.materials[Q];if(null!==this.materials)if(X=this.materials.create(te.name),!R||!X||X instanceof e.LineBasicMaterial){if(T&&X&&!(X instanceof e.PointsMaterial)){var Y=new e.PointsMaterial({size:10,sizeAttenuation:!1});e.Material.prototype.copy.call(Y,X),Y.color.copy(X.color),Y.map=X.map,X=Y}}else{var Z=new e.LineBasicMaterial;e.Material.prototype.copy.call(Z,X),Z.color.copy(X.color),X=Z}void 0===X&&((X=R?new e.LineBasicMaterial:T?new e.PointsMaterial({size:1,sizeAttenuation:!1}):new e.MeshPhongMaterial).name=te.name,X.flatShading=!te.smooth,X.vertexColors=q,o.materials[Q]=X),k.push(X)}if(k.length>1){for(var $=0,ee=H.length;$<ee;$++){var te=H[$];re.addGroup(te.groupStart,te.groupCount,$)}J=R?new e.LineSegments(re,k):T?new e.Points(re,k):new e.Mesh(re,k)}else J=R?new e.LineSegments(re,k[0]):T?new e.Points(re,k[0]):new e.Mesh(re,k[0]);J.name=S.name,_.add(J)}}else if(o.vertices.length>0){var re;X=new e.PointsMaterial({size:1,sizeAttenuation:!1});(re=new e.BufferGeometry).setAttribute("position",new e.Float32BufferAttribute(o.vertices,3)),o.colors.length>0&&void 0!==o.colors[0]&&(re.setAttribute("color",new e.Float32BufferAttribute(o.colors,3)),X.vertexColors=!0);var se=new e.Points(re,X);_.add(se)}return _}}),u}();exports.OBJLoader=t;
