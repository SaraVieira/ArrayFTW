"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three"),r=require("../materials/NodeMaterial.cjs.js"),t=require("../inputs/ScreenNode.cjs.js");function s(s,i){if(void 0===i){var o={minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBAFormat},u=s.getDrawingBufferSize(new e.Vector2);i=new e.WebGLRenderTarget(u.width,u.height,o)}this.renderer=s,this.renderTarget=i,this.output=new t.ScreenNode,this.material=new r.NodeMaterial,this.camera=new e.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new e.Scene,this.quad=new e.Mesh(new e.PlaneGeometry(2,2),this.material),this.quad.frustumCulled=!1,this.scene.add(this.quad),this.needsUpdate=!0}require("../core/NodeBuilder.cjs.js"),require("../core/NodeUniform.cjs.js"),require("../core/NodeUtils.cjs.js"),require("../core/NodeLib.cjs.js"),require("../core/FunctionNode.cjs.js"),require("../core/TempNode.cjs.js"),require("../core/Node.cjs.js"),require("../core/ConstNode.cjs.js"),require("../core/StructNode.cjs.js"),require("../inputs/Vector2Node.cjs.js"),require("../core/InputNode.cjs.js"),require("../inputs/Vector3Node.cjs.js"),require("../inputs/Vector4Node.cjs.js"),require("../inputs/TextureNode.cjs.js"),require("../accessors/UVNode.cjs.js"),require("../utils/ColorSpaceNode.cjs.js"),require("../inputs/FloatNode.cjs.js"),require("../core/ExpressionNode.cjs.js"),require("../inputs/CubeTextureNode.cjs.js"),require("../accessors/ReflectNode.cjs.js"),require("../accessors/PositionNode.cjs.js"),require("../accessors/NormalNode.cjs.js"),require("../misc/TextureCubeNode.cjs.js"),require("../misc/TextureCubeUVNode.cjs.js"),require("../core/FunctionCallNode.cjs.js"),require("../math/OperatorNode.cjs.js"),require("../math/MathNode.cjs.js"),require("../inputs/ColorNode.cjs.js"),require("../materials/nodes/RawNode.cjs.js"),s.prototype={constructor:s,render:function(e,r,t){this.needsUpdate&&(this.material.dispose(),this.material.fragment.value=this.output,this.material.build(),this.material.uniforms.renderTexture&&(this.material.uniforms.renderTexture.value=this.renderTarget.texture),this.needsUpdate=!1),t.setRenderer(this.renderer).setRenderTexture(this.renderTarget.texture),this.renderer.setRenderTarget(this.renderTarget),this.renderer.render(e,r),t.updateNode(this.material),this.renderer.setRenderTarget(null),this.renderer.render(this.scene,this.camera)},setPixelRatio:function(r){this.renderer.setPixelRatio(r);var t=this.renderer.getSize(new e.Vector2);this.setSize(t.width,t.height)},setSize:function(e,r){var t=this.renderer.getPixelRatio();this.renderTarget.setSize(e*t,r*t),this.renderer.setSize(e,r)},copy:function(e){return this.output=e.output,this},toJSON:function(e){if((void 0===e||"string"==typeof e)&&(e={nodes:{}}),e&&!e.post&&(e.post={}),!e.post[this.uuid]){var r={};r.uuid=this.uuid,r.type="NodePostProcessing",e.post[this.uuid]=r,""!==this.name&&(r.name=this.name),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.output=this.output.toJSON(e).uuid}return e.post=this.uuid,e}},exports.NodePostProcessing=s;
