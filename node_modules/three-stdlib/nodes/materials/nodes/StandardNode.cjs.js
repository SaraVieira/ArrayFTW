"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three"),i=require("../../core/Node.cjs.js"),t=require("../../core/ExpressionNode.cjs.js"),s=require("../../inputs/ColorNode.cjs.js"),a=require("../../inputs/FloatNode.cjs.js"),o=require("../../utils/SpecularMIPLevelNode.cjs.js");function r(){i.Node.call(this),this.color=new s.ColorNode(16777215),this.roughness=new a.FloatNode(1),this.metalness=new a.FloatNode(0)}require("../../core/FunctionNode.cjs.js"),require("../../core/TempNode.cjs.js"),require("../../core/NodeLib.cjs.js"),require("../../core/InputNode.cjs.js"),require("../../core/NodeUtils.cjs.js"),require("../../utils/MaxMIPLevelNode.cjs.js"),r.prototype=Object.create(i.Node.prototype),r.prototype.constructor=r,r.prototype.nodeType="Standard",r.prototype.build=function(i){var s;i.define("STANDARD");var a=this.clearcoat||this.clearcoatRoughness||this.clearCoatNormal;if(a&&i.define("CLEARCOAT"),i.requires.lights=!0,i.extensions.derivatives=!0,i.extensions.shaderTextureLOD=!0,i.isShader("vertex")){var r=this.position?this.position.analyzeAndFlow(i,"v3",{cache:"position"}):void 0;i.mergeUniform(e.UniformsUtils.merge([e.UniformsLib.fog,e.UniformsLib.lights])),e.UniformsLib.LTC_1&&(i.uniforms.ltc_1={value:void 0},i.uniforms.ltc_2={value:void 0}),i.addParsCode(["varying vec3 vViewPosition;","#ifndef FLAT_SHADED","\tvarying vec3 vNormal;","#endif","#include <fog_pars_vertex>","#include <morphtarget_pars_vertex>","#include <skinning_pars_vertex>","#include <shadowmap_pars_vertex>","#include <logdepthbuf_pars_vertex>","#include <clipping_planes_pars_vertex>"].join("\n"));var l=["#include <beginnormal_vertex>","#include <morphnormal_vertex>","#include <skinbase_vertex>","#include <skinnormal_vertex>","#include <defaultnormal_vertex>","#ifndef FLAT_SHADED","\tvNormal = normalize( transformedNormal );","#endif","#include <begin_vertex>"];r&&l.push(r.code,r.result?"transformed = "+r.result+";":""),l.push("#include <morphtarget_vertex>","#include <skinning_vertex>","#include <project_vertex>","#include <fog_vertex>","#include <logdepthbuf_vertex>","#include <clipping_planes_vertex>","\tvViewPosition = - mvPosition.xyz;","#include <worldpos_vertex>","#include <shadowmap_vertex>"),s=l.join("\n")}else{var n=new t.ExpressionNode("material.specularRoughness","f"),c=new t.ExpressionNode("material.clearcoatRoughness","f"),h={roughness:n,bias:new o.SpecularMIPLevelNode(n),viewNormal:new t.ExpressionNode("normal","v3"),worldNormal:new t.ExpressionNode("inverseTransformDirection( geometry.normal, viewMatrix )","v3"),gamma:!0},u={gamma:!0},d={roughness:c,bias:new o.SpecularMIPLevelNode(c),viewNormal:new t.ExpressionNode("clearcoatNormal","v3"),worldNormal:new t.ExpressionNode("inverseTransformDirection( geometry.clearcoatNormal, viewMatrix )","v3"),gamma:!0};this.mask&&this.mask.analyze(i),this.color.analyze(i,{slot:"color",context:u}),this.roughness.analyze(i),this.metalness.analyze(i),this.alpha&&this.alpha.analyze(i),this.normal&&this.normal.analyze(i),this.clearcoat&&this.clearcoat.analyze(i),this.clearcoatRoughness&&this.clearcoatRoughness.analyze(i),this.clearcoatNormal&&this.clearcoatNormal.analyze(i),this.reflectivity&&this.reflectivity.analyze(i),this.light&&this.light.analyze(i,{cache:"light"}),this.ao&&this.ao.analyze(i),this.ambient&&this.ambient.analyze(i),this.shadow&&this.shadow.analyze(i),this.emissive&&this.emissive.analyze(i,{slot:"emissive"}),this.environment&&(this.environment.analyze(i,{cache:"radiance",context:h,slot:"radiance"}),i.requires.irradiance&&this.environment.analyze(i,{cache:"irradiance",context:h,slot:"irradiance"})),this.sheen&&this.sheen.analyze(i);var m,f=this.mask?this.mask.flow(i,"b"):void 0,g=this.color.flow(i,"c",{slot:"color",context:u}),p=this.roughness.flow(i,"f"),v=this.metalness.flow(i,"f"),N=this.alpha?this.alpha.flow(i,"f"):void 0,_=this.normal?this.normal.flow(i,"v3"):void 0,y=this.clearcoat?this.clearcoat.flow(i,"f"):void 0,x=(c=this.clearcoatRoughness?this.clearcoatRoughness.flow(i,"f"):void 0,this.clearcoatNormal?this.clearcoatNormal.flow(i,"v3"):void 0),w=this.reflectivity?this.reflectivity.flow(i,"f"):void 0,S=this.light?this.light.flow(i,"v3",{cache:"light"}):void 0,L=this.ao?this.ao.flow(i,"f"):void 0,b=this.ambient?this.ambient.flow(i,"c"):void 0,R=this.shadow?this.shadow.flow(i,"c"):void 0,j=this.emissive?this.emissive.flow(i,"c",{slot:"emissive"}):void 0;this.environment&&(m={radiance:this.environment.flow(i,"c",{cache:"radiance",context:h,slot:"radiance"})},i.requires.irradiance&&(m.irradiance=this.environment.flow(i,"c",{cache:"irradiance",context:h,slot:"irradiance"})));var C=a&&m?this.environment.flow(i,"c",{cache:"clearcoat",context:d,slot:"environment"}):void 0,O=this.sheen?this.sheen.flow(i,"c"):void 0;i.requires.transparent=void 0!==N,i.addParsCode(["varying vec3 vViewPosition;","#ifndef FLAT_SHADED","\tvarying vec3 vNormal;","#endif","#include <dithering_pars_fragment>","#include <fog_pars_fragment>","#include <bsdfs>","#include <lights_pars_begin>","#include <lights_physical_pars_fragment>","#include <shadowmap_pars_fragment>","#include <logdepthbuf_pars_fragment>"].join("\n"));l=["#include <clipping_planes_fragment>","\t#include <normal_fragment_begin>","\t#include <clearcoat_normal_fragment_begin>","\tPhysicalMaterial material;","\tmaterial.diffuseColor = vec3( 1.0 );"];f&&l.push(f.code,"if ( ! "+f.result+" ) discard;"),l.push(g.code,"\tvec3 diffuseColor = "+g.result+";","\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","#include <logdepthbuf_fragment>",p.code,"\tfloat roughnessFactor = "+p.result+";",v.code,"\tfloat metalnessFactor = "+v.result+";"),N&&l.push(N.code,"#ifdef ALPHATEST","\tif ( "+N.result+" <= ALPHATEST ) discard;","#endif"),_&&l.push(_.code,"normal = "+_.result+";"),x&&l.push(x.code,"clearcoatNormal = "+x.result+";"),l.push("vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );","float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );"),l.push("material.diffuseColor = "+(S?"vec3( 1.0 )":"diffuseColor * ( 1.0 - metalnessFactor )")+";","material.specularRoughness = max( roughnessFactor, 0.0525 );","material.specularRoughness += geometryRoughness;","material.specularRoughness = min( material.specularRoughness, 1.0 );","material.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );"),y?l.push(y.code,"material.clearcoat = saturate( "+y.result+" );"):a&&l.push("material.clearcoat = 0.0;"),c?l.push(c.code,"material.clearcoatRoughness = max( "+c.result+", 0.0525 );","material.clearcoatRoughness += geometryRoughness;","material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );"):a&&l.push("material.clearcoatRoughness = 0.0;"),O&&l.push("material.sheenColor = "+O.result+";"),w?l.push(w.code,"material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( "+w.result+" ) ), diffuseColor, metalnessFactor );"):l.push("material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor, metalnessFactor );"),l.push("#include <lights_fragment_begin>"),S&&(l.push(S.code,"reflectedLight.directDiffuse = "+S.result+";"),l.push("diffuseColor *= 1.0 - metalnessFactor;","reflectedLight.directDiffuse *= diffuseColor;","reflectedLight.indirectDiffuse *= diffuseColor;")),L&&l.push(L.code,"reflectedLight.indirectDiffuse *= "+L.result+";","float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );","reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, "+L.result+", material.specularRoughness );"),b&&l.push(b.code,"reflectedLight.indirectDiffuse += "+b.result+";"),R&&l.push(R.code,"reflectedLight.directDiffuse *= "+R.result+";","reflectedLight.directSpecular *= "+R.result+";"),j&&l.push(j.code,"reflectedLight.directDiffuse += "+j.result+";"),m&&(l.push(m.radiance.code),i.requires.irradiance&&l.push(m.irradiance.code),C&&l.push(C.code,"clearcoatRadiance += "+C.result+";"),l.push("radiance += "+m.radiance.result+";"),i.requires.irradiance&&l.push("iblIrradiance += PI * "+m.irradiance.result+";")),l.push("#include <lights_fragment_end>"),l.push("vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular;"),N?l.push("gl_FragColor = vec4( outgoingLight, "+N.result+" );"):l.push("gl_FragColor = vec4( outgoingLight, 1.0 );"),l.push("#include <tonemapping_fragment>","#include <encodings_fragment>","#include <fog_fragment>","#include <premultiplied_alpha_fragment>","#include <dithering_fragment>"),s=l.join("\n")}return s},r.prototype.copy=function(e){return i.Node.prototype.copy.call(this,e),e.position&&(this.position=e.position),this.color=e.color,this.roughness=e.roughness,this.metalness=e.metalness,e.mask&&(this.mask=e.mask),e.alpha&&(this.alpha=e.alpha),e.normal&&(this.normal=e.normal),e.clearcoat&&(this.clearcoat=e.clearcoat),e.clearcoatRoughness&&(this.clearcoatRoughness=e.clearcoatRoughness),e.clearcoatNormal&&(this.clearcoatNormal=e.clearcoatNormal),e.reflectivity&&(this.reflectivity=e.reflectivity),e.light&&(this.light=e.light),e.shadow&&(this.shadow=e.shadow),e.ao&&(this.ao=e.ao),e.emissive&&(this.emissive=e.emissive),e.ambient&&(this.ambient=e.ambient),e.environment&&(this.environment=e.environment),e.sheen&&(this.sheen=e.sheen),this},r.prototype.toJSON=function(e){var i=this.getJSONNode(e);return i||(i=this.createJSONNode(e),this.position&&(i.position=this.position.toJSON(e).uuid),i.color=this.color.toJSON(e).uuid,i.roughness=this.roughness.toJSON(e).uuid,i.metalness=this.metalness.toJSON(e).uuid,this.mask&&(i.mask=this.mask.toJSON(e).uuid),this.alpha&&(i.alpha=this.alpha.toJSON(e).uuid),this.normal&&(i.normal=this.normal.toJSON(e).uuid),this.clearcoat&&(i.clearcoat=this.clearcoat.toJSON(e).uuid),this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness.toJSON(e).uuid),this.clearcoatNormal&&(i.clearcoatNormal=this.clearcoatNormal.toJSON(e).uuid),this.reflectivity&&(i.reflectivity=this.reflectivity.toJSON(e).uuid),this.light&&(i.light=this.light.toJSON(e).uuid),this.shadow&&(i.shadow=this.shadow.toJSON(e).uuid),this.ao&&(i.ao=this.ao.toJSON(e).uuid),this.emissive&&(i.emissive=this.emissive.toJSON(e).uuid),this.ambient&&(i.ambient=this.ambient.toJSON(e).uuid),this.environment&&(i.environment=this.environment.toJSON(e).uuid),this.sheen&&(i.sheen=this.sheen.toJSON(e).uuid)),i},exports.StandardNode=r;
