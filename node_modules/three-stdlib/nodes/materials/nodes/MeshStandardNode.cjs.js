"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three"),r=require("./StandardNode.cjs.js"),o=require("../../inputs/PropertyNode.cjs.js"),s=require("../../math/OperatorNode.cjs.js"),t=require("../../utils/SwitchNode.cjs.js"),i=require("../../misc/NormalMapNode.cjs.js");function n(){r.StandardNode.call(this),this.properties={color:new e.Color(16777215),roughness:.5,metalness:.5,normalScale:new e.Vector2(1,1)},this.inputs={color:new o.PropertyNode(this.properties,"color","c"),roughness:new o.PropertyNode(this.properties,"roughness","f"),metalness:new o.PropertyNode(this.properties,"metalness","f"),normalScale:new o.PropertyNode(this.properties,"normalScale","v2")}}require("../../core/Node.cjs.js"),require("../../core/ExpressionNode.cjs.js"),require("../../core/FunctionNode.cjs.js"),require("../../core/TempNode.cjs.js"),require("../../core/NodeLib.cjs.js"),require("../../inputs/ColorNode.cjs.js"),require("../../core/InputNode.cjs.js"),require("../../core/NodeUtils.cjs.js"),require("../../inputs/FloatNode.cjs.js"),require("../../utils/SpecularMIPLevelNode.cjs.js"),require("../../utils/MaxMIPLevelNode.cjs.js"),require("../../inputs/Vector2Node.cjs.js"),require("../../accessors/UVNode.cjs.js"),require("../../accessors/NormalNode.cjs.js"),require("../../accessors/PositionNode.cjs.js"),n.prototype=Object.create(r.StandardNode.prototype),n.prototype.constructor=n,n.prototype.nodeType="MeshStandard",n.prototype.build=function(e){var o=this.properties,n=this.inputs;if(e.isShader("fragment")){var a=e.findNode(o.color,n.color),c=e.resolve(o.map);this.color=c?new s.OperatorNode(a,c,s.OperatorNode.MUL):a;var d=e.findNode(o.roughness,n.roughness),p=e.resolve(o.roughnessMap);this.roughness=p?new s.OperatorNode(d,new t.SwitchNode(p,"g"),s.OperatorNode.MUL):d;var l=e.findNode(o.metalness,n.metalness),u=e.resolve(o.metalnessMap);this.metalness=u?new s.OperatorNode(l,new t.SwitchNode(u,"b"),s.OperatorNode.MUL):l,o.normalMap?(this.normal=new i.NormalMapNode(e.resolve(o.normalMap)),this.normal.scale=e.findNode(o.normalScale,n.normalScale)):this.normal=void 0,this.environment=e.resolve(o.envMap)}return r.StandardNode.prototype.build.call(this,e)},n.prototype.toJSON=function(e){var r=this.getJSONNode(e);return r||(r=this.createJSONNode(e),console.warn(".toJSON not implemented in",this)),r},exports.MeshStandardNode=n;
