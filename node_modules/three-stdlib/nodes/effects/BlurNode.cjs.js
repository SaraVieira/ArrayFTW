"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three"),t=require("../core/TempNode.cjs.js"),u=require("../core/FunctionNode.cjs.js"),s=require("../inputs/FloatNode.cjs.js"),r=require("../inputs/Vector2Node.cjs.js"),i=require("../accessors/UVNode.cjs.js");function v(e,u,v,o){t.TempNode.call(this,"v4"),this.value=e,this.uv=u||new i.UVNode,this.radius=v||new r.Vector2Node(1,1),this.size=o,this.blurX=!0,this.blurY=!0,this.horizontal=new s.FloatNode(1/64),this.vertical=new s.FloatNode(1/64)}require("../core/Node.cjs.js"),require("../core/NodeLib.cjs.js"),require("../core/InputNode.cjs.js"),require("../core/NodeUtils.cjs.js"),v.Nodes={blurX:new u.FunctionNode(["vec4 blurX( sampler2D tex, vec2 uv, float s ) {","\tvec4 sum = vec4( 0.0 );","\tsum += texture2D( tex, vec2( uv.x - 4.0 * s, uv.y ) ) * 0.051;","\tsum += texture2D( tex, vec2( uv.x - 3.0 * s, uv.y ) ) * 0.0918;","\tsum += texture2D( tex, vec2( uv.x - 2.0 * s, uv.y ) ) * 0.12245;","\tsum += texture2D( tex, vec2( uv.x - 1.0 * s, uv.y ) ) * 0.1531;","\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;","\tsum += texture2D( tex, vec2( uv.x + 1.0 * s, uv.y ) ) * 0.1531;","\tsum += texture2D( tex, vec2( uv.x + 2.0 * s, uv.y ) ) * 0.12245;","\tsum += texture2D( tex, vec2( uv.x + 3.0 * s, uv.y ) ) * 0.0918;","\tsum += texture2D( tex, vec2( uv.x + 4.0 * s, uv.y ) ) * 0.051;","\treturn sum * .667;","}"].join("\n")),blurY:new u.FunctionNode(["vec4 blurY( sampler2D tex, vec2 uv, float s ) {","\tvec4 sum = vec4( 0.0 );","\tsum += texture2D( tex, vec2( uv.x, uv.y - 4.0 * s ) ) * 0.051;","\tsum += texture2D( tex, vec2( uv.x, uv.y - 3.0 * s ) ) * 0.0918;","\tsum += texture2D( tex, vec2( uv.x, uv.y - 2.0 * s ) ) * 0.12245;","\tsum += texture2D( tex, vec2( uv.x, uv.y - 1.0 * s ) ) * 0.1531;","\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;","\tsum += texture2D( tex, vec2( uv.x, uv.y + 1.0 * s ) ) * 0.1531;","\tsum += texture2D( tex, vec2( uv.x, uv.y + 2.0 * s ) ) * 0.12245;","\tsum += texture2D( tex, vec2( uv.x, uv.y + 3.0 * s ) ) * 0.0918;","\tsum += texture2D( tex, vec2( uv.x, uv.y + 4.0 * s ) ) * 0.051;","\treturn sum * .667;","}"].join("\n"))},v.prototype=Object.create(t.TempNode.prototype),v.prototype.constructor=v,v.prototype.nodeType="Blur",v.prototype.hashProperties=["blurX","blurY"],v.prototype.updateFrame=function(){if(this.size)this.horizontal.value=this.radius.x/this.size.x,this.vertical.value=this.radius.y/this.size.y;else if(this.value.value&&this.value.value.image){var e=this.value.value.image;this.horizontal.value=this.radius.x/e.width,this.vertical.value=this.radius.y/e.height}},v.prototype.generate=function(e,t){if(e.isShader("fragment")){var u,s=[],r=e.include(v.Nodes.blurX),i=e.include(v.Nodes.blurY);return this.blurX&&s.push(r+"( "+this.value.build(e,"sampler2D")+", "+this.uv.build(e,"v2")+", "+this.horizontal.build(e,"f")+" )"),this.blurY&&s.push(i+"( "+this.value.build(e,"sampler2D")+", "+this.uv.build(e,"v2")+", "+this.vertical.build(e,"f")+" )"),u=2==s.length?"( "+s.join(" + ")+" / 2.0 )":s.length?"( "+s[0]+" )":"vec4( 0.0 )",e.format(u,this.getType(e),t)}return console.warn("THREE.BlurNode is not compatible with "+e.shader+" shader."),e.format("vec4( 0.0 )",this.getType(e),t)},v.prototype.copy=function(u){return t.TempNode.prototype.copy.call(this,u),this.value=u.value,this.uv=u.uv,this.radius=u.radius,void 0!==u.size&&(this.size=new e.Vector2(u.size.x,u.size.y)),this.blurX=u.blurX,this.blurY=u.blurY,this},v.prototype.toJSON=function(e){var t=this.getJSONNode(e);return t||((t=this.createJSONNode(e)).value=this.value.toJSON(e).uuid,t.uv=this.uv.toJSON(e).uuid,t.radius=this.radius.toJSON(e).uuid,this.size&&(t.size={x:this.size.x,y:this.size.y}),t.blurX=this.blurX,t.blurY=this.blurY),t},exports.BlurNode=v;
