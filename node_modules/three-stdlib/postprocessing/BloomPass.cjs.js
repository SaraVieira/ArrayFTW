"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three"),r=require("./Pass.cjs.js"),t=require("../shaders/CopyShader.cjs.js"),o=require("../shaders/ConvolutionShader.cjs.js");require("@babel/runtime/helpers/createClass"),require("@babel/runtime/helpers/defineProperty");var i=function i(n,s,a,l){n=void 0!==n?n:1,s=void 0!==s?s:25,a=void 0!==a?a:4,l=void 0!==l?l:256;var u={minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBAFormat};this.renderTargetX=new e.WebGLRenderTarget(l,l,u),this.renderTargetX.texture.name="BloomPass.x",this.renderTargetY=new e.WebGLRenderTarget(l,l,u),this.renderTargetY.texture.name="BloomPass.y",void 0===t.CopyShader&&console.error("THREE.BloomPass relies on CopyShader");var d=t.CopyShader;this.copyUniforms=e.UniformsUtils.clone(d.uniforms),this.copyUniforms.opacity.value=n,this.materialCopy=new e.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,blending:e.AdditiveBlending,transparent:!0}),void 0===o.ConvolutionShader&&console.error("THREE.BloomPass relies on ConvolutionShader");var h=o.ConvolutionShader;this.convolutionUniforms=e.UniformsUtils.clone(h.uniforms),this.convolutionUniforms.uImageIncrement.value=i.blurX,this.convolutionUniforms.cKernel.value=o.ConvolutionShader.buildKernel(a),this.materialConvolution=new e.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,defines:{KERNEL_SIZE_FLOAT:s.toFixed(1),KERNEL_SIZE_INT:s.toFixed(0)}}),this.needsSwap=!1,this.fsQuad=new r.FullScreenQuad(null)};i.prototype=Object.assign(Object.create(r.Pass.prototype),{constructor:i,render:function(e,r,t,o,n){n&&e.state.buffers.stencil.setTest(!1),this.fsQuad.material=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=t.texture,this.convolutionUniforms.uImageIncrement.value=i.blurX,e.setRenderTarget(this.renderTargetX),e.clear(),this.fsQuad.render(e),this.convolutionUniforms.tDiffuse.value=this.renderTargetX.texture,this.convolutionUniforms.uImageIncrement.value=i.blurY,e.setRenderTarget(this.renderTargetY),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetY.texture,n&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(t),this.clear&&e.clear(),this.fsQuad.render(e)}}),i.blurX=new e.Vector2(.001953125,0),i.blurY=new e.Vector2(0,.001953125),exports.BloomPass=i;
