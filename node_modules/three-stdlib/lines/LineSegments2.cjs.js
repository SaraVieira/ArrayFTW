"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("@babel/runtime/helpers/assertThisInitialized"),e=require("@babel/runtime/helpers/inheritsLoose"),r=require("@babel/runtime/helpers/defineProperty"),a=require("three"),n=require("./LineSegmentsGeometry.cjs.js"),i=require("./LineMaterial.cjs.js");function s(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var l=s(t),d=s(e),u=s(r),o=function(t){function e(e,r){var s;return void 0===e&&(e=new n.LineSegmentsGeometry),void 0===r&&(r=new i.LineMaterial({color:16777215*Math.random()})),s=t.call(this,e,r)||this,u.default(l.default(s),"type","LineSegments2"),u.default(l.default(s),"isLineSegments2",!0),u.default(l.default(s),"distStart",new a.Vector3),u.default(l.default(s),"distEnd",new a.Vector3),u.default(l.default(s),"computeLineDistances",(function(){for(var t=s.geometry,e=t.attributes.instanceStart,r=t.attributes.instanceEnd,n=new Float32Array(2*e.data.count),i=0,d=0,u=e.data.count;i<u;i++,d+=2)s.distStart.fromBufferAttribute(e,i),s.distEnd.fromBufferAttribute(r,i),n[d]=0===d?0:n[d-1],n[d+1]=n[d]+s.distStart.distanceTo(s.distEnd);var o=new a.InstancedInterleavedBuffer(n,2,1);return t.setAttribute("instanceDistanceStart",new a.InterleavedBufferAttribute(o,1,0)),t.setAttribute("instanceDistanceEnd",new a.InterleavedBufferAttribute(o,1,1)),l.default(s)})),u.default(l.default(s),"rayStart",new a.Vector4),u.default(l.default(s),"rayEnd",new a.Vector4),u.default(l.default(s),"ssOrigin",new a.Vector4),u.default(l.default(s),"ssOrigin3",new a.Vector3),u.default(l.default(s),"mvMatrix",new a.Matrix4),u.default(l.default(s),"line",new a.Line3),u.default(l.default(s),"closestPoint",new a.Vector3),u.default(l.default(s),"raycast",(function(t,e){null===t.camera&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2.');var r=t.ray,n=t.camera,i=n.projectionMatrix,d=s.geometry,u=s.material,o=u.resolution,y=u.linewidth+0,f=d.attributes.instanceStart,c=d.attributes.instanceEnd,m=-n.near;r.at(1,new a.Vector3(s.ssOrigin.x,s.ssOrigin.y,s.ssOrigin.z)),s.ssOrigin.w=1,s.ssOrigin.applyMatrix4(n.matrixWorldInverse),s.ssOrigin.applyMatrix4(i),s.ssOrigin.multiplyScalar(1/s.ssOrigin.w),s.ssOrigin.x*=o.x/2,s.ssOrigin.y*=o.y/2,s.ssOrigin.z=0,s.ssOrigin3.set(s.ssOrigin.x,s.ssOrigin.y,s.ssOrigin.z);var S=s.matrixWorld;s.mvMatrix.multiplyMatrices(n.matrixWorldInverse,S);for(var p=0,g=f.count;p<g;p++){if(s.rayStart.fromBufferAttribute(f,p),s.rayEnd.fromBufferAttribute(c,p),s.rayStart.w=1,s.rayEnd.w=1,s.rayStart.applyMatrix4(s.mvMatrix),s.rayEnd.applyMatrix4(s.mvMatrix),!(s.rayStart.z>m&&s.rayEnd.z>m)){if(s.rayStart.z>m){var x=s.rayStart.z-s.rayEnd.z,v=(s.rayStart.z-m)/x;s.rayStart.lerp(s.rayEnd,v)}else if(s.rayEnd.z>m){var E=s.rayEnd.z-s.rayStart.z,w=(s.rayEnd.z-m)/E;s.rayEnd.lerp(s.rayStart,w)}s.rayStart.applyMatrix4(i),s.rayEnd.applyMatrix4(i),s.rayStart.multiplyScalar(1/s.rayStart.w),s.rayEnd.multiplyScalar(1/s.rayEnd.w),s.rayStart.x*=o.x/2,s.rayStart.y*=o.y/2,s.rayEnd.x*=o.x/2,s.rayEnd.y*=o.y/2,s.line.start.set(s.rayStart.x,s.rayStart.y,s.rayStart.z),s.line.start.z=0,s.line.end.set(s.rayEnd.x,s.rayEnd.y,s.rayEnd.z),s.line.end.z=0;var b=s.line.closestPointToPointParameter(s.ssOrigin3,!0);s.line.at(b,s.closestPoint);var M=a.MathUtils.lerp(s.rayStart.z,s.rayEnd.z,b),O=M>=-1&&M<=1,z=s.ssOrigin3.distanceTo(s.closestPoint)<.5*y;if(O&&z){s.line.start.fromBufferAttribute(f,p),s.line.end.fromBufferAttribute(c,p),s.line.start.applyMatrix4(S),s.line.end.applyMatrix4(S);var h=new a.Vector3,L=new a.Vector3;r.distanceSqToSegment(s.line.start,s.line.end,L,h),e.push({distance:r.origin.distanceTo(L),point:L,face:null,faceIndex:p,object:l.default(s),uv:void 0,pointOnLine:h})}}}})),s}return d.default(e,t),e}(a.Mesh);exports.LineSegments2=o;
