"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("three"),e=require("mmd-parser");exports.MMDExporter=function(){var n;this.parseVpd=function(t,o,a){if(!0!==t.isSkinnedMesh)return console.warn("THREE.MMDExporter: parseVpd() requires SkinnedMesh instance."),null;function i(r){Math.abs(r)<1e-6&&(r=0);var e=r.toString();-1===e.indexOf(".")&&(e+=".");var n=(e+="000000").indexOf(".");return e.slice(0,n)+"."+e.slice(n+1,n+7)}function s(r){for(var e=[],n=0,t=r.length;n<t;n++)e.push(i(r[n]));return e.join(",")}t.updateMatrixWorld(!0);var u=t.skeleton.bones,p=function(r){var e=r.clone();return e.pose(),e.skeleton.bones}(t),h=new r.Vector3,c=new r.Quaternion,l=new r.Quaternion,v=new r.Matrix4,d=[];d.push("Vocaloid Pose Data file"),d.push(""),d.push((""!==t.name?t.name.replace(/\s/g,"_"):"skin")+".osm;"),d.push(u.length+";"),d.push("");for(var f=0,x=u.length;f<x;f++){var M=u[f],g=p[f];!0===a&&void 0!==M.userData.ik&&void 0!==M.userData.ik.originalMatrix?v.fromArray(M.userData.ik.originalMatrix):v.copy(M.matrix),h.setFromMatrixPosition(v),c.setFromRotationMatrix(v);var m=h.sub(g.position).toArray(),k=l.copy(g.quaternion).conjugate().multiply(c).toArray();m[2]=-m[2],k[0]=-k[0],k[1]=-k[1],d.push("Bone"+f+"{"+M.name),d.push("  "+s(m)+";"),d.push("  "+s(k)+";"),d.push("}"),d.push("")}d.push("");var y=d.join("\n");return!0===o?function(r){if(void 0===n){var t=(new e.CharsetEncoder).s2uTable;n={};for(var o=Object.keys(t),a=0,i=o.length;a<i;a++){var s=o[a],u=t[s];s=parseInt(s),n[u]=s}}for(var p=[],h=0,c=r.length;h<c;h++){var l=r.charCodeAt(h);if(void 0===(u=n[l]))throw"cannot convert charcode 0x"+l.toString(16);u>255?(p.push(u>>8&255),p.push(255&u)):p.push(255&u)}return new Uint8Array(p)}(y):y}};
