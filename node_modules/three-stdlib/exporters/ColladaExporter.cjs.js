"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three"),r=function(){};r.prototype={constructor:r,parse:function(r,t,a){a=a||{},""!==(a=Object.assign({version:"1.4.1",author:null,textureDirectory:""},a)).textureDirectory&&(a.textureDirectory=(a.textureDirectory+"/").replace(/\\/g,"/").replace(/\/+/g,"/"));var i,n,o=a.version;if("1.4.1"!==o&&"1.5.0"!==o)return console.warn("ColladaExporter : Version "+o+" not supported for export. Only 1.4.1 and 1.5.0."),null;function s(e,r){return i=i||document.createElement("canvas"),n=n||i.getContext("2d"),i.width=e.width,i.height=e.height,n.drawImage(e,0,0),function(e){for(var r=atob(e),t=new Uint8Array(r.length),a=0,i=t.length;a<i;a++)t[a]=r.charCodeAt(a);return t}(i.toDataURL("image/"+r,1).replace(/^data:image\/(png|jpg);base64,/,""))}var u,c=["getX","getY","getZ","getW"];function l(e){if(e.isInterleavedBufferAttribute){for(var r=new e.array.constructor(e.count*e.itemSize),t=e.itemSize,a=0,i=e.count;a<i;a++)for(var n=0;n<t;n++)r[a*t+n]=e[c[n]](a);return r}return e.array}function m(e,r,t,a){var i=l(e);return'<source id="'+r+'"><float_array id="'+r+'-array" count="'+i.length+'">'+i.join(" ")+'</float_array><technique_common><accessor source="#'+r+'-array" count="'+Math.floor(i.length/e.itemSize)+'" stride="'+e.itemSize+'">'+t.map((function(e){return'<param name="'+e+'" type="'+a+'" />'})).join("")+"</accessor></technique_common></source>"}function p(e){var r=g.get(e);if(null==r){r="image-"+(y.length+1);var t="png",i=e.name||r,n='<image id="'+r+'" name="'+i+'">';n+="1.5.0"===o?"<init_from><ref>"+a.textureDirectory+i+"."+"png</ref></init_from>":"<init_from>"+a.textureDirectory+i+"."+"png</init_from>",n+="</image>",y.push(n),g.set(e,r),h.push({directory:a.textureDirectory,name:i,ext:t,data:s(e.image,t),original:e})}return r}var f=new WeakMap,d=new WeakMap,g=new WeakMap,h=[],y=[],v=[],_=[],x=[],b=function r(t){var a='<node name="'+t.name+'">';if(a+=function(r){return r.updateMatrix(),(u=u||new e.Matrix4).copy(r.matrix),u.transpose(),"<matrix>"+u.toArray().join(" ")+"</matrix>"}(t),!0===t.isMesh&&null!==t.geometry){var i=function(e){var r,t,a,i=f.get(e);if(!i){var n=e;if(!0!==n.isBufferGeometry)throw new Error("THREE.ColladaExporter: Geometry is not of type THREE.BufferGeometry.");var o="Mesh"+(v.length+1),s=n.index?n.index.count*n.index.itemSize:n.attributes.position.count,u=null!=n.groups&&0!==n.groups.length?n.groups:[{start:0,count:s,materialIndex:0}],c='<geometry id="'+o+'"'+(e.name?' name="'+e.name+'"':"")+"><mesh>",p=o+"-position",d=o+"-vertices";c+=m(n.attributes.position,p,["X","Y","Z"],"float"),c+='<vertices id="'+d+'"><input semantic="POSITION" source="#'+p+'" /></vertices>';var g='<input semantic="VERTEX" source="#'+d+'" offset="0" />';if("normal"in n.attributes){var h=o+"-normal";c+=m(n.attributes.normal,h,["X","Y","Z"],"float"),g+='<input semantic="NORMAL" source="#'+h+'" offset="0" />'}if("uv"in n.attributes){var y=o+"-texcoord";c+=m(n.attributes.uv,y,["S","T"],"float"),g+='<input semantic="TEXCOORD" source="#'+y+'" offset="0" set="0" />'}if("uv2"in n.attributes&&(y=o+"-texcoord2",c+=m(n.attributes.uv2,y,["S","T"],"float"),g+='<input semantic="TEXCOORD" source="#'+y+'" offset="0" set="1" />'),"color"in n.attributes){var _=o+"-color";c+=m(n.attributes.color,_,["X","Y","Z"],"uint8"),g+='<input semantic="COLOR" source="#'+_+'" offset="0" />'}var x=null;if(n.index)x=l(n.index);else for(var b=0,w=(x=new Array(s)).length;b<w;b++)x[b]=b;for(var M=0,D=u.length;M<D;M++){var E=u[M],O=(r=x,t=E.start,a=E.count,Array.isArray(r)?r.slice(t,t+a):new r.constructor(r.buffer,t*r.BYTES_PER_ELEMENT,a)),C=O.length/3;c+='<triangles material="MESH_MATERIAL_'+E.materialIndex+'" count="'+C+'">',c+=g,c+="<p>"+O.join(" ")+"</p>",c+="</triangles>"}c+="</mesh></geometry>",v.push(c),i={meshid:o,bufferGeometry:n},f.set(e,i)}return i}(t.geometry),n=i.meshid,o=i.bufferGeometry,s=null,c=t.material||new e.MeshBasicMaterial,g=Array.isArray(c)?c:[c];s=(o.groups.length>g.length?new Array(o.groups.length):new Array(g.length)).fill().map((function(r,t){return function(r){var t=d.get(r);if(null==t){t="Mat"+(_.length+1);var a="phong";!0===r.isMeshLambertMaterial?a="lambert":!0===r.isMeshBasicMaterial&&(a="constant",null!==r.map&&console.warn("ColladaExporter: Texture maps not supported with MeshBasicMaterial."));var i=r.emissive?r.emissive:new e.Color(0,0,0),n=r.color?r.color:new e.Color(0,0,0),o=r.specular?r.specular:new e.Color(1,1,1),s=r.shininess||0,u=r.reflectivity||0,c="";!0===r.transparent&&(c+="<transparent>"+(r.map?'<texture texture="diffuse-sampler"></texture>':"<float>1</float>")+"</transparent>",r.opacity<1&&(c+="<transparency><float>"+r.opacity+"</float></transparency>"));var l='<technique sid="common"><'+a+"><emission>"+(r.emissiveMap?'<texture texture="emissive-sampler" texcoord="TEXCOORD" />':'<color sid="emission">'+i.r+" "+i.g+" "+i.b+" 1</color>")+"</emission>"+("constant"!==a?"<diffuse>"+(r.map?'<texture texture="diffuse-sampler" texcoord="TEXCOORD" />':'<color sid="diffuse">'+n.r+" "+n.g+" "+n.b+" 1</color>")+"</diffuse>":"")+("constant"!==a?"<bump>"+(r.normalMap?'<texture texture="bump-sampler" texcoord="TEXCOORD" />':"")+"</bump>":"")+("phong"===a?'<specular><color sid="specular">'+o.r+" "+o.g+" "+o.b+" 1</color></specular><shininess>"+(r.specularMap?'<texture texture="specular-sampler" texcoord="TEXCOORD" />':'<float sid="shininess">'+s+"</float>")+"</shininess>":"")+"<reflective><color>"+n.r+" "+n.g+" "+n.b+" 1</color></reflective><reflectivity><float>"+u+"</float></reflectivity>"+c+"</"+a+"></technique>",m='<effect id="'+t+'-effect"><profile_COMMON>'+(r.map?'<newparam sid="diffuse-surface"><surface type="2D"><init_from>'+p(r.map)+'</init_from></surface></newparam><newparam sid="diffuse-sampler"><sampler2D><source>diffuse-surface</source></sampler2D></newparam>':"")+(r.specularMap?'<newparam sid="specular-surface"><surface type="2D"><init_from>'+p(r.specularMap)+'</init_from></surface></newparam><newparam sid="specular-sampler"><sampler2D><source>specular-surface</source></sampler2D></newparam>':"")+(r.emissiveMap?'<newparam sid="emissive-surface"><surface type="2D"><init_from>'+p(r.emissiveMap)+'</init_from></surface></newparam><newparam sid="emissive-sampler"><sampler2D><source>emissive-surface</source></sampler2D></newparam>':"")+(r.normalMap?'<newparam sid="bump-surface"><surface type="2D"><init_from>'+p(r.normalMap)+'</init_from></surface></newparam><newparam sid="bump-sampler"><sampler2D><source>bump-surface</source></sampler2D></newparam>':"")+l+(r.side===e.DoubleSide?'<extra><technique profile="THREEJS"><double_sided sid="double_sided" type="int">1</double_sided></technique></extra>':"")+"</profile_COMMON></effect>",f='<material id="'+t+'"'+(r.name?' name="'+r.name+'"':"")+'><instance_effect url="#'+t+'-effect" /></material>';x.push(f),_.push(m),d.set(r,t)}return t}(g[t%g.length])})),a+='<instance_geometry url="#'+n+'">'+(null!=s?"<bind_material><technique_common>"+s.map((function(e,r){return'<instance_material symbol="MESH_MATERIAL_'+r+'" target="#'+e+'" ><bind_vertex_input semantic="TEXCOORD" input_semantic="TEXCOORD" input_set="0" /></instance_material>'})).join("")+"</technique_common></bind_material>":"")+"</instance_geometry>"}return t.children.forEach((function(e){return a+=r(e)})),a+="</node>"}(r),w='<?xml version="1.0" encoding="UTF-8" standalone="no" ?><COLLADA xmlns="'+("1.4.1"===o?"http://www.collada.org/2005/11/COLLADASchema":"https://www.khronos.org/collada/")+'" version="'+o+'"><asset><contributor><authoring_tool>three.js Collada Exporter</authoring_tool>'+(null!==a.author?"<author>"+a.author+"</author>":"")+"</contributor><created>"+(new Date).toISOString()+"</created><modified>"+(new Date).toISOString()+"</modified><up_axis>Y_UP</up_axis></asset>";w+="<library_images>"+y.join("")+"</library_images>",w+="<library_effects>"+_.join("")+"</library_effects>",w+="<library_materials>"+x.join("")+"</library_materials>",w+="<library_geometries>"+v.join("")+"</library_geometries>",w+='<library_visual_scenes><visual_scene id="Scene" name="scene">'+b+"</visual_scene></library_visual_scenes>",w+='<scene><instance_visual_scene url="#Scene"/></scene>';var M,D,E,O,C,A,T={data:(M=w+="</COLLADA>",D=/^<\//,E=/(\?>$)|(\/>$)/,O=/<[^>]+>[^<]*<\/[^<]+>/,C=function e(r,t){return t>0?r+e(r,t-1):""},A=0,M.match(/(<[^>]+>[^<]+<\/[^<]+>)|(<[^>]+>)/g).map((function(e){O.test(e)||E.test(e)||!D.test(e)||A--;var r=""+C("  ",A)+e;return O.test(e)||E.test(e)||D.test(e)||A++,r})).join("\n")),textures:h};return"function"==typeof t&&requestAnimationFrame((function(){return t(T)})),T}},exports.ColladaExporter=r;
