"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three");exports.OutlineEffect=function(i,t){t=t||{},this.enabled=!0;var n=void 0!==t.defaultThickness?t.defaultThickness:.003,a=(new e.Color).fromArray(void 0!==t.defaultColor?t.defaultColor:[0,0,0]),r=void 0!==t.defaultAlpha?t.defaultAlpha:1,l=void 0!==t.defaultKeepAlive&&t.defaultKeepAlive,o={},s={},u={},d={outlineThickness:{value:n},outlineColor:{value:a},outlineAlpha:{value:r}},c=["#include <common>","#include <uv_pars_vertex>","#include <displacementmap_pars_vertex>","#include <fog_pars_vertex>","#include <morphtarget_pars_vertex>","#include <skinning_pars_vertex>","#include <logdepthbuf_pars_vertex>","#include <clipping_planes_pars_vertex>","uniform float outlineThickness;","vec4 calculateOutline( vec4 pos, vec3 normal, vec4 skinned ) {","\tfloat thickness = outlineThickness;","\tconst float ratio = 1.0;","\tvec4 pos2 = projectionMatrix * modelViewMatrix * vec4( skinned.xyz + normal, 1.0 );","\tvec4 norm = normalize( pos - pos2 );","\treturn pos + norm * thickness * pos.w * ratio;","}","void main() {","\t#include <uv_vertex>","\t#include <beginnormal_vertex>","\t#include <morphnormal_vertex>","\t#include <skinbase_vertex>","\t#include <skinnormal_vertex>","\t#include <begin_vertex>","\t#include <morphtarget_vertex>","\t#include <skinning_vertex>","\t#include <displacementmap_vertex>","\t#include <project_vertex>","\tvec3 outlineNormal = - objectNormal;","\tgl_Position = calculateOutline( gl_Position, outlineNormal, vec4( transformed, 1.0 ) );","\t#include <logdepthbuf_vertex>","\t#include <clipping_planes_vertex>","\t#include <fog_vertex>","}"].join("\n"),p=["#include <common>","#include <fog_pars_fragment>","#include <logdepthbuf_pars_fragment>","#include <clipping_planes_pars_fragment>","uniform vec3 outlineColor;","uniform float outlineAlpha;","void main() {","\t#include <clipping_planes_fragment>","\t#include <logdepthbuf_fragment>","\tgl_FragColor = vec4( outlineColor, outlineAlpha );","\t#include <tonemapping_fragment>","\t#include <encodings_fragment>","\t#include <fog_fragment>","\t#include <premultiplied_alpha_fragment>","}"].join("\n");function v(i){var t=function(i){var t=o[i.uuid];return void 0===t&&(t={material:new e.ShaderMaterial({type:"OutlineEffect",uniforms:e.UniformsUtils.merge([e.UniformsLib.fog,e.UniformsLib.displacementmap,d]),vertexShader:c,fragmentShader:p,side:e.BackSide}),used:!0,keepAlive:l,count:0},o[i.uuid]=t),t.used=!0,t.material}(i);return s[t.uuid]=i,function(e,i){if("invisible"===e.name)return;var t=i.userData.outlineParameters;e.skinning=i.skinning,e.morphTargets=i.morphTargets,e.morphNormals=i.morphNormals,e.fog=i.fog,e.toneMapped=i.toneMapped,e.premultipliedAlpha=i.premultipliedAlpha,e.displacementMap=i.displacementMap,void 0!==t?(!1===i.visible?e.visible=!1:e.visible=void 0===t.visible||t.visible,e.transparent=void 0!==t.alpha&&t.alpha<1||i.transparent,void 0!==t.keepAlive&&(o[i.uuid].keepAlive=t.keepAlive)):(e.transparent=i.transparent,e.visible=i.visible);!0!==i.wireframe&&!1!==i.depthTest||(e.visible=!1);i.clippingPlanes&&(e.clipping=!0,e.clippingPlanes=i.clippingPlanes,e.clipIntersection=i.clipIntersection,e.clipShadows=i.clipShadows);e.version=i.version}(t,i),t}function m(e){var i=e.geometry,t=!1;return void 0!==e.geometry&&(t=!i.isBufferGeometry||void 0!==i.attributes.normal),!0===e.isMesh&&void 0!==e.material&&!0===t}function f(e){if(!1!==m(e)){if(Array.isArray(e.material))for(var i=0,t=e.material.length;i<t;i++)e.material[i]=v(e.material[i]);else e.material=v(e.material);u[e.uuid]=e.onBeforeRender,e.onBeforeRender=g}}function h(e){if(!1!==m(e)){if(Array.isArray(e.material))for(var i=0,t=e.material.length;i<t;i++)e.material[i]=s[e.material[i].uuid];else e.material=s[e.material.uuid];e.onBeforeRender=u[e.uuid]}}function g(e,i,t,n,a){var r=s[a.uuid];void 0!==r&&function(e,i){var t=i.userData.outlineParameters;e.uniforms.outlineAlpha.value=i.opacity,void 0!==t&&(void 0!==t.thickness&&(e.uniforms.outlineThickness.value=t.thickness),void 0!==t.color&&e.uniforms.outlineColor.value.fromArray(t.color),void 0!==t.alpha&&(e.uniforms.outlineAlpha.value=t.alpha));i.displacementMap&&(e.uniforms.displacementMap.value=i.displacementMap,e.uniforms.displacementScale.value=i.displacementScale,e.uniforms.displacementBias.value=i.displacementBias)}(a,r)}this.render=function(e,t){var n,a=!1;if(void 0!==arguments[2]&&(console.warn("THREE.OutlineEffect.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.OutlineEffect.render(): the forceClear argument has been removed. Use .clear() instead."),a=arguments[3]),void 0!==n&&i.setRenderTarget(n),a&&i.clear(),!1!==this.enabled){var r=i.autoClear;i.autoClear=this.autoClear,i.render(e,t),i.autoClear=r,this.renderOutline(e,t)}else i.render(e,t)},this.renderOutline=function(e,t){var n=i.autoClear,a=e.autoUpdate,r=e.background,l=i.shadowMap.enabled;e.autoUpdate=!1,e.background=null,i.autoClear=!1,i.shadowMap.enabled=!1,e.traverse(f),i.render(e,t),e.traverse(h),function(){for(var e,i=0,t=(e=Object.keys(s)).length;i<t;i++)s[e[i]]=void 0;for(var n=0,a=(e=Object.keys(u)).length;n<a;n++)u[e[n]]=void 0;for(var r=0,l=(e=Object.keys(o)).length;r<l;r++){var d=e[r];!1===o[d].used?(o[d].count++,!1===o[d].keepAlive&&o[d].count>60&&delete o[d]):(o[d].used=!1,o[d].count=0)}}(),e.autoUpdate=a,e.background=r,i.autoClear=n,i.shadowMap.enabled=l},this.autoClear=i.autoClear,this.domElement=i.domElement,this.shadowMap=i.shadowMap,this.clear=function(e,t,n){i.clear(e,t,n)},this.getPixelRatio=function(){return i.getPixelRatio()},this.setPixelRatio=function(e){i.setPixelRatio(e)},this.getSize=function(e){return i.getSize(e)},this.setSize=function(e,t,n){i.setSize(e,t,n)},this.setViewport=function(e,t,n,a){i.setViewport(e,t,n,a)},this.setScissor=function(e,t,n,a){i.setScissor(e,t,n,a)},this.setScissorTest=function(e){i.setScissorTest(e)},this.setRenderTarget=function(e){i.setRenderTarget(e)}};
