"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three"),t=function t(r,a){e.Mesh.call(this,r),this.type="Reflector";var o=this,n=void 0!==(a=a||{}).color?new e.Color(a.color):new e.Color(8355711),i=a.textureWidth||512,l=a.textureHeight||512,s=a.clipBias||0,d=a.shader||t.ReflectorShader,c=new e.Plane,u=new e.Vector3,v=new e.Vector3,m=new e.Vector3,p=new e.Matrix4,x=new e.Vector3(0,0,-1),f=new e.Vector4,b=new e.Vector3,M=new e.Vector3,h=new e.Vector4,w=new e.Matrix4,g=new e.PerspectiveCamera,y={minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBFormat},R=new e.WebGLRenderTarget(i,l,y);e.MathUtils.isPowerOfTwo(i)&&e.MathUtils.isPowerOfTwo(l)||(R.texture.generateMipmaps=!1);var U=new e.ShaderMaterial({uniforms:e.UniformsUtils.clone(d.uniforms),fragmentShader:d.fragmentShader,vertexShader:d.vertexShader});U.uniforms.tDiffuse.value=R.texture,U.uniforms.color.value=n,U.uniforms.textureMatrix.value=w,this.material=U,this.onBeforeRender=function(e,t,r){if(v.setFromMatrixPosition(o.matrixWorld),m.setFromMatrixPosition(r.matrixWorld),p.extractRotation(o.matrixWorld),u.set(0,0,1),u.applyMatrix4(p),b.subVectors(v,m),!(b.dot(u)>0)){b.reflect(u).negate(),b.add(v),p.extractRotation(r.matrixWorld),x.set(0,0,-1),x.applyMatrix4(p),x.add(m),M.subVectors(v,x),M.reflect(u).negate(),M.add(v),g.position.copy(b),g.up.set(0,1,0),g.up.applyMatrix4(p),g.up.reflect(u),g.lookAt(M),g.far=r.far,g.updateMatrixWorld(),g.projectionMatrix.copy(r.projectionMatrix),w.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),w.multiply(g.projectionMatrix),w.multiply(g.matrixWorldInverse),w.multiply(o.matrixWorld),c.setFromNormalAndCoplanarPoint(u,v),c.applyMatrix4(g.matrixWorldInverse),f.set(c.normal.x,c.normal.y,c.normal.z,c.constant);var a=g.projectionMatrix;h.x=(Math.sign(f.x)+a.elements[8])/a.elements[0],h.y=(Math.sign(f.y)+a.elements[9])/a.elements[5],h.z=-1,h.w=(1+a.elements[10])/a.elements[14],f.multiplyScalar(2/f.dot(h)),a.elements[2]=f.x,a.elements[6]=f.y,a.elements[10]=f.z+1-s,a.elements[14]=f.w,R.texture.encoding=e.outputEncoding,o.visible=!1;var n=e.getRenderTarget(),i=e.xr.enabled,l=e.shadowMap.autoUpdate;e.xr.enabled=!1,e.shadowMap.autoUpdate=!1,e.setRenderTarget(R),e.state.buffers.depth.setMask(!0),!1===e.autoClear&&e.clear(),e.render(t,g),e.xr.enabled=i,e.shadowMap.autoUpdate=l,e.setRenderTarget(n);var d=r.viewport;void 0!==d&&e.state.viewport(d),o.visible=!0}},this.getRenderTarget=function(){return R}};(t.prototype=Object.create(e.Mesh.prototype)).constructor=t,t.ReflectorShader={uniforms:{color:{value:null},tDiffuse:{value:null},textureMatrix:{value:null}},vertexShader:["uniform mat4 textureMatrix;","varying vec4 vUv;","void main() {","\tvUv = textureMatrix * vec4( position, 1.0 );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D tDiffuse;","varying vec4 vUv;","float blendOverlay( float base, float blend ) {","\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );","}","vec3 blendOverlay( vec3 base, vec3 blend ) {","\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );","}","void main() {","\tvec4 base = texture2DProj( tDiffuse, vUv );","\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );","}"].join("\n")},exports.Reflector=t;
