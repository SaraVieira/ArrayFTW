"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three"),i=function i(){e.Mesh.call(this,i.Geometry,new e.MeshBasicMaterial({opacity:0,transparent:!0})),this.type="Lensflare",this.frustumCulled=!1,this.renderOrder=1/0;var t=new e.Vector3,r=new e.Vector3,o=new e.DataTexture(new Uint8Array(768),16,16,e.RGBFormat);o.minFilter=e.NearestFilter,o.magFilter=e.NearestFilter,o.wrapS=e.ClampToEdgeWrapping,o.wrapT=e.ClampToEdgeWrapping;var a=new e.DataTexture(new Uint8Array(768),16,16,e.RGBFormat);a.minFilter=e.NearestFilter,a.magFilter=e.NearestFilter,a.wrapS=e.ClampToEdgeWrapping,a.wrapT=e.ClampToEdgeWrapping;var s=i.Geometry,l=new e.RawShaderMaterial({uniforms:{scale:{value:null},screenPosition:{value:null}},vertexShader:["precision highp float;","uniform vec3 screenPosition;","uniform vec2 scale;","attribute vec3 position;","void main() {","\tgl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision highp float;","void main() {","\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 1.0 );","}"].join("\n"),depthTest:!0,depthWrite:!1,transparent:!1}),c=new e.RawShaderMaterial({uniforms:{map:{value:o},scale:{value:null},screenPosition:{value:null}},vertexShader:["precision highp float;","uniform vec3 screenPosition;","uniform vec2 scale;","attribute vec3 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","\tvUV = uv;","\tgl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision highp float;","uniform sampler2D map;","varying vec2 vUV;","void main() {","\tgl_FragColor = texture2D( map, vUV );","}"].join("\n"),depthTest:!1,depthWrite:!1,transparent:!1}),u=new e.Mesh(s,l),v=[],p=n.Shader,f=new e.RawShaderMaterial({uniforms:{map:{value:null},occlusionMap:{value:a},color:{value:new e.Color(16777215)},scale:{value:new e.Vector2},screenPosition:{value:new e.Vector3}},vertexShader:p.vertexShader,fragmentShader:p.fragmentShader,blending:e.AdditiveBlending,transparent:!0,depthWrite:!1}),m=new e.Mesh(s,f);this.addElement=function(e){v.push(e)};var d=new e.Vector2,y=new e.Vector2,h=new e.Box2,x=new e.Vector4;this.onBeforeRender=function(e,i,n){e.getCurrentViewport(x);var p=x.w/x.z,g=x.z/2,w=x.w/2,b=16/x.w;if(d.set(b*p,b),h.min.set(x.x,x.y),h.max.set(x.x+(x.z-16),x.y+(x.w-16)),r.setFromMatrixPosition(this.matrixWorld),r.applyMatrix4(n.matrixWorldInverse),!(r.z>0)&&(t.copy(r).applyMatrix4(n.projectionMatrix),y.x=x.x+t.x*g+g-8,y.y=x.y+t.y*w+w-8,h.containsPoint(y))){e.copyFramebufferToTexture(y,o),(F=l.uniforms).scale.value=d,F.screenPosition.value=t,e.renderBufferDirect(n,null,s,l,u,null),e.copyFramebufferToTexture(y,a),(F=c.uniforms).scale.value=d,F.screenPosition.value=t,e.renderBufferDirect(n,null,s,c,u,null);for(var M=2*-t.x,P=2*-t.y,V=0,D=v.length;V<D;V++){var F,S=v[V];(F=f.uniforms).color.value.copy(S.color),F.map.value=S.texture,F.screenPosition.value.x=t.x+M*S.distance,F.screenPosition.value.y=t.y+P*S.distance;b=S.size/x.w,p=x.w/x.z;F.scale.value.set(b*p,b),f.uniformsNeedUpdate=!0,e.renderBufferDirect(n,null,s,f,m,null)}}},this.dispose=function(){l.dispose(),c.dispose(),f.dispose(),o.dispose(),a.dispose();for(var e=0,i=v.length;e<i;e++)v[e].texture.dispose()}};(i.prototype=Object.create(e.Mesh.prototype)).constructor=i,i.prototype.isLensflare=!0;var t,r,o,n=function(i,t,r,o){this.texture=i,this.size=t||1,this.distance=r||0,this.color=o||new e.Color(16777215)};n.Shader={uniforms:{map:{value:null},occlusionMap:{value:null},color:{value:null},scale:{value:null},screenPosition:{value:null}},vertexShader:["precision highp float;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform sampler2D occlusionMap;","attribute vec3 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","\tvUV = uv;","\tvec2 pos = position.xy;","\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","\tvVisibility =        visibility.r / 9.0;","\tvVisibility *= 1.0 - visibility.g / 9.0;","\tvVisibility *=       visibility.b / 9.0;","\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision highp float;","uniform sampler2D map;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","\tvec4 texture = texture2D( map, vUV );","\ttexture.a *= vVisibility;","\tgl_FragColor = texture;","\tgl_FragColor.rgb *= color;","}"].join("\n")},i.Geometry=(t=new e.BufferGeometry,r=new Float32Array([-1,-1,0,0,0,1,-1,0,1,0,1,1,0,1,1,-1,1,0,0,1]),o=new e.InterleavedBuffer(r,5),t.setIndex([0,1,2,0,2,3]),t.setAttribute("position",new e.InterleavedBufferAttribute(o,3,0,!1)),t.setAttribute("uv",new e.InterleavedBufferAttribute(o,2,3,!1)),t),exports.Lensflare=i,exports.LensflareElement=n;
