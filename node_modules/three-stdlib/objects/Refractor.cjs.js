"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three"),r=function r(t,a){e.Mesh.call(this,t),this.type="Refractor";var o=this,n=void 0!==(a=a||{}).color?new e.Color(a.color):new e.Color(8355711),i=a.textureWidth||512,l=a.textureHeight||512,s=a.clipBias||0,c=a.shader||r.RefractorShader,u=new e.PerspectiveCamera;u.matrixAutoUpdate=!1,u.userData.refractor=!0;var d=new e.Plane,m=new e.Matrix4,v={minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBFormat},x=new e.WebGLRenderTarget(i,l,v);e.MathUtils.isPowerOfTwo(i)&&e.MathUtils.isPowerOfTwo(l)||(x.texture.generateMipmaps=!1),this.material=new e.ShaderMaterial({uniforms:e.UniformsUtils.clone(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,transparent:!0}),this.material.uniforms.color.value=n,this.material.uniforms.tDiffuse.value=x.texture,this.material.uniforms.textureMatrix.value=m;var p,f,b,h,w,M,y,g,W=(p=new e.Vector3,f=new e.Vector3,b=new e.Matrix4,h=new e.Vector3,w=new e.Vector3,function(e){return p.setFromMatrixPosition(o.matrixWorld),f.setFromMatrixPosition(e.matrixWorld),h.subVectors(p,f),b.extractRotation(o.matrixWorld),w.set(0,0,1),w.applyMatrix4(b),h.dot(w)<0}),R=function(){var r=new e.Vector3,t=new e.Vector3,a=new e.Quaternion,n=new e.Vector3;return function(){o.matrixWorld.decompose(t,a,n),r.set(0,0,1).applyQuaternion(a).normalize(),r.negate(),d.setFromNormalAndCoplanarPoint(r,t)}}(),U=(M=new e.Plane,y=new e.Vector4,g=new e.Vector4,function(e){u.matrixWorld.copy(e.matrixWorld),u.matrixWorldInverse.copy(u.matrixWorld).invert(),u.projectionMatrix.copy(e.projectionMatrix),u.far=e.far,M.copy(d),M.applyMatrix4(u.matrixWorldInverse),y.set(M.normal.x,M.normal.y,M.normal.z,M.constant);var r=u.projectionMatrix;g.x=(Math.sign(y.x)+r.elements[8])/r.elements[0],g.y=(Math.sign(y.y)+r.elements[9])/r.elements[5],g.z=-1,g.w=(1+r.elements[10])/r.elements[14],y.multiplyScalar(2/y.dot(g)),r.elements[2]=y.x,r.elements[6]=y.y,r.elements[10]=y.z+1-s,r.elements[14]=y.w});this.onBeforeRender=function(e,r,t){x.texture.encoding=e.outputEncoding,!0!==t.userData.refractor&&!0!=!W(t)&&(R(),function(e){m.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),m.multiply(e.projectionMatrix),m.multiply(e.matrixWorldInverse),m.multiply(o.matrixWorld)}(t),U(t),function(e,r,t){o.visible=!1;var a=e.getRenderTarget(),n=e.xr.enabled,i=e.shadowMap.autoUpdate;e.xr.enabled=!1,e.shadowMap.autoUpdate=!1,e.setRenderTarget(x),!1===e.autoClear&&e.clear(),e.render(r,u),e.xr.enabled=n,e.shadowMap.autoUpdate=i,e.setRenderTarget(a);var l=t.viewport;void 0!==l&&e.state.viewport(l),o.visible=!0}(e,r,t))},this.getRenderTarget=function(){return x}};(r.prototype=Object.create(e.Mesh.prototype)).constructor=r,r.RefractorShader={uniforms:{color:{value:null},tDiffuse:{value:null},textureMatrix:{value:null}},vertexShader:["uniform mat4 textureMatrix;","varying vec4 vUv;","void main() {","\tvUv = textureMatrix * vec4( position, 1.0 );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D tDiffuse;","varying vec4 vUv;","float blendOverlay( float base, float blend ) {","\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );","}","vec3 blendOverlay( vec3 base, vec3 blend ) {","\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );","}","void main() {","\tvec4 base = texture2DProj( tDiffuse, vUv );","\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );","}"].join("\n")},exports.Refractor=r;
