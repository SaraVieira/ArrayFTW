"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@babel/runtime/helpers/inheritsLoose"),t=require("three");function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var i=s(e),a=function(e){function s(s){var i;(i=e.call(this)||this).csm=s,i.displayFrustum=!0,i.displayPlanes=!0,i.displayShadowBounds=!0;var a=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),o=new t.BufferGeometry;o.setIndex(new t.BufferAttribute(a,1)),o.setAttribute("position",new t.BufferAttribute(r,3,!1));var n=new t.LineSegments(o,new t.LineBasicMaterial);return i.add(n),i.frustumLines=n,i.cascadeLines=[],i.cascadePlanes=[],i.shadowLines=[],i}i.default(s,e);var a=s.prototype;return a.updateVisibility=function(){for(var e=this.displayFrustum,t=this.displayPlanes,s=this.displayShadowBounds,i=this.frustumLines,a=this.cascadeLines,r=this.cascadePlanes,o=this.shadowLines,n=0,u=a.length;n<u;n++){var p=a[n],c=r[n],d=o[n];p.visible=e,c.visible=e&&t,d.visible=s}i.visible=e},a.update=function(){var e=this.csm,s=e.camera,i=e.cascades,a=e.mainFrustum,r=e.frustums,o=e.lights,n=this.frustumLines.geometry.getAttribute("position"),u=this.cascadeLines,p=this.cascadePlanes,c=this.shadowLines;for(this.position.copy(s.position),this.quaternion.copy(s.quaternion),this.scale.copy(s.scale),this.updateMatrixWorld(!0);u.length>i;)this.remove(u.pop()),this.remove(p.pop()),this.remove(c.pop());for(;u.length<i;){var d=new t.Box3Helper(new t.Box3,16777215),l=new t.MeshBasicMaterial({transparent:!0,opacity:.1,depthWrite:!1,side:t.DoubleSide}),h=new t.Mesh(new t.PlaneGeometry,l),y=new t.Group,f=new t.Box3Helper(new t.Box3,16776960);y.add(f),this.add(d),this.add(h),this.add(y),u.push(d),p.push(h),c.push(y)}for(var m=0;m<i;m++){var v=r[m],x=o[m].shadow.camera,b=v.vertices.far,w=u[m],L=p[m],B=c[m],z=B.children[0];w.box.min.copy(b[2]),w.box.max.copy(b[0]),w.box.max.z+=1e-4,L.position.addVectors(b[0],b[2]),L.position.multiplyScalar(.5),L.scale.subVectors(b[0],b[2]),L.scale.z=1e-4,this.remove(B),B.position.copy(x.position),B.quaternion.copy(x.quaternion),B.scale.copy(x.scale),B.updateMatrixWorld(!0),this.attach(B),z.box.min.set(x.bottom,x.left,-x.far),z.box.max.set(x.top,x.right,-x.near)}var g=a.vertices.near,M=a.vertices.far;n.setXYZ(0,M[0].x,M[0].y,M[0].z),n.setXYZ(1,M[3].x,M[3].y,M[3].z),n.setXYZ(2,M[2].x,M[2].y,M[2].z),n.setXYZ(3,M[1].x,M[1].y,M[1].z),n.setXYZ(4,g[0].x,g[0].y,g[0].z),n.setXYZ(5,g[3].x,g[3].y,g[3].z),n.setXYZ(6,g[2].x,g[2].y,g[2].z),n.setXYZ(7,g[1].x,g[1].y,g[1].z),n.needsUpdate=!0},s}(t.Group);exports.CSMHelper=a;
