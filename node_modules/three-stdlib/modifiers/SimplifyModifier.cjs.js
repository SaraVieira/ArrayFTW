"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@babel/runtime/helpers/defineProperty"),t=require("three"),o=require("../BufferGeometryUtils-62c024b1.js");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}require("../types/helpers.cjs.js");var s=i(e),r=new t.Vector3,n=new t.Vector3;function h(e,t){var o=e.indexOf(t);o>-1&&e.splice(o,1)}var a=function(){function e(e,t){s.default(this,"position",void 0),s.default(this,"id",void 0),s.default(this,"faces",void 0),s.default(this,"neighbors",void 0),s.default(this,"collapseCost",void 0),s.default(this,"collapseNeighbor",void 0),s.default(this,"minCost",0),s.default(this,"totalCost",0),s.default(this,"costCount",0),this.position=e,this.id=t,this.faces=[],this.neighbors=[],this.collapseCost=0,this.collapseNeighbor=null}var t=e.prototype;return t.addUniqueNeighbor=function(e){var t,o;t=this.neighbors,o=e,-1===t.indexOf(o)&&t.push(o)},t.removeIfNonNeighbor=function(e){var t=this.neighbors,o=this.faces,i=t.indexOf(e);if(-1!==i){for(var s=0;s<o.length;s++)if(o[s].hasVertex(e))return;t.splice(i,1)}},e}(),f=function(){function e(e,o,i,r,n,h){s.default(this,"a",void 0),s.default(this,"b",void 0),s.default(this,"c",void 0),s.default(this,"v1",void 0),s.default(this,"v2",void 0),s.default(this,"v3",void 0),s.default(this,"normal",new t.Vector3),this.a=r,this.b=n,this.c=h,this.v1=e,this.v2=o,this.v3=i,this.computeNormal(),e.faces.push(this),e.addUniqueNeighbor(o),e.addUniqueNeighbor(i),o.faces.push(this),o.addUniqueNeighbor(e),o.addUniqueNeighbor(i),i.faces.push(this),i.addUniqueNeighbor(e),i.addUniqueNeighbor(o)}var o=e.prototype;return o.computeNormal=function(){var e=this.v1.position,t=this.v2.position,o=this.v3.position;r.subVectors(o,t),n.subVectors(e,t),r.cross(n).normalize(),this.normal.copy(r)},o.hasVertex=function(e){return e===this.v1||e===this.v2||e===this.v3},o.replaceVertex=function(e,t){e===this.v1?this.v1=t:e===this.v2?this.v2=t:e===this.v3&&(this.v3=t),h(e.faces,this),t.faces.push(this),e.removeIfNonNeighbor(this.v1),this.v1.removeIfNonNeighbor(e),e.removeIfNonNeighbor(this.v2),this.v2.removeIfNonNeighbor(e),e.removeIfNonNeighbor(this.v3),this.v3.removeIfNonNeighbor(e),this.v1.addUniqueNeighbor(this.v2),this.v1.addUniqueNeighbor(this.v3),this.v2.addUniqueNeighbor(this.v1),this.v2.addUniqueNeighbor(this.v3),this.v3.addUniqueNeighbor(this.v1),this.v3.addUniqueNeighbor(this.v2),this.computeNormal()},e}(),l=function(){function e(){var e=this;s.default(this,"computeEdgeCollapseCost",(function(e,t){var o,i,s,r=t.position.distanceTo(e.position),n=0,h=[],a=e.faces.length;for(o=0;o<a;o++)(i=e.faces[o]).hasVertex(t)&&h.push(i);for(o=0;o<a;o++){var f=1;i=e.faces[o];for(var l=0;l<h.length;l++){s=h[l];var u=i.normal.dot(s.normal);f=Math.min(f,(1.001-u)/2)}n=Math.max(n,f)}return h.length<2&&(n=1),r*n+0})),s.default(this,"computeEdgeCostAtVertex",(function(t){if(0===t.neighbors.length)return t.collapseNeighbor=null,void(t.collapseCost=-.01);t.collapseCost=1e5,t.collapseNeighbor=null;for(var o=0;o<t.neighbors.length;o++){var i=e.computeEdgeCollapseCost(t,t.neighbors[o]);t.collapseNeighbor||(t.collapseNeighbor=t.neighbors[o],t.collapseCost=i,t.minCost=i,t.totalCost=0,t.costCount=0),t.costCount++,t.totalCost+=i,i<t.minCost&&(t.collapseNeighbor=t.neighbors[o],t.minCost=i)}t.collapseCost=t.totalCost/t.costCount})),s.default(this,"removeFace",(function(e,t){h(t,e),e.v1&&h(e.v1.faces,e),e.v2&&h(e.v2.faces,e),e.v3&&h(e.v3.faces,e);for(var o,i,s=[e.v1,e.v2,e.v3],r=0;r<3;r++)i=s[(r+1)%3],(o=s[r])&&i&&(o.removeIfNonNeighbor(i),i.removeIfNonNeighbor(o))})),s.default(this,"collapse",(function(t,o,i,s){if(s){var r,n=[];for(r=0;r<i.neighbors.length;r++)n.push(i.neighbors[r]);for(r=i.faces.length-1;r>=0;r--)i.faces[r].hasVertex(s)&&e.removeFace(i.faces[r],o);for(r=i.faces.length-1;r>=0;r--)i.faces[r].replaceVertex(i,s);for(e.removeVertex(i,t),r=0;r<n.length;r++)e.computeEdgeCostAtVertex(n[r])}else e.removeVertex(i,t)})),s.default(this,"minimumCostEdge",(function(e){for(var t=e[0],o=0;o<e.length;o++)e[o].collapseCost<t.collapseCost&&(t=e[o]);return t})),s.default(this,"modify",(function(i,s){var r=(i=i.clone()).attributes;for(var n in r)"position"!==n&&i.deleteAttribute(n);for(var h=[],l=[],u=(i=o.mergeVertices(i)).getAttribute("position"),v=0;v<u.count;v++){var c=(new t.Vector3).fromBufferAttribute(u,v),d=new a(c,v);h.push(d)}var g,p=i.getIndex();if(null!==p)for(var b=0;b<p.count;b+=3){var m=p.getX(b),N=p.getX(b+1),C=p.getX(b+2),x=new f(h[m],h[N],h[C],m,N,C);l.push(x)}else for(var V=0;V<u.count;V+=3){var q=V,y=V+1,U=V+2,I=new f(h[q],h[y],h[U],q,y,U);l.push(I)}for(var w=0,E=h.length;w<E;w++)e.computeEdgeCostAtVertex(h[w]);for(var A=s;A--;){if(!(g=e.minimumCostEdge(h))){console.log("THREE.SimplifyModifier: No next vertex");break}e.collapse(h,l,g,g.collapseNeighbor)}for(var O=new t.BufferGeometry,j=[],M=[],B=0;B<h.length;B++){var F=h[B].position;j.push(F.x,F.y,F.z)}for(var X=0;X<l.length;X++){var z=l[X],G=h.indexOf(z.v1),P=h.indexOf(z.v2),S=h.indexOf(z.v3);M.push(G,P,S)}return O.setAttribute("position",new t.Float32BufferAttribute(j,3)),O.setIndex(M),O}))}return e.prototype.removeVertex=function(e,t){for(console.assert(0===e.faces.length);e.neighbors.length;){h(e.neighbors.pop().neighbors,e)}h(t,e)},e}();exports.SimplifyModifier=l;
